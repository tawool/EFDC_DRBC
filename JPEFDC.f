C
C**********************************************************************C
C**********************************************************************C
C**********************************************************************C
C
      SUBROUTINE JPEFDC
C
C **  PROGRAM JPEFDC IS STAND ALONE VERSION OF EFDC JET-PLUME MODEL
C **  BASED ON LEE AND CHEUNG'S LAGRANGIAN BUOYANT JET MODEL
C **  AND EXTENDED FOR THREE-DIMENSIONAL AMBIENT CURRENTS
C **    REF: LEE, J.H.W., AND V. CHEUNG, J. ENVIRON. ENGR., 116, 1085-
C **    1106, 1990.
C
C **  FOR MORE INFO EMAIL HAM@VISI.NET
C
C**********************************************************************C
C
C **  THIS SUBROUTINE IS PART OF  EFDC-FULL VERSION 1.0a
C
C **  LAST MODIFIED BY JOHN HAMRICK ON 1 NOVEMBER 2001
C
C----------------------------------------------------------------------C
C
C CHANGE RECORD
C DATE MODIFIED     BY                 DATE APPROVED    BY
C
C----------------------------------------------------------------------C
C
C**********************************************************************C
C
      INCLUDE 'EFDC.PAR'
      INCLUDE 'EFDC.CMN'
C
      PARAMETER (NJELM=2,NATDM=1)
C      IMPLICIT REAL*8 (A-H,O-Z)
C
C**********************************************************************C
C
      DIMENSION XJG(NJELM),YJG(NJELM),ZJG(NJELM),
     &          UJG(NJELM),VJG(NJELM),WJG(NJELM),
     &           QJ(NJELM),QJH(NJELM),SIG(NJELM),
     &         THJL(NJELM),THJG(NJELM),PHJ(NJELM),
     &         RMAJP(0:NJELM),RHOJ(NJELM),
     &         SALJ(NJELM),TEMJ(NJELM),DYEJ(NJELM),SFLJ(NJELM),
     &         SEDJ(NJELM,NSCM),SNDJ(NJELM,NSNM),TOXJ(NJELM,NTXM),
     &         TOXPFJP(NJELM,NSTM,NTXM),TOXPFTJP(NJELM,NTXM),
     &         RADJ(NJELM),RLEJ(NJELM),RDQA(NJELM),
     &         DRMAJS(NJELM),DRMAJF(NJELM)
C
C      DIMENSION ZAD(KCM,NATDM),  TAD(KCM,NATDM), UAGD(KCM,NATDM),
C     &         VAGD(KCM,NATDM), WAGD(KCM,NATDM),SALAD(KCM,NATDM),
C     &        TEMAD(KCM,NATDM),DYEAD(KCM,NATDM),SFLAD(KCM,NATDM),
C     &        TOXAD(KCM,NTXM,NATDM),
C     &        SEDAD(KCM,NSCM,NATDM),SNDAD(KCM,NSNM,NATDM)
C
      DIMENSION XJGNS(NJPSM),YJGNS(NJPSM),ZJGNS(NJPSM),SIGNS(NJPSM),
     &      UJGNS(NJPSM),VJGNS(NJPSM),WJGNS(NJPSM),TIMJP(NJPSM),
     &      RLEJNS(NJPSM),RDQANS(NJPSM),DRMAJNS(NJPSM),
     &      DRHONS(NJPSM),QJNS(NJPSM),RADJNS(NJPSM),RMAJPNS(NJPSM),
CJHFIX-REMOVE     &      TEMJNS(NJPSM),SALJNS(NJPSM),
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
     &      TEMJNS(NJPSM),SALJNS(NJPSM),DYEJNS(NJPSM),
     &      SEDJNS(NSCM,NJPSM),SNDJNS(NSNM,NJPSM),
     &      TOXJNS(NTXM,NJPSM),TOXPFTNS(NTXM,NJPSM)
C
C      DIMENSION TOXA(NTXM),SEDA(NSCM),SNDA(NSNM)
C
      DIMENSION TOXJET(NTXM),SEDJET(NSCM),SNDJET(NSNM)
C
      DIMENSION TOXJETI(NTXM),SEDJETI(NSCM),SNDJETI(NSNM),
     &          TOXJNE(NTXM),SEDJNE(NSCM),SNDJNE(NSNM)
C
	DIMENSION UJPAVG(KCM,NJPSM),VJPAVG(KCM,NJPSM),WJPAVG(KCM,NJPSM)
C
CJH      CHARACTER*60 TITLE
C
C      COMMON/ADATA/ ZAD,  TAD, UAGD,VAGD, WAGD,SALAD,
C     &        TEMAD,DYEAD,SFLAD,TOXAD,SEDAD,SNDAD
C
C      COMMON/AVAL/ NAZD,NATD,ZVAL,TVAL,UAG, VAG, WAG,SALA,
C     &            TEMA,DYEA,SFLA,TOXA,SEDA,SNDA
C
      CHARACTER*11 FNJPGEO,FNJPVEL,FNJPCON,FNJPTOX,FNJPTPF,FNJPLOG,
     &             FNNRFLD,FNNRFLB
C
      CHARACTER*2  FNNUM(25)
C
C**********************************************************************C
C
C **  SET CONSTANTS
C
      IF(ISDYNSTP.EQ.0)THEN
        TIME=DT*FLOAT(N)+TCON*TBEGIN
        TIME=TIME/TCON
      ELSE
        TIME=TIMESEC/TCON
      ENDIF

      RPI=3.141592654
      G=9.807
      RADDEG=RPI/180.
C
       FNNUM( 1)= '01'
       FNNUM( 2)= '02'
       FNNUM( 3)= '03'
       FNNUM( 4)= '04'
       FNNUM( 5)= '05'
       FNNUM( 6)= '06'
       FNNUM( 7)= '07'
       FNNUM( 8)= '08'
       FNNUM( 9)= '09'
       FNNUM(10)= '10'
       FNNUM(11)= '11'
       FNNUM(12)= '12'
       FNNUM(13)= '13'
       FNNUM(14)= '14'
       FNNUM(15)= '15'
       FNNUM(16)= '16'
       FNNUM(17)= '17'
       FNNUM(18)= '18'
       FNNUM(19)= '19'
       FNNUM(20)= '20'
       FNNUM(21)= '21'
       FNNUM(22)= '22'
       FNNUM(23)= '23'
       FNNUM(24)= '24'
       FNNUM(25)= '25'
C
       OPEN(88,FILE='JPBUG',POSITION='APPEND')
       CLOSE(88,STATUS='DELETE')
C
C**********************************************************************C
C
C **  LOOP OVER ALL JET/PLUME LOCATIONS
C
      DO NJP=1,NQJPIJ
C
      DO K=1,KC
	  QJPENT(K,NJP)=0.0
	  UJPAVG(K,NJP)=0.0
	  VJPAVG(K,NJP)=0.0
	  WJPAVG(K,NJP)=0.0
	ENDDO
C
       FNJPLOG='JPLOG' // FNNUM(NJP) // '.OUT'
C
C       IF(N.EQ.NUDJP(NJP)) OPEN(10,FILE=FNJPLOG,STATUS='UNKNOWN')
C       IF(N.EQ.NUDJP(NJP)) CLOSE(10,STATUS='DELETE')
       IF(N.EQ.1) OPEN(10,FILE=FNJPLOG,STATUS='UNKNOWN')
       IF(N.EQ.1) CLOSE(10,STATUS='DELETE')
       OPEN(10,FILE=FNJPLOG,STATUS='UNKNOWN',POSITION='APPEND')
       WRITE(10,134)NJP,TIME
!       WRITE(8,134)NJP,TIME     !hnr 7/27/2009
       WRITE(6,134)NJP,TIME
C
       IF(N.EQ.1) KEFFJP(NJP)=KQJP(NJP)
       LJP=LIJ(IQJP(NJP),JQJP(NJP))
       KJP=KQJP(NJP)
       KFLAG=0
C       IF(KQJP(NJP).EQ.0)THEN
        ZTMP=(ZJET(NJP)-BELV(LJP))/HP(LJP)
        KJP=NINT(ZTMP)
        IF(KJP.LT.1) KJP=1
        IF(KJP.GT.KC) KJP=KC
C       ENDIF
       IF(ICALJP(NJP).GT.0)THEN
C
C**********************************************************************C
C
C **  READ INPUT DATA
C
CJH      OPEN(1,FILE='JPEFDC.INP',STATUS='UNKNOWN')
C
C----------------------------------------------------------------------C
C
C1   TITLE
C
CJH      DO N=1,7
CJH       READ(1,100)
CJH      ENDDO
CJH      READ(1,*)TITLE
C
C----------------------------------------------------------------------C
C
C2   CONTROLS
C
C    NJEL     MAXIMUM NUMBER OF ELEMENTS ALONG JET/PLUME LENGTH
C    ISAMB  0 FOR SPATIALLY AND TEMPORALLY CONSTANT AMBIENT CONDITIONS
C           1 FOR SPATIALLY VARYING AND TEMPORALLY CONSTANT CONDITIONS
C           2 FOR SPATIALLY AND TEMPORALLY VARYING AMBIENT CONDITIONS
C    ISJPD  0 FOR TEMPORALLY CONSTANT JET/PLUME DISCHARGE
C           1 FOR TEMPORALLY VARYING JET/PLUME DISCHARGE
C    ISENT  0 USE MAXIMUM OF SHEAR AND FORCED ENTRAINMENT
C           1 USE SUM OF SHEAR AND FORCED ENTRAINMENT
C    ISTOP  0 STOP AT SPECIFIED NUMBER OF ELEMENTS
C           1 STOP WHEN CENTERLINE PENETRATES BOTTOM OR SURFACE
C           2 STOP WITH BOUNDARY PENETRATES BOTTOM OR SURFACE
C    ISOUT  0 DIMENSIONAL OUTPUT, 1 NONDIM OUTPUT LENGTH SCALED BY DJET
C           2 NONDIM OUTPUT LENGTH SCALED BY SQRT(PI)*RJET
C    NPRTE    ELEMENT OUTPUT PRINT FREQUENCY
C    CFRD     ADJUSTMENT FACTOR FOR FROUDE NUMBER
C    TUJP     TEMPORAL FREQUENCY FOR UPDATING JET/PLUME (SEC)
C             IF ISJPD = 1
C
CJH      DO N=1,22
CJH       READ(1,100)
CJH      ENDDO
CJH      READ(1,*)NJEL,ISAMB,ISJPD,ISENT,ISTOP,ISOUT,NPRTE,ALPHA,TUJP
CJH      ALPH2=ALPHA*ALPHA
C
C2   EFDC EMBEDDED VERSION
C
C     NJEL -> NJEL(NJP) PASSED FROM EFDC.CMN
C
C     ISAMB=1 FOR INSTANTANEOUS ANALYSIS WITH SPATIALLY VARIABLE
C             CONDITIONS
      ISAMB=1
C
C     ISJPD=0 FOR INSTANTANEOUS ANALYSIS WITH CONSTANT DISCHARGE
C             CONDITIONS
      ISJPD=0
C
C     ISENT -> ISENT(NJP) PASSED FROM EFDC.CMN
C
C     ISTOP SET FROM PASSED COMMON VARIABLE
      ISTOP=ISTJP(NJP)
C
C     ISOUT SET FOR DIMENSIONAL OUTPUT
      ISOUT=0
C
C     NPRTE SET TO DUMMY FLAG 0 TO INTERNALLY CALCUATED SPATIAL
C     PRINT FREQUENCY
      NPRTE=0
C
C     ALPHA SET FROM PASSED COMMON VARIABLE
      ALPHA=CFRD(NJP)
      ALPH2=ALPHA*ALPHA
C
C     TUJP SET TO DUMMAY FLAG OF 0
      TUJP=0
C
C----------------------------------------------------------------------C
C
C3   ITERATION AND ERROR CONTROLS
C
C    NIMAX    MAXIMUM NUMEBER OF ITERATION
C    XYERR    HORIZONTAL TRAJECTORY ERROR CRITERA (M)
C    ZERR     VERTICAL TRAJECTORY ERROR CRITERA (M)
C    RRER     HORIZONTAL TRAJECTORY ERROR CRITERA (M)
C    RLER     VERTICAL TRAJECTORY ERROR CRITERA (M)
C    DMRERR   ENTRAINMENT ERROR CRITERIA
C     NOTE!   NEGATIVE VALUES OF ERROR PARAMETER BYPASSES THIS ERROR
C             CRITERIA
C
CJH      DO N=1,13
CJH       READ(1,100)
CJH      ENDDO
CJH      READ(1,*)NIMAX,XERRM,ZERRM,RRERM,RLERM,DMRERM
CJH      YERRM=XERRM
CJH      IF(XERRM.LT.0) XERRM=1000.
CJH      IF(YERRM.LT.0) YERRM=1000.
CJH      IF(ZERRM.LT.0) ZERRM=1000.
CJH      IF(RRERM.LT.0) RRERM=1000.
CJH      IF(RLERM.LT.0) RLERM=1000.
CJH      IF(DMRERM.LT.0) DMRERM=1000.
C
C3   EFDC EMBEDDED VERSION
C
C     NIMAX SET FROM PASSED COMMON VARIABLE
      NIMAX=NJPMX(NJP)
C
C     ERROR CRITERA BASED ON ENTRAINMENT ERROR PASSED FROM COMMON
      XERRM=1000.
      YERRM=1000.
      ZERRM=1000.
      RRERM=1000.
      RLERM=1000.
      DMRERM=DJPER(NJP)
C
C----------------------------------------------------------------------C
C
C4   SETTLING, CONTAMINANT PARTITIONING AND DECAY
C
C    WSET   SEDIMENT SETTLING VELOCITY (M/S)
C    TPAR   PARTITION COEFFICIENT (L/MG OR M**3/GM)
C    TDCY   CONTAMINANT DECAY RATE (1./SEC)
C
CJH      DO N=1,8
CJH       READ(1,100)
CJH      ENDDO
CJH      READ(1,*)WSET,TPAR,TDCY
C
C4   EFDC EMBEDDED VERSION
C
C    WSET,TPAR,TDCY NOT USED IN EMBEDDED VERSION.  APPROPRIATE
C    EFDC VARIABLES ARE USED INSTEAD
C
C----------------------------------------------------------------------C
C
C5   JET/PLUME LOCATION, ORIENTATION, GEOMENTRY, AND DISCHARGE
C
C    XJET   EAST COORDINATE OF DISCHARGE (M)
C    YJET   NORTH COORDINATE OF DISCHARGE (M)
C    ZJET   ELEVATION OF DISCHARGE (M)
C    PHJET  VERTICAL JET ANGLE POSITIVE FROM HORIZONTAL (DEGREES)
C    THJET  HORIZONTAL JET ANGLE POS COUNTER CLOCKWISE FROM EAST (DEGREES)
C    DJET   DIAMETER OF DISCHARGE PORT (M)
C    QJET   CONSTANT DISCHARGE VELOCITY (M)
C           (NEGATIVE VALUE INDICATES CALCULATE FROM QVJET)
C    QVJET  CONSTANT DISCHARGE RATE (CMS)
C           (NEGATIVE VALUE INDICATES CALCULATE FROM QJET)
C
CJH      DO N=1,15
CJH       READ(1,100)
CJH      ENDDO
CJH      READ(1,*)XJET,YJET,ZJET,PHJET,THJET,DJET,QJET,QVJET
CJHCDEG      PHJET=RADDEG*PHJET
CJHCDEG      THJET=RADDEG*THJET
CJH      RJET=0.5*DJET
CJH      AJET=RPI*RJET*RJET
CJH      IF(QJET.LT.0.)THEN
CJH        QJET=QVJET/AJET
CJH      ENDIF
CJH      IF(QVJET.LT.0.)THEN
CJH         QVJET=QJET*AJET
CJH      ENDIF
C
C5   EFDC EMBEDDED VERSION
C
C     XJET AND YJET SET TO LOCAL ORIGIN OF ZERO
      XJET=0.
      YJET=0.
C
C     ZJET -> ZJET(NJP) PASSED FROM EFDC.CMN
C
C     PHJET -> PHJET(NJP) PASSED FROM EFDC.CMN
C
C     THJET -> THJET(NJP) PASSED FROM EFDC.CMN
C
C     DJET -> DJET(NJP) PASSED FROM EFDC.CMN
C
C     RJET AND AJET SET BELOW
      RJET=0.5*DJET(NJP)
      AJET=RPI*RJET*RJET
C
C     QVJET SET FROM PASSED VOLUME DISCHARGE INFORMATION
C
      IF(ICALJP(NJP).EQ.1)THEN
        QVJET=QQCJP(NJP)
	  QSERTAVG=0.
        DO K=1,KC
          QVJET=QVJET+QSERT(K,NQSERJP(NJP))
	    QSERTAVG=QSERTAVG+QSERT(K,NQSERJP(NJP))
        ENDDO
        IF(QVJET.LE.1.E-16) GOTO 9000
	ENDIF
C
      IF(ICALJP(NJP).EQ.2)THEN
        QVJET=QWRCJP(NJP)+QWRSERT(NQWRSERJP(NJP))
        IF(QVJET.LE.1.E-16) GOTO 9000
	ENDIF
C
C     QJET SET HERE
C
      QVJET0=QVJET
      QJET=QVJET/AJET
C
C----------------------------------------------------------------------C
C
C6   JET/PLUME CONCENTRATIONS
C
C    SALJET   SALINITY (PPT)
C    SEDJET   SEDIMENT (MG/L OR GM/M**3)
C    TEMJET   TEMPERATURE
C    TOXJET   CONTAMINATE CONCENTRATION (UG/L OR MG/M**3)
C
CJH      DO N=1,9
CJH       READ(1,100)
CJH      ENDDO
CJH      READ(1,*)SALJET,SEDJET,TEMJET,TOXJET
C
C6   EFDC EMBEDDED VERSION
C
      IF(ICALJP(NJP).EQ.1)THEN
C
      WTC=QQCJP(NJP)
	WTV=QSERTAVG
	TMPVAL=WTC+WTV
	WTC=WTC/TMPVAL
	WTV=WTV/TMPVAL
C
      SALJET=WTC*CQCJP(1,NJP,1)+WTV*CSERT(1,NCSERJP(NJP,1),1)
      TEMJET=WTC*CQCJP(1,NJP,2)+WTV*CSERT(1,NCSERJP(NJP,2),2)
      DYEJET=WTC*CQCJP(1,NJP,3)+WTV*CSERT(1,NCSERJP(NJP,3),3)
      SFLJET=WTC*CQCJP(1,NJP,4)+WTV*CSERT(1,NCSERJP(NJP,4),4)
C
      DO NT=1,NTOX
      NV=4+NT
      TOXJET(NT)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)
      ENDDO
C
      DO NX=1,NSED
      NV=4+NTOX+NX
c      SEDJET(NS)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)
      SEDJET(NX)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)     !hnr corrected the subscript from the line above
      ENDDO
C
      DO NX=1,NSND
      NV=4+NTOX+NSED+NX
      SNDJET(NX)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)
      ENDDO
C
      ENDIF
C
      IF(ICALJP(NJP).EQ.2)THEN
C
      WTC=QWRCJP(NJP)
	WTV=QWRSERT(NQWRSERJP(NJP))
	TMPVAL=WTC+WTV
	WTC=WTC/TMPVAL
	WTV=WTV/TMPVAL
C
      NS=NQWRSERJP(NJP)
	LU=LIJ(IUPCJP(NJP),JUPCJP(NJP))
	KU=KUPCJP(NJP)

      SALJET=WTC*CWRCJP(NJP,1)+WTV*CQWRSERT(NS,1)+SAL1(LU,KU)
      TEMJET=WTC*CWRCJP(NJP,2)+WTV*CQWRSERT(NS,2)+TEM1(LU,KU)
      DYEJET=WTC*CWRCJP(NJP,3)+WTV*CQWRSERT(NS,3)+DYE1(LU,KU)
      SFLJET=WTC*CWRCJP(NJP,4)+WTV*CQWRSERT(NS,4)+SFL2(LU,KU)
C
      DO NT=1,NTOX
      NV=4+NT
      TOXJET(NT)=WTC*CWRCJP(NJP,NV)+WTV*CQWRSERT(NS,NV)+TOX1(LU,KU,NT)
      ENDDO
C
      DO NX=1,NSED
      NV=4+NTOX+NX
      SEDJET(NS)=WTC*CWRCJP(NJP,NV)+WTV*CQWRSERT(NS,NV)+SED1(LU,KU,NX)
      ENDDO
C
      DO NX=1,NSND
      NV=4+NTOX+NSED+NX
      SNDJET(NX)=WTC*CWRCJP(NJP,NV)+WTV*CQWRSERT(NS,NV)+SND1(LU,KU,NX)
      ENDDO
C
      ENDIF
C
C----------------------------------------------------------------------C
C
C7   AMBIENT GEOMETRY
C
C    ZBOT   BOTTOM ELEVATION (M)
C    ZSUR   SURFACE ELEVATION (M)
C    NAZD   NUMBER OF AMBIENT DATA IN VERTICAL
C    NATD   NUMBER OF AMBIENT DATA IN TIME
C
CJMH      DO N=1,9
CJMH       READ(1,100)
CJMH      ENDDO
CJMH      READ(1,*)ZBOT,ZSURF,NAZD,NATD
C
C7   EFDC EMBEDDED VERSION
C
      ZBOT=BELV(LJP)
      ZSUR=BELV(LJP)+HP(LJP)
      NAZD=KC
      NATD=1
C
C    SPATIAL PRINT/SAVE INTERVAL IN VERTICAL
C
C      DZPRT=HP(LJP)/FLOAT(NJPSM-2)
      DZPRT=HP(LJP)/FLOAT(NZPRJP(NJP)-2)
      ZJPRT=ZJET(NJP)+DZPRT
C
C----------------------------------------------------------------------C
C
C8   AMBIENT FLOW CONDITIONS
C
C    ZA     ELEVATION OF AMBIENT DATA (M)
C    TA     TIME OF AMBIENT DATA (SEC, HR, OR DAY FOR OUTPUT REFERENCE)
C    UAG    EAST VELOCITY (M/S)
C    VAG    NORTH VELOCITY (M/S)
C    WAG    VERTICAL VELOCITY (M/S)
C    SALA   AMBIENT SALINITY (PPT)
C    SEDA   AMBIENT SEDIMENT CONCENTRATION (MG/L OR GM/M**3)
C    TEMA   AMBIENT TEMPERATURE (DEG C)
C    TOXA   AMBIENT TOXIC CONTAMINANT CONCENTRATION (UG/L OR MG/M**3)
C
CJH      DO N=1,14
CJH       READ(1,100)
CJH      ENDDO
CJH      DO NT=1,NATD
CJH       DO NZ=1,NAZD
CJH        READ(1,*)ZAD(NZ,NT),  TAD(NZ,NT), UAGD(NZ,NT), VAGD(NZ,NT),
CJH     &          WAGD(NZ,NT),SALAD(NZ,NT),SEDAD(NZ,NT),TEMAD(NZ,NT),
CJH     &         TOXAD(NZ,NT)
CJH       ENDDO
CJH      ENDDO
C
C8   EFDC EMBEDDED VERSION
C
      ZAD(1,1)=BELV(LJP)+0.5*HP(LJP)*DZC(1)
      DO NZ=2,NAZD
       ZAD(NZ,1)=ZAD(NZ-1,1)+0.5*HP(LJP)*( DZC(NZ-1)+DZC(NZ) )
      ENDDO
C
      DO NZ=1,NAZD
       K=NZ
       L=LJP
       LN=LNC(L)
       LS=LSC(L)
       UTMP=0.5*(U(L+1,NZ)+U(L,NZ))
       VTMP=0.5*(V(LN ,NZ)+V(L,NZ))
       UAGD(NZ,1)=CUE(L)*UTMP+CVE(L)*VTMP
       VAGD(NZ,1)=CUN(L)*UTMP+CVN(L)*VTMP
       WAGD(NZ,1)=0.5*(W(L,K)+W(L,K-1))+GI*ZZ(K)*(DTI*(P(L)-P1(L))
     &         +0.5*(U(L+1,K)*(P(L+1)-P(L))*DXIU(L+1)
     &              +U(L,K)*(P(L)-P(L-1))*DXIU(L)
     &              +V(LN,K)*(P(LN)-P(L))*DYIV(LN)
     &              +V(L,K)*(P(L)-P(LS))*DYIV(L)))
     &         +0.5*(1.-ZZ(K))*(U(L+1,K)*(BELV(L+1)-BELV(L))*DXIU(L+1)
     &                         +U(L,K)*(BELV(L)-BELV(L-1))*DXIU(L)
     &                         +V(LN,K)*(BELV(LN)-BELV(L))*DYIV(LN)
     &                         +V(L,K)*(BELV(L)-BELV(LS))*DYIV(L))
       OPEN(88,FILE='JPBUG',POSITION='APPEND')
       WRITE(88,889)NZ,K,L,LN,LS,SALAD(NZ,1),TEMAD(NZ,1),TOXAD(NZ,1,1)
       CLOSE(88)
      ENDDO
C
  889 FORMAT(5I6,3E14.5)
C
      DO NZ=1,KC
       SALAD(NZ,1)=SAL(LJP,NZ)
       TEMAD(NZ,1)=TEM(LJP,NZ)
       DYEAD(NZ,1)=DYE(LJP,NZ)
       SFLAD(NZ,1)=SFL(LJP,NZ)
      ENDDO
C
      DO NT=1,NTOX
      DO NZ=1,NAZD
       TOXAD(NZ,NT,1)=TOX(LJP,NZ,NT)
      ENDDO
      ENDDO
C
      DO NS=1,NSED
      DO NZ=1,NAZD
       SEDAD(NZ,NS,1)=SED(LJP,NZ,NS)
      ENDDO
      ENDDO
C
      DO NX=1,NSND
      DO NZ=1,NAZD
       SNDAD(NZ,NX,1)=SND(LJP,NZ,NX)
      ENDDO
      ENDDO
C
CJH      CLOSE(1)
C
C**********************************************************************C
C
C **  OPEN OUTPUT FILES
C
      FNJPGEO='JPGEO' // FNNUM(NJP) // '.OUT'
      FNJPVEL='JPVEL' // FNNUM(NJP) // '.OUT'
      FNJPCON='JPCON' // FNNUM(NJP) // '.OUT'
      FNJPTOX='JPTOX' // FNNUM(NJP) // '.OUT'
      FNJPTPF='JPTPF' // FNNUM(NJP) // '.OUT'
      FNNRFLD='NRFLD' // FNNUM(NJP) // '.OUT'
      FNNRFLB='NRFLD' // FNNUM(NJP) // '.BIN'
C
C      IF(N.EQ.NUDJP(NJP)) OPEN(1,FILE=FNJPGEO,STATUS='UNKNOWN')
C      IF(N.EQ.NUDJP(NJP)) CLOSE(1,STATUS='DELETE')
      IF(N.EQ.1) OPEN(1,FILE=FNJPGEO,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(1,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  OPEN(1,FILE=FNJPGEO,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  WRITE(1,111)
C
C      IF(N.EQ.NUDJP(NJP)) OPEN(2,FILE=FNJPVEL,STATUS='UNKNOWN')
C      IF(N.EQ.NUDJP(NJP)) CLOSE(2,STATUS='DELETE')
      IF(N.EQ.1) OPEN(2,FILE=FNJPVEL,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(2,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  OPEN(2,FILE=FNJPVEL,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  WRITE(2,112)
C
C      IF(N.EQ.NUDJP(NJP)) OPEN(3,FILE=FNJPCON,STATUS='UNKNOWN')
C      IF(N.EQ.NUDJP(NJP)) CLOSE(3,STATUS='DELETE')
      IF(N.EQ.1) OPEN(3,FILE=FNJPCON,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(3,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  OPEN(3,FILE=FNJPCON,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  WRITE(3,113)
C
      IF(ISTRAN(5).GE.1)THEN
C      IF(N.EQ.NUDJP(NJP)) OPEN(4,FILE=FNJPTOX,STATUS='UNKNOWN')
C      IF(N.EQ.NUDJP(NJP)) CLOSE(4,STATUS='DELETE')
      IF(N.EQ.1) OPEN(4,FILE=FNJPTOX,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(4,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  OPEN(4,FILE=FNJPTOX,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  WRITE(4,114)
      ENDIF
C
      IF(ISTRAN(5).GE.1)THEN
C      IF(N.EQ.NUDJP(NJP)) OPEN(14,FILE=FNJPTPF,STATUS='UNKNOWN')
C      IF(N.EQ.NUDJP(NJP)) CLOSE(14,STATUS='DELETE')
      IF(N.EQ.1) OPEN(14,FILE=FNJPTPF,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(14,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  OPEN(14,FILE=FNJPTPF,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)
     &  WRITE(14,124)
      ENDIF
C
      IF(N.EQ.1) THEN
	  OPEN(11,FILE='JPMOMENT.OUT')
        CLOSE(11,STATUS='DELETE')
	  OPEN(11,FILE='JPMOMENT.OUT')
	ELSE
	  OPEN(11,FILE='JPMOMENT.OUT',POSITION='APPEND')
	ENDIF

C**********************************************************************C
C
C **  SET INITIAL CONDITIONS
C
      DTJP=0.1*RJET/QJET
C
C ++  JET/PLUME DISCHARGE, GLOBAL COORDINATES
C
      XJG(1)=XJET
      YJG(1)=YJET
      ZJG(1)=ZJET(NJP)
C
      XJG(2)=XJET
      YJG(2)=YJET
      ZJG(2)=ZJET(NJP)
C
      SIG(1)=0.
      SIG(2)=0.
C
C ++  INITIALIZE JET DISCHARGE GEOMENTRY
C
      RADJ(1)=RJET
      RLEJ(1)=0.1*RJET
C
      RADJ(2)=RJET
      RLEJ(2)=0.1*RJET
C
C ++  JET DISCHARGE VELOCITY MAGNITUDE AND COMPONENTS
C
      AJET=RPI*RJET*RJET
      QJ(1)=QVJET/AJET
C      QJH(1)=QJ(1)*COSD(PHJET(NJP))
C      UJG(1)=QJ(1)*COSD(PHJET(NJP))*COSD(THJET(NJP))
C      VJG(1)=QJ(1)*COSD(PHJET(NJP))*SIND(THJET(NJP))
C      WJG(1)=QJ(1)*SIND(PHJET(NJP))
      QJH(1)=QJ(1)*COS(0.0175*PHJET(NJP))
      UJG(1)=QJ(1)*COS(0.0175*PHJET(NJP))*COS(0.0175*THJET(NJP))
      VJG(1)=QJ(1)*COS(0.0175*PHJET(NJP))*SIN(0.0175*THJET(NJP))
      WJG(1)=QJ(1)*SIN(0.0175*PHJET(NJP))
	UJ0=UJG(1)
	VJ0=VJG(1)
	WJ0=WJG(1)
C
      QJ(2)=QVJET/AJET
C      QJH(2)=QJ(2)*COSD(PHJET(NJP))
C      UJG(2)=QJ(2)*COSD(PHJET(NJP))*COSD(THJET(NJP))
C      VJG(2)=QJ(2)*COSD(PHJET(NJP))*SIND(THJET(NJP))
C      WJG(2)=QJ(2)*SIND(PHJET(NJP))
      QJH(2)=QJ(2)*COS(0.0175*PHJET(NJP))
      UJG(2)=QJ(2)*COS(0.0175*PHJET(NJP))*COS(0.0175*THJET(NJP))
      VJG(2)=QJ(2)*COS(0.0175*PHJET(NJP))*SIN(0.0175*THJET(NJP))
      WJG(2)=QJ(2)*SIN(0.0175*PHJET(NJP))
C
C ++ INITIALIZE TIME STEP
C
C      DT=0.1*RADJ(NM)/QJ(NM)
      DTJP=RLEJ(1)/QJ(1)
C
C ++  INITIAL JET DENSITY AND MASS
C
      SEDJETT=0.
      DO NS=1,NSED
       SEDJETT=SEDJETT+SEDJET(NS)
      ENDDO
      DO NX=1,NSND
       SEDJETT=SEDJETT+SNDJET(NX)
      ENDDO
      RHOJ(1)=FUNDEN(SALJET,SEDJETT,TEMJET)
      RMAJP(1)=RPI*RHOJ(1)*RADJ(1)*RADJ(1)*RLEJ(1)
CJH   RMAJP(1)=RPI        *RADJ(1)*RADJ(1)*RLEJ(1)
C
C ++  INITIAL JET CONCENTRATIONS
C
      SALJ(1)=SALJET
      TEMJ(1)=TEMJET
      DYEJ(1)=DYEJET
      SFLJ(1)=SFLJET
      DO NT=1,NTOX
       TOXJ(1,NT)=TOXJET(NT)
      ENDDO
      DO NS=1,NSED
       SEDJ(1,NS)=SEDJET(NS)
      ENDDO
      DO NX=1,NSND
       SNDJ(1,NX)=SNDJET(NX)
      ENDDO
C
C ++  INITIAL JET TOXIC CONTAMINANT PARTICULATE FRACTIONS
C
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SEDJET(NS).GT.0.) TMPVAL=SEDJET(NX)**TMPEXP
         ENDIF
         TOXPFJP(1,NS,NT)=TMPVAL*SEDJET(NS)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SNDJET(NX).GT.0.) TMPVAL=SNDJET(NX)**TMPEXP
         ENDIF
         TOXPFJP(1,NS,NT)=TMPVAL*SNDJET(NX)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
      ENDDO
C
      DO NT=1,NTOX
       TOXPFTJP(1,NT)=0.
      ENDDO
C
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TOXPFTJP(1,NT)=TOXPFTJP(1,NT)+TOXPFJP(1,NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TOXPFTJP(1,NT)=TOXPFTJP(1,NT)+TOXPFJP(1,NS,NT)
        ENDDO
       ENDIF
      ENDDO
C
      DO NT=1,NTOX
       DO NS=1,NSED+NSND
        TOXPFJP(1,NS,NT)=TOXPFJP(1,NS,NT)/(1.+TOXPFTJP(1,NT))
       ENDDO
      ENDDO
C
      DO NT=1,NTOX
       TOXPFTJP(1,NT)=TOXPFTJP(1,NT)/(1.+TOXPFTJP(1,NT))
      ENDDO
C
C ++  INITIALIZE JET ELEMENT 2 VALUE TO ELEMENT 1 VALUES
C
      RHOJ(2)=FUNDEN(SALJET,SEDJETT,TEMJET)
      RMAJP(2)=RPI*RHOJ(2)*RADJ(2)*RADJ(2)*RLEJ(2)
CJH   RMAJP(2)=RPI        *RADJ(2)*RADJ(2)*RLEJ(2)
      SALJ(2)=SALJ(1)
      TEMJ(2)=TEMJ(1)
      DYEJ(2)=DYEJ(1)
      SFLJ(2)=SFLJ(1)
      DO NT=1,NTOX
       TOXJ(2,NT)=TOXJ(1,NT)
      ENDDO
      DO NS=1,NSED
       SEDJ(2,NS)=SEDJ(1,NS)
      ENDDO
      DO NX=1,NSND
       SNDJ(2,NX)=SNDJ(1,NX)
      ENDDO
      DO NT=1,NTOX
       DO NS=1,NSED+NSND
        TOXPFJP(2,NS,NT)=TOXPFJP(1,NS,NT)
       ENDDO
      ENDDO
      DO NT=1,NTOX
       TOXPFTJP(2,NT)=TOXPFTJP(1,NT)
      ENDDO
C
C ++  INITIALIZE AMBIENT CONDITIONS
C
      IF(ISAMB.EQ.0)THEN
        UAG=UAGD(1,1)
        VAG=VAGD(1,1)
        WAG=WAGD(1,1)
        SALA=SALAD(1,1)
        TEMA=TEMAD(1,1)
        DYEA=DYEAD(1,1)
        SFLA=SFLAD(1,1)
        DO NT=1,NTOX
         TOXA(NT)=TOXAD(1,NT,1)
        ENDDO
        DO NS=1,NSED
         SEDA(NS)=SEDAD(1,NS,1)
        ENDDO
        DO NX=1,NSND
         SNDA(NX)=SNDAD(1,NX,1)
        ENDDO
      ENDIF
C
      IF(ISAMB.GE.1)THEN
        ZVAL=ZJG(1)
        ITVAL=1
        CALL ACON(ITVAL)
      ENDIF
C
C ++  AMBIENT VELOCITY MAGNITUDES
C
      QA=SQRT(UAG*UAG+VAG*VAG+WAG*WAG)
      QAH=SQRT(UAG*UAG+VAG*VAG)
C
C ++  AMBIENT DENSITY
C
      SEDATT=0.
      DO NS=1,NSED
       SEDATT=SEDATT+SEDA(NS)
      ENDDO
      DO NX=1,NSND
       SEDATT=SEDATT+SNDA(NX)
      ENDDO
      RHOA=FUNDEN(SALA,SEDATT,TEMA)
C
C ++  GLOBAL AMBIENT AND JET ORIENTATIONS
C
      PHJ(1)=PHJET(NJP)
      THJG(1)=THJET(NJP)
C
      PHJ(2)=PHJET(NJP)
      THJG(2)=THJET(NJP)
C
C      THAG=ATAN2D(VAG,UAG)
      THAG=57.2958*ATAN2(VAG,UAG)
C
C ++  LOCAL JET HORIZONTAL ORIENTATION
C
      THJL(1)=THJG(1)-THAG
      THJL(2)=THJG(2)-THAG
C
C ++  PROJECTION OF AMBIENT CURRENT TO JET DIRECTION
C
C      RDQA(1)=COSD(PHJ(1))*COSD(THJL(1))*QAH
C      RDQA(2)=COSD(PHJ(2))*COSD(THJL(2))*QAH
      RDQA(1)=COS(0.0175*PHJ(1))*COS(0.0175*THJL(1))*QAH
      RDQA(2)=COS(0.0175*PHJ(2))*COS(0.0175*THJL(2))*QAH
C
C ++  INITIAL SHEAR ENTRAINMENT
C
C      SINPHJ=SIND(PHJ(1))
      SINPHJ=SIN(0.0175*PHJ(1))
      DVEL=ABS(QJ(1)-RDQA(1))
      DRHO=(RHOA-RHOJ(1))/RHOA
      FTOP=G*ABS(DRHO)*RADJ(1)
      FRD2I=0.
      EBOT=1.
      ETOP=0.057
      ENTS=0.
      IF(DVEL.GT.0.)THEN
        FRD2I=FTOP/(ALPH2*DVEL*DVEL)
        EBOT=1.+5.*RDQA(1)/DVEL
        ETOP=0.057+0.554*SINPHJ*FRD2I
        ENTS=1.414*ETOP/EBOT
      ENDIF
      DRMAJS(1)=2.*DTJP*RPI*RHOA*ENTS*DVEL*RADJ(1)*RLEJ(1)
      DRMAJS(2)=DRMAJS(1)
C
C ++  INITIAL FORCED ENTRAINMENT
C
      DRMAJF(1)=0.
      DRMAJF(2)=0.
C
C ++  INITIALIZE VOLUMETRIC ENTRAINEMNT
C
	QJTOT=QVJET
	QJTOTO=QVJET
C
C**********************************************************************C
C
C **  OUTPUT INITIAL CONDITIONS
C
      RLSCL=1.
      IF(ISOUT.EQ.1) RLSCL=DJET(NJP)
      IF(ISOUT.EQ.2) RLSCL=RJET*SQRT(RPI)
      SALJETI=1.
      TEMJETI=1.
      DYEJETI=1.
      SFLJETI=1.
      DO NT=1,NTOX
       TOXJETI(NT)=1.
      ENDDO
      DO NS=1,NSED
       SEDJETI(NS)=1.
      ENDDO
      DO NX=1,NSND
       SNDJETI(NX)=1.
      ENDDO
      IF(ISOUT.GE.1)THEN
        IF(SALJET.GT.0.) SALJETI=1./SALJET
        IF(TEMJET.GT.0.) TEMJETI=1./TEMJET
        IF(DYEJET.GT.0.) DYEJETI=1./DYEJET
        IF(SFLJET.GT.0.) SFLJETI=1./SFLJET
        DO NT=1,NTOX
         IF(TOXJET(NT).GT.0.) TOXJETI(NT)=1./TOXJET(NT)
        ENDDO
        DO NS=1,NSED
         IF(SEDJET(NS).GT.0.) SEDJETI(NS)=1./SEDJET(NS)
        ENDDO
        DO NX=1,NSND
         IF(SNDJET(NX).GT.0.) SNDJETI(NX)=1./SNDJET(NX)
        ENDDO
      ENDIF
C
      NE=1
      NJE=1
      DJETI=1./RLSCL
      XJGNE=DJETI*XJG(NE)
      YJGNE=DJETI*YJG(NE)
      ZJGNE=DJETI*ZJG(NE)
      SIGNE=DJETI*SIG(NE)
      RADJNE=DJETI*RADJ(NE)
C     RADJNE=2.*DJETI*RADJ(NE)
      RLEJNE=DJETI*RLEJ(NE)
      SALJNE=SALJETI*SALJ(NE)
      TEMJNE=TEMJETI*TEMJ(NE)
CJHFIX-REMOVE      DYEJNE=SALJETI*DYEJ(NE)
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJNE=DYEJETI*DYEJ(NE)
      SFLJNE=TEMJETI*SFLJ(NE)
      DO NT=1,NTOX
       TOXJNE(NT)=TOXJETI(NT)*TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJNE(NS)=SEDJETI(NS)*SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJNE(NX)=SNDJETI(NX)*SNDJ(NE,NX)
      ENDDO
C
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)THEN
      WRITE(1,101)NJP,NJE,TIME,XJGNE,YJGNE,ZJGNE,
     &                         SIGNE,RADJNE,RLEJNE,QJTOT
      DRMAJ=RMAJP(NE)-RMAJP(NE-1)
      DRHO=(RHOA-RHOJ(NE))/RHOA
      WRITE(2,101)NJP,NJE,TIME,QJ(NE),UJG(NE),VJG(NE),WJG(NE),
     &                         RDQA(NE),RMAJP(NE),DRMAJ,DRHO
      IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE
      ENDIF
      IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &                          (SEDJNE(NS),NS=1,NSED)
      ENDIF
      IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &                          (SNDJNE(NX),NX=1,NSND)
      ENDIF
      IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED),
CJHFIX-REMOVE     &                         (SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &       (SEDJNE(NS),NS=1,NSED),(SNDJNE(NX),NX=1,NSND)
      ENDIF
      IF(ISTRAN(5).GE.1)THEN
      IF(NTOX.LE.8)THEN
        WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,NTOX)
        WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,NTOX)
       ELSE
        WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,8)
        WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,8)
        WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=9,NTOX)
        WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=9,NTOX)
      ENDIF
      ENDIF
      ENDIF
C
      IF(IOUTJP(NJP).GE.2)THEN
      NJPS=1
      TIMJP(NJPS)=TIME
      XJGNS(NJPS)=XJGNE
      YJGNS(NJPS)=YJGNE
      ZJGNS(NJPS)=ZJGNE
      SIGNS(NJPS)=SIGNE
      RADJNS(NJPS)=RADJNE
      RLEJNS(NJPS)=RLEJNE
      QJNS(NJPS)=QJ(NE)
      UJGNS(NJPS)=UJG(NE)
      VJGNS(NJPS)=VJG(NE)
      WJGNS(NJPS)=WJG(NE)
      RDQANS(NJPS)=RDQA(NE)
      RMAJPNS(NJPS)=RMAJP(NE)
      DRMAJNS(NJPS)=DRMAJ
      DRHONS(NJPS)=DRHO
      SALJNS(NJPS)=SALJNE
      TEMJNS(NJPS)=TEMJNE
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJNS(NJPS)=DYEJNE
      DO NS=1,NSED
       SEDJNS(NS,NJPS)=SEDJNE(NS)
      ENDDO
      DO NX=1,NSND
       SNDJNS(NX,NJPS)=SNDJNE(NX)
      ENDDO
      DO NT=1,NTOX
       TOXJNS(NT,NJPS)=TOXJNE(NT)
       TOXPFTNS(NT,NJPS)=TOXPFTJP(NE,NT)
      ENDDO
      ENDIF
C
C**********************************************************************C
C
C **  START INTEGRATION
C
      DO NJE=2,NJEL(NJP)
C
C ++  ESTIMATE NEW CONDITIONS FOR ENTRAINMENT
C
      NE=2
      NM=1
      RADJ(NE)=RADJ(NM)
      PHJ(NE)=PHJ(NM)
      THJG(NE)=THJG(NM)
      THJL(NE)=THJL(NM)
C      SINPHJ=SIND(PHJ(NM))
C      COSPHJ=COSD(PHJ(NM))
C      COSPHJM=COSD(PHJ(NM))
C      SINTHJL=SIND(THJL(NM))
C      COSTHJL=COSD(THJL(NM))
C      COSTHJLM=COSD(THJL(NM))
      SINPHJ=SIN(0.0175*PHJ(NM))
      COSPHJ=COS(0.0175*PHJ(NM))
      COSPHJM=COS(0.0175*PHJ(NM))
      SINTHJL=SIN(0.0175*THJL(NM))
      COSTHJL=COS(0.0175*THJL(NM))
      COSTHJLM=COS(0.0175*THJL(NM))
      XJOLD=XJG(NM)
      YJOLD=YJG(NM)
      ZJOLD=ZJG(NM)
      RLOLD=RLEJ(NM)
      RROLD=RADJ(NM)
C      DT=0.1*RADJ(NM)/QJ(NM)
      DTJP=RLEJ(NM)/QJ(NM)
C
      NI=1
C
 1000 CONTINUE
C
C ++  CALCULATE SHEAR ENTRAINMENT
C
CX      DVEL=ABS(QJ(NM)-RDQA)
CX      DRHO=(RHOA-RHOJ(NM))/RHOA
CX      FBOT=G*ABS(DRHO)*RADJ(NE)
CX      FRD2=ALPH2*DVEL*DVEL/FBOT
CX      EBOT=1.+5.*RDQA/DVEL
CX      ETOP=0.057+0.554*SINPHJ/FRD2
CX      ENTS=1.414*ETOP/EBOT
CX      DRMAJS=2.*DT*RPI*RHOA*ENTS*DVEL*RADJ(NM)*RLEJ(NM)
C
      DRMAJSO=0.5*(DRMAJS(NE)+DRMAJS(NM))
      DVEL=ABS(QJ(NE)-RDQA(NE))
      DRHO=(RHOA-RHOJ(NE))/RHOA
      FTOP=G*ABS(DRHO)*RADJ(NE)
      FRD2I=0.
      EBOT=1.
      ETOP=0.057
      ENTS=0.
      IF(DVEL.GT.0.)THEN
        FRD2I=FTOP/(ALPH2*DVEL*DVEL)
        EBOT=1.+5.*RDQA(1)/DVEL
        ETOP=0.057+0.554*SINPHJ*FRD2I
        ENTS=1.414*ETOP/EBOT
      ENDIF
      DRMAJS(NE)=2.*DTJP*RPI*RHOA*ENTS*DVEL*RADJ(NE)*RLEJ(NE)
CJH   DRMAJS=2.*DTJP*RPI     *ENTS*DVEL*RADJ(NE)*RLEJ(NE)
      DRMAJSA=0.5*(DRMAJS(NE)+DRMAJS(NM))
C
C ++  CALCULATE FORCED ENTRAINMENT
C
      DRMAJFO=0.5*(DRMAJF(NE)+DRMAJF(NM))
C      ENTF1=2.*SQRT( SINPHJ*SINPHJ+SINTHJL*SINTHJL
C     &      -SINPHJ*SINPHJ*SINTHJL*SINTHJL )
      ENTF1=2.*SQRT( 1.-COSPHJ*COSPHJ*COSTHJL*COSTHJL )
      DELSIG=SIG(NE)-SIG(NM)
      ENTF2=0.
      ENTF3=0.
      IF(DELSIG.GT.0.)THEN
        ENTF2=RPI*COSPHJ*COSTHJL*(RADJ(NE)-RADJ(NM))/
     &                         (DELSIG)
        ENTF3=0.5*RPI*RADJ(NE)*(COSPHJ*COSTHJL-COSPHJM*COSTHJLM)/
     &                         (DELSIG)
      ENDIF
      ENTF=ENTF1+ENTF2+ENTF3
      ENTF=MAX(ENTF,0.)
      DRMAJF(NE)=DTJP*RHOA*RADJ(NE)*RLEJ(NE)*QAH*ENTF
      IF(NJE.EQ.2.AND.NI.EQ.1)DRMAJF(NE)=0.
      DRMAJFA=0.5*(DRMAJF(NE)+DRMAJF(NM))
C      IF(NI.EQ.1) DRMAJF=(NE)
CJH   DRMAJF=DTJP     *RADJ(NE)*RLEJ(NE)*QAH*ENTF
C
C ++  TAKE MAX OF SHEAR AND FORCED
C
      ISHEAR=0
      IFORCE=0
      DRMAJ=DRMAJSA+DRMAJFA
      IF(ISENT(NJP).EQ.0) DRMAJ=MAX(DRMAJSA,DRMAJFA)
      IF(DRMAJSA.GT.DRMAJFA) ISHEAR=1
      IF(DRMAJFA.GT.DRMAJSA) IFORCE=1
C
C      IVAL=MOD(NJE,NPRTE)
C      IF(IVAL.EQ.0)THEN
CDIAG        WRITE(10,110)NJE,NI,ENTS,DRMAJSA,ENTF,DRMAJFA,DRMAJ
C      ENDIF
  110 FORMAT(2I6,5E14.5)
C
C ++  ADVANCE MASS
C
      RMAJP(NE)=RMAJP(NM)+DRMAJ
      RMAJI=1./RMAJP(NE)
C
C ++  ADVANCE CONCENTRATION AND DENSITY
C
      SALJ(NE)=RMAJI*( RMAJP(NM)*SALJ(NM)+DRMAJ*SALA )
      TEMJ(NE)=RMAJI*( RMAJP(NM)*TEMJ(NM)+DRMAJ*TEMA )
CJHFIX-REMOVE      DYEJ(NE)=RMAJI*( RMAJP(NM)*DYEJ(NM)+DRMAJ*SALA )
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJ(NE)=RMAJI*( RMAJP(NM)*DYEJ(NM)+DRMAJ*DYEA )
      SFLJ(NE)=RMAJI*( RMAJP(NM)*SFLJ(NM)+DRMAJ*TEMA )
      IF(ISTRAN(5).GE.1)THEN
       DO NT=1,NTOX
        TOXJ(NE,NT)=RMAJI*( RMAJP(NM)*TOXJ(NM,NT)+DRMAJ*TOXA(NT) )
       ENDDO
      ENDIF
      IF(ISTRAN(6).GE.1)THEN
       DO NS=1,NSED
        SEDJ(NE,NS)=RMAJI*( RMAJP(NM)*SEDJ(NM,NS)+DRMAJ*SEDA(NS) )
       ENDDO
      ENDIF
      IF(ISTRAN(7).GE.1)THEN
       DO NX=1,NSND
        SNDJ(NE,NX)=RMAJI*( RMAJP(NM)*SNDJ(NM,NX)+DRMAJ*SNDA(NX) )
       ENDDO
      ENDIF
C
C ++ ADVANCE TOXIC PARTICULATE FRACTION
C
      IF(ISTRAN(5).GE.1)THEN
C
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SEDJ(NE,NS).GT.0.) TMPVAL=SEDJ(NE,NS)**TMPEXP
         ENDIF
         TOXPFJP(NE,NS,NT)=TMPVAL*SEDJ(NE,NS)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SNDJ(NE,NX).GT.0.) TMPVAL=SNDJ(NE,NX)**TMPEXP
         ENDIF
         TOXPFJP(NE,NS,NT)=TMPVAL*SNDJ(NE,NX)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
      ENDDO
C
      DO NT=1,NTOX
       TOXPFTJP(NE,NT)=0.
      ENDDO
C
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TOXPFTJP(NE,NT)=TOXPFTJP(NE,NT)+TOXPFJP(NE,NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TOXPFTJP(NE,NT)=TOXPFTJP(NE,NT)+TOXPFJP(NE,NS,NT)
        ENDDO
       ENDIF
      ENDDO
C
      DO NT=1,NTOX
       DO NS=1,NSED+NSND
        TOXPFJP(NE,NS,NT)=TOXPFJP(NE,NS,NT)/(1.+TOXPFTJP(NE,NT))
       ENDDO
      ENDDO
C
      DO NT=1,NTOX
       TOXPFTJP(NE,NT)=TOXPFTJP(1,NT)/(1.+TOXPFTJP(NE,NT))
      ENDDO
C
      ENDIF
C
C ++ ADVANCE DENSITY
C
      SEDJETT=0.
      DO NS=1,NSED
       SEDJETT=SEDJETT+SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SEDJETT=SEDJETT+SNDJ(NE,NX)
      ENDDO
      RHOJ(NE)=FUNDEN(SALJ(NE),SEDJETT,TEMJ(NE))
      DRHO=(RHOA-RHOJ(NE))/RHOA
C
C ++  ADVANCE VELOCITY COMPONENTS
C
      UJG(NE)=RMAJI*( RMAJP(NM)*UJG(NM)+DRMAJ*UAG )
      VJG(NE)=RMAJI*( RMAJP(NM)*VJG(NM)+DRMAJ*VAG )
      WJG(NE)=RMAJI*( RMAJP(NM)*WJG(NM)+DRMAJ*WAG )
     &              +G*DRHO*DTJP
C
C ++  NEW JET COORDINATES
C
      DXTMP=DTJP*UJG(NE)
      DYTMP=DTJP*VJG(NE)
      DZTMP=DTJP*WJG(NE)
      XJG(NE)=XJG(NM)+DXTMP
      YJG(NE)=YJG(NM)+DYTMP
      ZJG(NE)=ZJG(NM)+DZTMP
      DS=SQRT( DXTMP*DXTMP+DYTMP*DYTMP+DZTMP*DZTMP )
      SIG(NE)=SIG(NM)+DS
C
C ++  RESET AMBIENT CONDITIONS
C
      SEDAA=0.0
      IF(ISAMB.EQ.0)THEN
        UAG=UAGD(1,1)
        VAG=VAGD(1,1)
        WAG=WAGD(1,1)
        SALA=SALAD(1,1)
        TEMA=TEMAD(1,1)
        DYEA=DYEAD(1,1)
        SFLA=SFLAD(1,1)
        DO NT=1,NTOX
         TOXA(NT)=TOXAD(1,NT,1)
        ENDDO
        DO NS=1,NSED
         SEDA(NS)=SEDAD(1,NS,1)
	   SEDAA=SEDAA+SEDA(NS)
        ENDDO
        DO NX=1,NSND
         SNDA(NX)=SNDAD(1,NX,1)
	   SEDAA=SEDAA+SNDA(NX)
        ENDDO
      ENDIF
C
      IF(ISAMB.GE.1)THEN
        ZVAL=ZJG(NE)
        ITVAL=1
        CALL ACON(ITVAL)
      ENDIF
C
C ++  AMBIENT VELOCITY MAGNITUDES
C
      QA=SQRT(UAG*UAG+VAG*VAG+WAG*WAG)
      QAH=SQRT(UAG*UAG+VAG*VAG)
C
C ++  AMBIENT DENSITY
C
      RHOA=FUNDEN(SALA,SEDAA,TEMA)
C
C ++  CALCULATE NEW GLOBAL JET VELOCITY PARAMETERS
C
      QJ(NE)=SQRT(UJG(NE)*UJG(NE)+VJG(NE)*VJG(NE)+WJG(NE)*WJG(NE))
      QJH(NE)=SQRT(UJG(NE)*UJG(NE)+VJG(NE)*VJG(NE))
C
C ++  CALCULATE GLOBAL JET DISCHARGE ORIENTATIONS
C
C      PHJ(NE)=ATAN2D(WJG(NE),QJH(NE))
C      THJG(NE)=ATAN2D(VJG(NE),UJG(NE))
C      THAG=ATAN2D(VAG,UAG)
      PHJ(NE)=57.2958*ATAN2(WJG(NE),QJH(NE))
      THJG(NE)=57.2958*ATAN2(VJG(NE),UJG(NE))
      THAG=57.2958*ATAN2(VAG,UAG)
      THJL(NE)=THJG(NE)-THAG
C
C      SINPHJ=SIND(PHJ(NE))
C      COSPHJ=COSD(PHJ(NE))
C      SINTHJL=SIND(THJL(NE))
C      COSTHJL=COSD(THJL(NE))
      SINPHJ=SIN(0.0175*PHJ(NE))
      COSPHJ=COS(0.0175*PHJ(NE))
      SINTHJL=SIN(0.0175*THJL(NE))
      COSTHJL=COS(0.0175*THJL(NE))
C
C ++  PROJECTION OF AMBIENT ON JET
C
C      RDQA(NE)=COSD(PHJ(NE))*COSD(THJL(NE))*QAH
      RDQA(NE)=COS(0.0175*PHJ(NE))*COS(0.0175*THJL(NE))*QAH
C
C ++  CALCULATE NEW RADIUS AND ELEMENT LENGTH
C
      RLEJ(NE)=QJ(NE)*RLEJ(NM)/QJ(NM)
      RADJ(NE)=SQRT( RMAJP(NE)/(RPI*RHOJ(NE)*RLEJ(NE)) )
CJH   RADJ(NE)=SQRT( RMAJP(NE)/(RPI         *RLEJ(NE)) )
C
C ++  CHECK FOR CONVERGENCE CHECK
C
C      XERR=ABS(XJOLD-XJG(NE))
C      YERR=ABS(YJOLD-YJG(NE))
C      ZERR=ABS(ZJOLD-ZJG(NE))
C      RLER=ABS(RLOLD-RLEJ(NE))
C      RRER=ABS(RROLD-RADJ(NE))
c      DRMAJSE=100.
c      DRMAJFE=100.
       DRMAJSE=ABS(DRMAJSA-DRMAJSO)
       DRMAJFE=ABS(DRMAJFA-DRMAJFO)
      IF(DRMAJSO.GT.0.) DRMAJSE=DRMAJSE/DRMAJSO
      IF(DRMAJFO.GT.0.) DRMAJFE=DRMAJFE/DRMAJFO
      ITMP=0
C      IF(IFORCE.EQ.1.AND.DRMAJFE.GT.DMRERM) ITMP=1
C      IF(ISHEAR.EQ.1.AND.DRMAJSE.GT.DMRERM) ITMP=1
      IF(DRMAJFE.GT.DMRERM) ITMP=1
      IF(DRMAJSE.GT.DMRERM) ITMP=1
C      IF(XERR.GT.XERRM) ITMP=1
C      IF(YERR.GT.YERRM) ITMP=1
C      IF(ZERR.GT.ZERRM) ITMP=1
C      IF(RLER.GT.RLERM) ITMP=1
C      IF(RRER.GT.RRERM) ITMP=1
C
CDIAG      WRITE(10,610)NE,NI,XERR,YERR,ZERR,RLER,RRER,DRMAJFE,DRMAJFE
  610 FORMAT('NE,NI,X,Y,Z,R,L,DF,DS =',2I6,7E13.4)
C
      IF(NJE.EQ.2)THEN
        WRITE(10,620)NJP,NJE,NI,ITMP,DRMAJSA,DRMAJSO,DRMAJFA,DRMAJFO
      ENDIF
C
      IF(ISDJP(NJP).EQ.1)THEN
      JTMPVAL=MOD(NJE,100)
      IF(JTMPVAL.EQ.0)THEN
        WRITE(10,620)NJP,NJE,NI,ITMP,DRMAJSA,DRMAJSO,DRMAJFA,DRMAJFO
      ENDIF
      ENDIF
C
C ++  STOP IF MAXIMUM ITERATIONS EXCEEDED
C
      IF(NI.GT.NIMAX)THEN
        KFLAG=1
        WRITE(10,620)NJP,NJE,NI,ITMP,DRMAJSA,DRMAJSO,DRMAJFA,DRMAJFO
        WRITE(6,601)NJE,NI
        WRITE(10,601)NJE,NI
!        WRITE(8,601)NJE,NI    !hnr 7/27/2009
CDIAG        WRITE(10,610)NE,NI,XERR,YERR,ZERR,RLER,RRER,DRMAJFE,DRMAJFE
        GOTO 2000
      ENDIF
C
C ++  STOP IF JET CENTERLINE PENETRATES SURFACE
C
      IF(ISTOP.EQ.1)THEN
        ZJGTOP=ZJG(NE)
        IF(ZJGTOP.GT.ZSUR)THEN
          WRITE(6,605)NJP,NJE,NI,ZJGTOP,ZSUR
          WRITE(10,605)NJP,NJE,NI,ZJGTOP,ZSUR
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,605)NJP,NJE,NI,ZJGTOP,ZSUR    !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
C
C ++  STOP IF JET CENTERLINE PENETRATES BOTTOM
C
      IF(ISTOP.EQ.1)THEN
        ZJGBOT=ZJG(NE)
        IF(ZJGBOT.LT.ZBOT)THEN
          WRITE(6,606)NJP,NJE,NI,ZJGBOT,ZBOT
          WRITE(10,606)NJP,NJE,NI,ZJGBOT,ZBOT
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,606)NJP,NJE,NI,ZJGBOT,ZBOT      !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
C
C ++  STOP IF JET BOUNDARY PENETRATES SURFACE
C
      IF(ISTOP.EQ.2)THEN
C        ZJGTOP=ZJG(NE)+RADJ(NE)*COSD(PHJ(NE))
        ZJGTOP=ZJG(NE)+RADJ(NE)*COS(0.0175*PHJ(NE))
        IF(ZJGTOP.GT.ZSUR)THEN
          WRITE(6,602)NJP,NJE,NI,ZJGTOP,ZSUR
          WRITE(10,602)NJP,NJE,NI,ZJGTOP,ZSUR
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,602)NJP,NJE,NI,ZJGTOP,ZSUR    !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
C
C ++  STOP IF JET BOUNDARY PENETRATES BOTTOM
C
      IF(ISTOP.EQ.2)THEN
C        ZJGBOT=ZJG(NE)-RADJ(NE)*COSD(PHJ(NE))
        ZJGBOT=ZJG(NE)-RADJ(NE)*COS(0.0175*PHJ(NE))
        IF(ZJGBOT.LT.ZBOT)THEN
          WRITE(6,603)NJP,NJE,NI,ZJGBOT,ZBOT
          WRITE(10,603)NJP,NJE,NI,ZJGBOT,ZBOT
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,603)NJP,NJE,NI,ZJGBOT,ZBOT      !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
C
C ++  STOP IF NEUTRAL LEVEL IS REACHED
C
C ++  RISING PLUME
C
      IF(RHOJ(NE).GE.RHOJ(NM))THEN
      DRHOT=(RHOA-RHOJ(NE))/RHOA
      IF(DRHOT.LT.0.)THEN
        WRITE(6,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!        WRITE(8,604)NJP,NJE,NI,ZJG(NE)     !hnr 7/27/2009
        GOTO 2000
      ENDIF
      ENDIF
C
C ++  FALLING PLUME
C
      IF(RHOJ(NE).LT.RHOJ(NM))THEN
      DRHOT=(RHOA-RHOJ(NE))/RHOA
      IF(DRHOT.GT.0.)THEN
        WRITE(6,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!        WRITE(8,604)NJP,NJE,NI,ZJG(NE)     !hnr 7/27/2009
        GOTO 2000
      ENDIF
      ENDIF
C
C ++  RETURN FOR ANOTHER ITERATION
C
      IF(ITMP.EQ.1.OR.NI.EQ.1)THEN
        XJOLD=XJG(NE)
        YJOLD=YJG(NE)
        ZJOLD=ZJG(NE)
        RLOLD=RLEJ(NE)
        RROLD=RADJ(NE)
        NI=NI+1
        GOTO 1000
      ENDIF
C
C ++  WRITE OUTPUT AND PROCEED TO NEXT JET ELEMENT
C
C      IVAL=MOD(NJE,NPRTE)
C      IF(IVAL.EQ.0)THEN
      IF(ZJG(NE).GE.ZJPRT)THEN
        NPRTE=1
        ZJPRT=ZJPRT+DZPRT
CDIAG       WRITE(10,600)NJE,NI
       ELSE
        NPRTE=0
CDIAG       WRITE(6,600)NJE,NI
      ENDIF
C
      DJETI=1./RLSCL
      XJGNE=DJETI*XJG(NE)
      YJGNE=DJETI*YJG(NE)
      ZJGNE=DJETI*ZJG(NE)
      SIGNE=DJETI*SIG(NE)
      RADJNE=DJETI*RADJ(NE)
C     RADJNE=2.*DJETI*RADJ(NE)
      RLEJNE=DJETI*RLEJ(NE)
      SALJNE=SALJETI*SALJ(NE)
      TEMJNE=TEMJETI*TEMJ(NE)
      DYEJNE=DYEJETI*DYEJ(NE)
      SFLJNE=SFLJETI*SFLJ(NE)
      DO NT=1,NTOX
       TOXJNE(NT)=TOXJETI(NT)*TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJNE(NS)=SEDJETI(NS)*SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJNE(NX)=SNDJETI(NX)*SNDJ(NE,NX)
      ENDDO
C
C **  CALCULATE ENTRAINMENT
C
      QJTOTO=QJTOT
	QJTOT=QJTOT*RMAJP(NE)/RMAJP(NM)
C
      DO K=1,KC
	 ZLOWER=Z(K-1)*HP(LJP)+BELV(LJP)
	 ZUPPER=ZLOWER+DZC(K)*HP(LJP)
	 IF(ZJG(NE).GE.ZLOWER.AND.ZJG(NE).LT.ZUPPER)THEN
	   QJPENT(K,NJP)=QJPENT(K,NJP)+(QJTOT-QJTOTO)
         IF(RMAJI.GT.0.0)THEN
	     UJPAVG(K,NJP)=UJG(NE)/RMAJI
	     VJPAVG(K,NJP)=VJG(NE)/RMAJI
	     WJPAVG(K,NJP)=WJG(NE)/RMAJI
	   ENDIF
	 ENDIF
	ENDDO
	QJPENTT(NJP)=0.0
	DO K=1,KC
	  QJPENTT(NJP)=QJPENTT(NJP)+QJPENT(K,NJP)
	ENDDO
C
      IF(NPRTE.EQ.1)THEN
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)THEN
        WRITE(1,101)NJP,NJE,TIME,XJGNE,YJGNE,ZJGNE,
     &                         SIGNE,RADJNE,RLEJNE,QJTOT
        DRMAJ=RMAJP(NE)-RMAJP(NE-1)
        DRHO=(RHOA-RHOJ(NE))/RHOA
        WRITE(2,101)NJP,NJE,TIME,QJ(NE),UJG(NE),VJG(NE),WJG(NE),
     &                         RDQA(NE),RMAJP(NE),DRMAJ,DRHO
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE
       ENDIF
       IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &                           (SEDJNE(NS),NS=1,NSED)
       ENDIF
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &                            (SNDJNE(NX),NX=1,NSND)
       ENDIF
       IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED),
CJHFIX-REMOVE     &                         (SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &      (SEDJNE(NS),NS=1,NSED),(SNDJNE(NX),NX=1,NSND)
       ENDIF
       IF(ISTRAN(5).GE.1)THEN
         IF(NTOX.LE.8)THEN
           WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,NTOX)
           WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,NTOX)
          ELSE
           WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,8)
           WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,8)
           WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=9,NTOX)
           WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=9,NTOX)
         ENDIF
       ENDIF
      ENDIF
      ENDIF
C
      IF(NPRTE.EQ.1)THEN
      IF(IOUTJP(NJP).GE.2)THEN
        NJPS=NJPS+1
        TIMJP(NJPS)=TIME
        XJGNS(NJPS)=XJGNE
        YJGNS(NJPS)=YJGNE
        ZJGNS(NJPS)=ZJGNE
        SIGNS(NJPS)=SIGNE
        RADJNS(NJPS)=RADJNE
        RLEJNS(NJPS)=RLEJNE
        QJNS(NJPS)=QJ(NE)
        UJGNS(NJPS)=UJG(NE)
        VJGNS(NJPS)=VJG(NE)
        WJGNS(NJPS)=WJG(NE)
        RDQANS(NJPS)=RDQA(NE)
        RMAJPNS(NJPS)=RMAJP(NE)
        DRMAJNS(NJPS)=DRMAJ
        DRHONS(NJPS)=DRHO
        SALJNS(NJPS)=SALJNE
        TEMJNS(NJPS)=TEMJNE
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
        DYEJNS(NJPS)=DYEJNE
        DO NS=1,NSED
         SEDJNS(NS,NJPS)=SEDJNE(NS)
        ENDDO
        DO NX=1,NSND
         SNDJNS(NX,NJPS)=SNDJNE(NX)
        ENDDO
        DO NT=1,NTOX
         TOXJNS(NT,NJPS)=TOXJNE(NT)
         TOXPFTNS(NT,NJPS)=TOXPFTJP(NE,NT)
        ENDDO
      ENDIF
      ENDIF
C
      XJG(NM)=XJG(NE)
      YJG(NM)=YJG(NE)
      ZJG(NM)=ZJG(NE)
      SIG(NM)=SIG(NE)
      RADJ(NM)=RADJ(NE)
      RLEJ(NM)=RLEJ(NE)
      UJG(NM)=UJG(NE)
      VJG(NM)=VJG(NE)
      WJG(NM)=WJG(NE)
      QJ(NM)=QJ(NE)
      QJH(NM)=QJH(NE)
      RMAJP(NM)=RMAJP(NE)
      DRMAJS(NM)=DRMAJS(NE)
      DRMAJF(NM)=DRMAJF(NE)
      PHJ(NM)=PHJ(NE)
      THJG(NM)=THJG(NE)
      THJL(NM)=THJL(NE)
      RDQA(NM)=RDQA(NE)
      SALJ(NM)=SALJ(NE)
      TEMJ(NM)=TEMJ(NE)
      DYEJ(NM)=DYEJ(NE)
      SFLJ(NM)=SFLJ(NE)
      DO NT=1,NTOX
       TOXJ(NM,NT)=TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJ(NM,NS)=SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJ(NM,NX)=SNDJ(NE,NX)
      ENDDO
C
      ENDDO
C
C**********************************************************************C
C
C **  FINAL OUTPUT OF RESULTS
C
 2000 CONTINUE
C
      QJTOTO=QJTOT
	QJTOT=QJTOT*RMAJP(NE)/RMAJP(NM)
C
      DO K=1,KC
	 ZLOWER=Z(K-1)*HP(LJP)+BELV(LJP)
	 ZUPPER=ZLOWER+DZC(K)*HP(LJP)
	 IF(ZJG(NE).GE.ZLOWER.AND.ZJG(NE).LT.ZUPPER)THEN
	   QJPENT(K,NJP)=QJPENT(K,NJP)+(QJTOT-QJTOTO)
	 ENDIF
	ENDDO
	QJPENTT(NJP)=0.0
	DO K=1,KC
	QJPENTT(NJP)=QJPENTT(NJP)+QJPENT(K,NJP)
	ENDDO

!	WRITE(8,898)NJP,TIME,(QJPENT(K,NJP),K=1,KC),QJPENTT(NJP)    !hnr 7/27/2009
	WRITE(10,898)NJP,TIME,(QJPENT(K,NJP),K=1,KC),QJPENTT(NJP)
	WRITE(6,898)NJP,TIME,(QJPENT(K,NJP),K=1,KC),QJPENTT(NJP)
C
      DJETI=1./RLSCL
      XJGNE=DJETI*XJG(NE)
      YJGNE=DJETI*YJG(NE)
      ZJGNE=DJETI*ZJG(NE)
      SIGNE=DJETI*SIG(NE)
      RADJNE=DJETI*RADJ(NE)
C     RADJNE=2.*DJETI*RADJ(NE)
      RLEJNE=DJETI*RLEJ(NE)
      SALJNE=SALJETI*SALJ(NE)
      TEMJNE=TEMJETI*TEMJ(NE)
      DYEJNE=DYEJETI*DYEJ(NE)
      SFLJNE=SFLJETI*SFLJ(NE)
      DO NT=1,NTOX
       TOXJNE(NT)=TOXJETI(NT)*TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJNE(NS)=SEDJETI(NS)*SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJNE(NX)=SNDJETI(NX)*SNDJ(NE,NX)
      ENDDO
C
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)THEN
        WRITE(1,101)NJP,NJE,TIME,XJGNE,YJGNE,ZJGNE,
     &                         SIGNE,RADJNE,RLEJNE,QJTOT
        DRMAJ=RMAJP(NE)-RMAJP(NE-1)
        DRHO=(RHOA-RHOJ(NE))/RHOA
        WRITE(2,101)NJP,NJE,TIME,QJ(NE),UJG(NE),VJG(NE),WJG(NE),
     &                         RDQA(NE),RMAJP(NE),DRMAJ,DRHO
        IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE
        ENDIF
        IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &                            (SEDJNE(NS),NS=1,NSED)
        ENDIF
        IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &                             (SNDJNE(NX),NX=1,NSND)
        ENDIF
        IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED),
CJHFIX-REMOVE     &                         (SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,
     &        (SEDJNE(NS),NS=1,NSED),(SNDJNE(NX),NX=1,NSND)
        ENDIF
        IF(ISTRAN(5).GE.1)THEN
          IF(NTOX.LE.8)THEN
            WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,NTOX)
            WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,NTOX)
           ELSE
            WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,8)
            WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,8)
            WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=9,NTOX)
            WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=9,NTOX)
          ENDIF
        ENDIF
      ENDIF
C
      IF(IOUTJP(NJP).GE.2)THEN
      NJPS=NJPS+1
      TIMJP(NJPS)=TIME
      XJGNS(NJPS)=XJGNE
      YJGNS(NJPS)=YJGNE
      ZJGNS(NJPS)=ZJGNE
      SIGNS(NJPS)=SIGNE
      RADJNS(NJPS)=RADJNE
      RLEJNS(NJPS)=RLEJNE
      QJNS(NJPS)=QJ(NE)
      UJGNS(NJPS)=UJG(NE)
      VJGNS(NJPS)=VJG(NE)
      WJGNS(NJPS)=WJG(NE)
      RDQANS(NJPS)=RDQA(NE)
      RMAJPNS(NJPS)=RMAJP(NE)
      DRMAJNS(NJPS)=DRMAJ
      DRHONS(NJPS)=DRHO
      SALJNS(NJPS)=SALJNE
      TEMJNS(NJPS)=TEMJNE
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJNS(NJPS)=DYEJNE
      DO NS=1,NSED
       SEDJNS(NS,NJPS)=SEDJNE(NS)
      ENDDO
      DO NX=1,NSND
       SNDJNS(NX,NJPS)=SNDJNE(NX)
      ENDDO
      DO NT=1,NTOX
       TOXJNS(NT,NJPS)=TOXJNE(NT)
       TOXPFTNS(NT,NJPS)=TOXPFTJP(NE,NT)
      ENDDO
      ENDIF
C
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(1)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(2)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(3)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(4)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(14)
C
C**********************************************************************C
C
C **  WRITE OUT SAVED RESULTS IN COMPACT ASCII FORMAT
C
      IF(IOUTJP(NJP).EQ.2.OR.IOUTJP(NJP).EQ.3)THEN
C
C      IF(N.EQ.NUDJP(NJP)) OPEN(1,FILE=FNNRFLD,STATUS='UNKNOWN')
C     IF(N.EQ.NUDJP(NJP)) CLOSE(1,STATUS='DELETE')
      IF(N.EQ.1) OPEN(1,FILE=FNNRFLD,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(1,STATUS='DELETE')
      OPEN(1,FILE=FNNRFLD,STATUS='UNKNOWN',POSITION='APPEND')
C
      WRITE(1,101)NJP,NJPS,TIME
      DO NSV=1,NJPS
C       WRITE(1,104)XJGNS(NSV),YJGNS(NSV),ZJGNS(NSV),
C     &            SIGNS(NSV),RADJNS(NSV),RLEJNS(NSV)
C       WRITE(1,104)QJNS(NSV),UJGNS(NSV),VJGNS(NSV),WJGNS(NSV),
C     &            RDQANS(NSV),RMAJPNS(NSV),DRMAJNS(NSV),DRHONS(NSV)
       WRITE(1,104)XJGNS(NSV),YJGNS(NSV),ZJGNS(NSV),SIGNS(NSV),
     &             RADJNS(NSV),UJGNS(NSV),VJGNS(NSV),WJGNS(NSV),QJTOT
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV)
CJHFIX-ADD THE FOLLOWING 1 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV)
       ENDIF
       IF(ISTRAN(6).GE.1.AND.ISTRAN(7).EQ.0)THEN
CJHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),(SEDJNS(NS,NSV),NS=1,NSED)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV),
     &              (SEDJNS(NS,NSV),NS=1,NSED)
       ENDIF
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).GE.1)THEN
CJHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),(SNDJNS(NX,NSV),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV),
     &              (SNDJNS(NX,NSV),NX=1,NSND)
       ENDIF
       IF(ISTRAN(6).GE.1.AND.ISTRAN(7).GE.1)THEN
CJHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),(SEDJNS(NS,NSV),NS=1,NSED),
CJHFIX-REMOVE     &            (SNDJNS(NX,NSV),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV),
     &          (SEDJNS(NS,NSV),NS=1,NSED),(SNDJNS(NX,NSV),NX=1,NSND)
       ENDIF
       IF(ISTRAN(5).GE.1)THEN
         IF(NTOX.LE.8)THEN
           WRITE(1,104)(TOXJNS(NT,NSV),NT=1,NTOX)
          ELSE
           WRITE(1,104)(TOXJNS(NT,NSV),NT=1,8)
           WRITE(1,104)(TOXJNS(NT,NSV),NT=9,NTOX)
         ENDIF
         IF(NTOX.LE.8)THEN
           WRITE(1,104)(TOXPFTNS(NT,NSV),NT=1,NTOX)
          ELSE
           WRITE(1,104)(TOXPFTNS(NT,NSV),NT=1,8)
           WRITE(1,104)(TOXPFTNS(NT,NSV),NT=8,NTOX)
         ENDIF
       ENDIF
      ENDDO
C
      CLOSE(1)
C
      ENDIF
C
C**********************************************************************C
C
C **  WRITE OUT SAVED RESULTS IN BINARY FORMAT
C
C      IF(IOUTJP(NJP).EQ.2)THEN
      IF(IOUTJP(NJP).EQ.4)THEN
C
C      IF(N.EQ.NUDJP(NJP)) OPEN(1,FILE=FNNRFLD,FORM='UNFORMATTED')
C     IF(N.EQ.NUDJP(NJP)) CLOSE(1,STATUS='DELETE')
      IF(N.EQ.1) OPEN(1,FILE=FNNRFLB,FORM='UNFORMATTED')
      IF(N.EQ.1) CLOSE(1,STATUS='DELETE')
      OPEN(1,FILE=FNNRFLB,POSITION='APPEND',FORM='UNFORMATTED')
C
      WRITE(1)NJP,NJPS,TIME
      WRITE(1)XJGNS
      WRITE(1)YJGNS
      WRITE(1)ZJGNS
      WRITE(1)SIGNS
      WRITE(1)RADJNS
      WRITE(1)UJGNS
      WRITE(1)VJGNS
      WRITE(1)WJGNS
      IF(ISTRAN(1).GE.1)THEN
        WRITE(1)SALJNS
      ENDIF
      IF(ISTRAN(2).GE.1)THEN
        WRITE(1)TEMJNS
      ENDIF
CJHFIX-ADD THE FOLLOWING 3 LINE(S)
      IF(ISTRAN(3).GE.1)THEN
        WRITE(1)DYEJNS
      ENDIF
      IF(ISTRAN(6).GE.1)THEN
        WRITE(1)SEDJNS
      ENDIF
      IF(ISTRAN(7).GE.1)THEN
        WRITE(1)SNDJNS
      ENDIF
      IF(ISTRAN(5).GE.1)THEN
        WRITE(1)TOXJNS
      ENDIF
      IF(ISTRAN(5).GE.1)THEN
        WRITE(1)TOXPFTNS
      ENDIF
C
      CLOSE(1)
C
      ENDIF
C
C**********************************************************************C
C
C **  RELOCATE VOLUME SOURCE
C
      ZTMP=(ZJGNE-BELV(LJP))/HP(LJP)
      ZTMP=FLOAT(KC)*ZTMP
      KTMP=NINT(ZTMP)
      KTMP=MAX(1,KTMP)
      KTMP=MIN(KC,KTMP)
      IF(KFLAG.EQ.0) KEFFJP(NJP)=KTMP
      GOTO 9001
C
 9000 CONTINUE
      KEFFJP(NJP)=KQJP(NJP)
 9001 CONTINUE
C
!	WRITE(8,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)      !hnr 7/27/2009
	WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
	WRITE(6,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
      WRITE(10,135)NJP,TIME,KFLAG,KEFFJP(NJP),KQJP(NJP),QVJET,QJTOT
!      WRITE(8,135)NJP,TIME,KFLAG,KEFFJP(NJP),KQJP(NJP),QVJET,QJTOT    !hnr 7/27/2009
      WRITE(6,135)NJP,TIME,KFLAG,KEFFJP(NJP),KQJP(NJP),QVJET,QJTOT
      CLOSE(10)
C
C      DO K=1,KC
C       QSERT(K,NQSERJP(NJP))=0.
C      ENDDO
C
C      QSERT(KTMP,NQSERJP(NJP))=QQCJP(NJP)
C
C
C**********************************************************************C
C
C **  CALCULATION MOMENT INTERFACE QUANTITIES
C
      RDUM=0.
      WRITE(11,1110)NJP,N
      KZERO=0
	QUJ0=UJ0*QVJET0
	QVJ0=VJ0*QVJET0
	QWJ0=WJ0*QVJET0
      WRITE(11,1111)KZERO,QUJ0,QVJ0,QWJ0,QVJET0,RDUM,RDUM,RDUM,RDUM
	QENTTMP=QVJET0
      DO K=1,KEFFJP(NJP)
	  QENTTMP=QENTTMP+QJPENT(K,NJP)
	  QUAG=UAG*QJPENT(K,NJP)
	  QVAG=VAG*QJPENT(K,NJP)
	  QWAG=WAG*QJPENT(K,NJP)
	  WRITE(11,1111)K,UJPAVG(K,NJP),VJPAVG(K,NJP),WJPAVG(K,NJP),
     &                QENTTMP,QUAG,QVAG,QWAG,QJPENT(K,NJP)
	ENDDO
C
C**********************************************************************C
C
C **  END LOOP OVER ALL JET/PLUME LOCATIONS
C
       ENDIF
      ENDDO
C
      CLOSE(11)
C
C**********************************************************************C

 1110 FORMAT(/,'NJP,N = ',I5,I10,/)
 1111 FORMAT(I5,10E14.5)
  899 FORMAT(' JPENT ',I5,F12.6,12E12.4)
  898 FORMAT(' FINAL JPENT ',I5,F12.6,12E12.4)
  100 FORMAT(120X)
CJHFIX-REMOVE  101 FORMAT(2I6,9E12.4)
CJHFIX-REMOVE  102 FORMAT(2I6,9E12.4)
CJHFIX-REMOVE  104 FORMAT(9E12.4)
CJHFIX-ADD THE FOLLOWING 3 LINE(S)
  101 FORMAT(2I6,10E12.4)
  102 FORMAT(2I6,10E12.4)
  104 FORMAT(10E12.4)
  111 FORMAT('    NJ    NE     TIME         XJ          YJ     ',
     &                 '     ZJ         SIG         RAD     ',
     &                 '    LEN')
  112 FORMAT('    NJ    NE     TIME         QJ          UJ     ',
     &                 '     VJ          WJ         RDQ     ',
     &                 '    RMA         DRM         DRHO')
  113 FORMAT('    NJ    NE     TIME        SAL         TEM     ',
     &                 ' SED(1,NSD)  SND(1,NSN)')
  114 FORMAT('    NJ    NE     TIME     TOX(1,NTX)')
  124 FORMAT('    NJ    NE     TIME    TOXPF(1,NTX)')
  134 FORMAT(' BEGIN JET/PLUME NJP,TIME = ',I6,F12.5)
  135 FORMAT(' END JET/PLUME NJP,TIME,KFLAG,KEFFJP,KQJP,QVJET,QVJTOT',
     &        ' = ',I6,F13.5,3I4,2E12.4)
  600 FORMAT(' ELEMENT, # INTERATIONS = ',2I6)
  601 FORMAT(' MAXIMUM ITERATIONS EXCEEDED NE,NI = ',2I6)
  602 FORMAT(' JET/PLUME BNDRY PEN SURF NJ,NE,NI,Z,ZS = ',3I6,2F10.2)
  603 FORMAT(' JET/PLUME BNDRY PEN BOTT NJ,NE,NI,Z,ZB = ',3I6,2F10.2)
  604 FORMAT(' JET/PLUME AT NEUTRAL LEVEL NJ,NE,NI,Z  = ',3I6,2F10.2)
  605 FORMAT(' JET/PLUME CTRLN PEN SURF NJ,NE,NI,Z,ZS = ',3I6,2F10.2)
  606 FORMAT(' JET/PLUME CTRLN PEN BOTT NJ,NE,NI,Z,ZB = ',3I6,2F10.2)
  888 FORMAT(A80,/)
  620 FORMAT('NJ,NE,NI,IT,DS,DSO,DF,DFO = ',4I6,6E13.4)
C
C**********************************************************************C
C
      RETURN
      END
