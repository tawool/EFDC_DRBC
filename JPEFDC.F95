!
!**********************************************************************C
!**********************************************************************C
!**********************************************************************C
!
      SUBROUTINE JPEFDC
!
! **  PROGRAM JPEFDC IS STAND ALONE VERSION OF EFDC JET-PLUME MODEL
! **  BASED ON LEE AND CHEUNG'S LAGRANGIAN BUOYANT JET MODEL
! **  AND EXTENDED FOR THREE-DIMENSIONAL AMBIENT CURRENTS
! **    REF: LEE, J.H.W., AND V. CHEUNG, J. ENVIRON. ENGR., 116, 1085-
! **    1106, 1990.
!
! **  FOR MORE INFO EMAIL HAM@VISI.NET
!
!**********************************************************************C
!
! **  THIS SUBROUTINE IS PART OF  EFDC-FULL VERSION 1.0a
!
! **  LAST MODIFIED BY JOHN HAMRICK ON 1 NOVEMBER 2001
!
!----------------------------------------------------------------------C
!
! CHANGE RECORD
! DATE MODIFIED     BY                 DATE APPROVED    BY
!
!----------------------------------------------------------------------C
!
!**********************************************************************C
!
      INCLUDE 'EFDC.PAR'
      INCLUDE 'EFDC.CMN'
!
      PARAMETER (NJELM=2,NATDM=1)
!      IMPLICIT REAL*8 (A-H,O-Z)
!
!**********************************************************************C
!
      DIMENSION XJG(NJELM),YJG(NJELM),ZJG(NJELM),UJG(NJELM),VJG(NJELM),WJG(NJELM),QJ(NJELM),      &
                QJH(NJELM),SIG(NJELM),THJL(NJELM),THJG(NJELM),PHJ(NJELM),RMAJP(0:NJELM),          &
                RHOJ(NJELM),SALJ(NJELM),TEMJ(NJELM),DYEJ(NJELM),SFLJ(NJELM),SEDJ(NJELM,NSCM),     &
                SNDJ(NJELM,NSNM),TOXJ(NJELM,NTXM),TOXPFJP(NJELM,NSTM,NTXM),TOXPFTJP(NJELM,NTXM),  &
                RADJ(NJELM),RLEJ(NJELM),RDQA(NJELM),DRMAJS(NJELM),DRMAJF(NJELM)
!
!      DIMENSION ZAD(KCM,NATDM),  TAD(KCM,NATDM), UAGD(KCM,NATDM),
!     &         VAGD(KCM,NATDM), WAGD(KCM,NATDM),SALAD(KCM,NATDM),
!     &        TEMAD(KCM,NATDM),DYEAD(KCM,NATDM),SFLAD(KCM,NATDM),
!     &        TOXAD(KCM,NTXM,NATDM),
!     &        SEDAD(KCM,NSCM,NATDM),SNDAD(KCM,NSNM,NATDM)
!
      DIMENSION XJGNS(NJPSM),YJGNS(NJPSM),ZJGNS(NJPSM),SIGNS(NJPSM),UJGNS(NJPSM),VJGNS(NJPSM),    &
                WJGNS(NJPSM),TIMJP(NJPSM),RLEJNS(NJPSM),RDQANS(NJPSM),DRMAJNS(NJPSM),             &
                DRHONS(NJPSM),QJNS(NJPSM),RADJNS(NJPSM),RMAJPNS(NJPSM),
!JHFIX-REMOVE     &      TEMJNS(NJPSM),SALJNS(NJPSM),
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
                TEMJNS(NJPSM),SALJNS(NJPSM),DYEJNS(NJPSM),SEDJNS(NSCM,NJPSM),SNDJNS(NSNM,NJPSM),  &
                TOXJNS(NTXM,NJPSM),TOXPFTNS(NTXM,NJPSM)
!
!      DIMENSION TOXA(NTXM),SEDA(NSCM),SNDA(NSNM)
!
      DIMENSION TOXJET(NTXM),SEDJET(NSCM),SNDJET(NSNM)
!
      DIMENSION TOXJETI(NTXM),SEDJETI(NSCM),SNDJETI(NSNM),TOXJNE(NTXM),SEDJNE(NSCM),SNDJNE(NSNM)
!
	DIMENSION UJPAVG(KCM,NJPSM),VJPAVG(KCM,NJPSM),WJPAVG(KCM,NJPSM)
!
!JH      CHARACTER*60 TITLE
!
!      COMMON/ADATA/ ZAD,  TAD, UAGD,VAGD, WAGD,SALAD,
!     &        TEMAD,DYEAD,SFLAD,TOXAD,SEDAD,SNDAD
!
!      COMMON/AVAL/ NAZD,NATD,ZVAL,TVAL,UAG, VAG, WAG,SALA,
!     &            TEMA,DYEA,SFLA,TOXA,SEDA,SNDA
!
      CHARACTER*11 FNJPGEO,FNJPVEL,FNJPCON,FNJPTOX,FNJPTPF,FNJPLOG,FNNRFLD,FNNRFLB
!
      CHARACTER*2  FNNUM(25)
!
!**********************************************************************C
!
! **  SET CONSTANTS
!
      IF(ISDYNSTP.EQ.0)THEN
        TIME=DT*FLOAT(N)+TCON*TBEGIN
        TIME=TIME/TCON
      ELSE
        TIME=TIMESEC/TCON
      ENDIF

      RPI=3.141592654
      G=9.807
      RADDEG=RPI/180.
!
       FNNUM( 1)= '01'
       FNNUM( 2)= '02'
       FNNUM( 3)= '03'
       FNNUM( 4)= '04'
       FNNUM( 5)= '05'
       FNNUM( 6)= '06'
       FNNUM( 7)= '07'
       FNNUM( 8)= '08'
       FNNUM( 9)= '09'
       FNNUM(10)= '10'
       FNNUM(11)= '11'
       FNNUM(12)= '12'
       FNNUM(13)= '13'
       FNNUM(14)= '14'
       FNNUM(15)= '15'
       FNNUM(16)= '16'
       FNNUM(17)= '17'
       FNNUM(18)= '18'
       FNNUM(19)= '19'
       FNNUM(20)= '20'
       FNNUM(21)= '21'
       FNNUM(22)= '22'
       FNNUM(23)= '23'
       FNNUM(24)= '24'
       FNNUM(25)= '25'
!
       OPEN(88,FILE='JPBUG',POSITION='APPEND')
       CLOSE(88,STATUS='DELETE')
!
!**********************************************************************C
!
! **  LOOP OVER ALL JET/PLUME LOCATIONS
!
      DO NJP=1,NQJPIJ
!
      DO K=1,KC
	  QJPENT(K,NJP)=0.0
	  UJPAVG(K,NJP)=0.0
	  VJPAVG(K,NJP)=0.0
	  WJPAVG(K,NJP)=0.0
	ENDDO
!
       FNJPLOG='JPLOG' // FNNUM(NJP) // '.OUT'
!
!       IF(N.EQ.NUDJP(NJP)) OPEN(10,FILE=FNJPLOG,STATUS='UNKNOWN')
!       IF(N.EQ.NUDJP(NJP)) CLOSE(10,STATUS='DELETE')
       IF(N.EQ.1) OPEN(10,FILE=FNJPLOG,STATUS='UNKNOWN')
       IF(N.EQ.1) CLOSE(10,STATUS='DELETE')
       OPEN(10,FILE=FNJPLOG,STATUS='UNKNOWN',POSITION='APPEND')
       WRITE(10,134)NJP,TIME
!       WRITE(8,134)NJP,TIME     !hnr 7/27/2009
       WRITE(6,134)NJP,TIME
!
       IF(N.EQ.1) KEFFJP(NJP)=KQJP(NJP)
       LJP=LIJ(IQJP(NJP),JQJP(NJP))
       KJP=KQJP(NJP)
       KFLAG=0
!       IF(KQJP(NJP).EQ.0)THEN
        ZTMP=(ZJET(NJP)-BELV(LJP))/HP(LJP)
        KJP=NINT(ZTMP)
        IF(KJP.LT.1) KJP=1
        IF(KJP.GT.KC) KJP=KC
!       ENDIF
       IF(ICALJP(NJP).GT.0)THEN
!
!**********************************************************************C
!
! **  READ INPUT DATA
!
!JH      OPEN(1,FILE='JPEFDC.INP',STATUS='UNKNOWN')
!
!----------------------------------------------------------------------C
!
!1   TITLE
!
!JH      DO N=1,7
!JH       READ(1,100)
!JH      ENDDO
!JH      READ(1,*)TITLE
!
!----------------------------------------------------------------------C
!
!2   CONTROLS
!
!    NJEL     MAXIMUM NUMBER OF ELEMENTS ALONG JET/PLUME LENGTH
!    ISAMB  0 FOR SPATIALLY AND TEMPORALLY CONSTANT AMBIENT CONDITIONS
!           1 FOR SPATIALLY VARYING AND TEMPORALLY CONSTANT CONDITIONS
!           2 FOR SPATIALLY AND TEMPORALLY VARYING AMBIENT CONDITIONS
!    ISJPD  0 FOR TEMPORALLY CONSTANT JET/PLUME DISCHARGE
!           1 FOR TEMPORALLY VARYING JET/PLUME DISCHARGE
!    ISENT  0 USE MAXIMUM OF SHEAR AND FORCED ENTRAINMENT
!           1 USE SUM OF SHEAR AND FORCED ENTRAINMENT
!    ISTOP  0 STOP AT SPECIFIED NUMBER OF ELEMENTS
!           1 STOP WHEN CENTERLINE PENETRATES BOTTOM OR SURFACE
!           2 STOP WITH BOUNDARY PENETRATES BOTTOM OR SURFACE
!    ISOUT  0 DIMENSIONAL OUTPUT, 1 NONDIM OUTPUT LENGTH SCALED BY DJET
!           2 NONDIM OUTPUT LENGTH SCALED BY SQRT(PI)*RJET
!    NPRTE    ELEMENT OUTPUT PRINT FREQUENCY
!    CFRD     ADJUSTMENT FACTOR FOR FROUDE NUMBER
!    TUJP     TEMPORAL FREQUENCY FOR UPDATING JET/PLUME (SEC)
!             IF ISJPD = 1
!
!JH      DO N=1,22
!JH       READ(1,100)
!JH      ENDDO
!JH      READ(1,*)NJEL,ISAMB,ISJPD,ISENT,ISTOP,ISOUT,NPRTE,ALPHA,TUJP
!JH      ALPH2=ALPHA*ALPHA
!
!2   EFDC EMBEDDED VERSION
!
!     NJEL -> NJEL(NJP) PASSED FROM EFDC.CMN
!
!     ISAMB=1 FOR INSTANTANEOUS ANALYSIS WITH SPATIALLY VARIABLE
!             CONDITIONS
      ISAMB=1
!
!     ISJPD=0 FOR INSTANTANEOUS ANALYSIS WITH CONSTANT DISCHARGE
!             CONDITIONS
      ISJPD=0
!
!     ISENT -> ISENT(NJP) PASSED FROM EFDC.CMN
!
!     ISTOP SET FROM PASSED COMMON VARIABLE
      ISTOP=ISTJP(NJP)
!
!     ISOUT SET FOR DIMENSIONAL OUTPUT
      ISOUT=0
!
!     NPRTE SET TO DUMMY FLAG 0 TO INTERNALLY CALCUATED SPATIAL
!     PRINT FREQUENCY
      NPRTE=0
!
!     ALPHA SET FROM PASSED COMMON VARIABLE
      ALPHA=CFRD(NJP)
      ALPH2=ALPHA*ALPHA
!
!     TUJP SET TO DUMMAY FLAG OF 0
      TUJP=0
!
!----------------------------------------------------------------------C
!
!3   ITERATION AND ERROR CONTROLS
!
!    NIMAX    MAXIMUM NUMEBER OF ITERATION
!    XYERR    HORIZONTAL TRAJECTORY ERROR CRITERA (M)
!    ZERR     VERTICAL TRAJECTORY ERROR CRITERA (M)
!    RRER     HORIZONTAL TRAJECTORY ERROR CRITERA (M)
!    RLER     VERTICAL TRAJECTORY ERROR CRITERA (M)
!    DMRERR   ENTRAINMENT ERROR CRITERIA
!     NOTE!   NEGATIVE VALUES OF ERROR PARAMETER BYPASSES THIS ERROR
!             CRITERIA
!
!JH      DO N=1,13
!JH       READ(1,100)
!JH      ENDDO
!JH      READ(1,*)NIMAX,XERRM,ZERRM,RRERM,RLERM,DMRERM
!JH      YERRM=XERRM
!JH      IF(XERRM.LT.0) XERRM=1000.
!JH      IF(YERRM.LT.0) YERRM=1000.
!JH      IF(ZERRM.LT.0) ZERRM=1000.
!JH      IF(RRERM.LT.0) RRERM=1000.
!JH      IF(RLERM.LT.0) RLERM=1000.
!JH      IF(DMRERM.LT.0) DMRERM=1000.
!
!3   EFDC EMBEDDED VERSION
!
!!    NIMAX SET FROM PASSED COMMON VARIABLE
      NIMAX=NJPMX(NJP)
!
!     ERROR CRITERA BASED ON ENTRAINMENT ERROR PASSED FROM COMMON
      XERRM=1000.
      YERRM=1000.
      ZERRM=1000.
      RRERM=1000.
      RLERM=1000.
      DMRERM=DJPER(NJP)
!
!----------------------------------------------------------------------C
!
!4   SETTLING, CONTAMINANT PARTITIONING AND DECAY
!
!    WSET   SEDIMENT SETTLING VELOCITY (M/S)
!    TPAR   PARTITION COEFFICIENT (L/MG OR M**3/GM)
!    TDCY   CONTAMINANT DECAY RATE (1./SEC)
!
!JH      DO N=1,8
!JH       READ(1,100)
!JH      ENDDO
!JH      READ(1,*)WSET,TPAR,TDCY
!
!4   EFDC EMBEDDED VERSION
!
!    WSET,TPAR,TDCY NOT USED IN EMBEDDED VERSION.  APPROPRIATE
!    EFDC VARIABLES ARE USED INSTEAD
!
!----------------------------------------------------------------------C
!
!5   JET/PLUME LOCATION, ORIENTATION, GEOMENTRY, AND DISCHARGE
!
!    XJET   EAST COORDINATE OF DISCHARGE (M)
!    YJET   NORTH COORDINATE OF DISCHARGE (M)
!    ZJET   ELEVATION OF DISCHARGE (M)
!    PHJET  VERTICAL JET ANGLE POSITIVE FROM HORIZONTAL (DEGREES)
!    THJET  HORIZONTAL JET ANGLE POS COUNTER CLOCKWISE FROM EAST (DEGREES)
!    DJET   DIAMETER OF DISCHARGE PORT (M)
!    QJET   CONSTANT DISCHARGE VELOCITY (M)
!           (NEGATIVE VALUE INDICATES CALCULATE FROM QVJET)
!    QVJET  CONSTANT DISCHARGE RATE (CMS)
!           (NEGATIVE VALUE INDICATES CALCULATE FROM QJET)
!
!JH      DO N=1,15
!JH       READ(1,100)
!JH      ENDDO
!JH      READ(1,*)XJET,YJET,ZJET,PHJET,THJET,DJET,QJET,QVJET
!JHCDEG      PHJET=RADDEG*PHJET
!JHCDEG      THJET=RADDEG*THJET
!JH      RJET=0.5*DJET
!JH      AJET=RPI*RJET*RJET
!JH      IF(QJET.LT.0.)THEN
!JH        QJET=QVJET/AJET
!JH      ENDIF
!JH      IF(QVJET.LT.0.)THEN
!JH         QVJET=QJET*AJET
!JH      ENDIF
!
!5   EFDC EMBEDDED VERSION
!
!     XJET AND YJET SET TO LOCAL ORIGIN OF ZERO
      XJET=0.
      YJET=0.
!
!     ZJET -> ZJET(NJP) PASSED FROM EFDC.CMN
!
!     PHJET -> PHJET(NJP) PASSED FROM EFDC.CMN
!
!     THJET -> THJET(NJP) PASSED FROM EFDC.CMN
!
!     DJET -> DJET(NJP) PASSED FROM EFDC.CMN
!
!     RJET AND AJET SET BELOW
      RJET=0.5*DJET(NJP)
      AJET=RPI*RJET*RJET
!
!     QVJET SET FROM PASSED VOLUME DISCHARGE INFORMATION
!
      IF(ICALJP(NJP).EQ.1)THEN
        QVJET=QQCJP(NJP)
	  QSERTAVG=0.
        DO K=1,KC
          QVJET=QVJET+QSERT(K,NQSERJP(NJP))
	    QSERTAVG=QSERTAVG+QSERT(K,NQSERJP(NJP))
        ENDDO
        IF(QVJET.LE.1.E-16) GOTO 9000
	ENDIF
!
      IF(ICALJP(NJP).EQ.2)THEN
        QVJET=QWRCJP(NJP)+QWRSERT(NQWRSERJP(NJP))
        IF(QVJET.LE.1.E-16) GOTO 9000
	ENDIF
!
!     QJET SET HERE
!
      QVJET0=QVJET
      QJET=QVJET/AJET
!
!----------------------------------------------------------------------C
!
!6   JET/PLUME CONCENTRATIONS
!
!    SALJET   SALINITY (PPT)
!    SEDJET   SEDIMENT (MG/L OR GM/M**3)
!    TEMJET   TEMPERATURE
!    TOXJET   CONTAMINATE CONCENTRATION (UG/L OR MG/M**3)
!
!JH      DO N=1,9
!JH       READ(1,100)
!JH      ENDDO
!JH      READ(1,*)SALJET,SEDJET,TEMJET,TOXJET
!
!6   EFDC EMBEDDED VERSION
!
      IF(ICALJP(NJP).EQ.1)THEN
!
      WTC=QQCJP(NJP)
	WTV=QSERTAVG
	TMPVAL=WTC+WTV
	WTC=WTC/TMPVAL
	WTV=WTV/TMPVAL
!
      SALJET=WTC*CQCJP(1,NJP,1)+WTV*CSERT(1,NCSERJP(NJP,1),1)
      TEMJET=WTC*CQCJP(1,NJP,2)+WTV*CSERT(1,NCSERJP(NJP,2),2)
      DYEJET=WTC*CQCJP(1,NJP,3)+WTV*CSERT(1,NCSERJP(NJP,3),3)
      SFLJET=WTC*CQCJP(1,NJP,4)+WTV*CSERT(1,NCSERJP(NJP,4),4)
!
      DO NT=1,NTOX
      NV=4+NT
      TOXJET(NT)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)
      ENDDO
!
      DO NX=1,NSED
      NV=4+NTOX+NX
!      SEDJET(NS)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)
      SEDJET(NX)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)     !hnr corrected the subscript from the line above
      ENDDO
!
      DO NX=1,NSND
      NV=4+NTOX+NSED+NX
      SNDJET(NX)=WTC*CQCJP(1,NJP,NV)+WTV*CSERT(1,NCSERJP(NJP,NV),NV)
      ENDDO
!
      ENDIF
!
      IF(ICALJP(NJP).EQ.2)THEN
!
      WTC=QWRCJP(NJP)
	WTV=QWRSERT(NQWRSERJP(NJP))
	TMPVAL=WTC+WTV
	WTC=WTC/TMPVAL
	WTV=WTV/TMPVAL
!
      NS=NQWRSERJP(NJP)
	LU=LIJ(IUPCJP(NJP),JUPCJP(NJP))
	KU=KUPCJP(NJP)

      SALJET=WTC*CWRCJP(NJP,1)+WTV*CQWRSERT(NS,1)+SAL1(LU,KU)
      TEMJET=WTC*CWRCJP(NJP,2)+WTV*CQWRSERT(NS,2)+TEM1(LU,KU)
      DYEJET=WTC*CWRCJP(NJP,3)+WTV*CQWRSERT(NS,3)+DYE1(LU,KU)
      SFLJET=WTC*CWRCJP(NJP,4)+WTV*CQWRSERT(NS,4)+SFL2(LU,KU)
!
      DO NT=1,NTOX
      NV=4+NT
      TOXJET(NT)=WTC*CWRCJP(NJP,NV)+WTV*CQWRSERT(NS,NV)+TOX1(LU,KU,NT)
      ENDDO
!
      DO NX=1,NSED
      NV=4+NTOX+NX
      SEDJET(NS)=WTC*CWRCJP(NJP,NV)+WTV*CQWRSERT(NS,NV)+SED1(LU,KU,NX)
      ENDDO
!
      DO NX=1,NSND
      NV=4+NTOX+NSED+NX
      SNDJET(NX)=WTC*CWRCJP(NJP,NV)+WTV*CQWRSERT(NS,NV)+SND1(LU,KU,NX)
      ENDDO
!
      ENDIF
!
!----------------------------------------------------------------------C
!
!7   AMBIENT GEOMETRY
!
!    ZBOT   BOTTOM ELEVATION (M)
!    ZSUR   SURFACE ELEVATION (M)
!    NAZD   NUMBER OF AMBIENT DATA IN VERTICAL
!    NATD   NUMBER OF AMBIENT DATA IN TIME
!
!JMH      DO N=1,9
!JMH       READ(1,100)
!JMH      ENDDO
!JMH      READ(1,*)ZBOT,ZSURF,NAZD,NATD
!
!7   EFDC EMBEDDED VERSION
!
      ZBOT=BELV(LJP)
      ZSUR=BELV(LJP)+HP(LJP)
      NAZD=KC
      NATD=1
!
!    SPATIAL PRINT/SAVE INTERVAL IN VERTICAL
!
!      DZPRT=HP(LJP)/FLOAT(NJPSM-2)
      DZPRT=HP(LJP)/FLOAT(NZPRJP(NJP)-2)
      ZJPRT=ZJET(NJP)+DZPRT
!
!----------------------------------------------------------------------C
!
!8   AMBIENT FLOW CONDITIONS
!
!    ZA     ELEVATION OF AMBIENT DATA (M)
!    TA     TIME OF AMBIENT DATA (SEC, HR, OR DAY FOR OUTPUT REFERENCE)
!    UAG    EAST VELOCITY (M/S)
!    VAG    NORTH VELOCITY (M/S)
!    WAG    VERTICAL VELOCITY (M/S)
!    SALA   AMBIENT SALINITY (PPT)
!    SEDA   AMBIENT SEDIMENT CONCENTRATION (MG/L OR GM/M**3)
!    TEMA   AMBIENT TEMPERATURE (DEG C)
!    TOXA   AMBIENT TOXIC CONTAMINANT CONCENTRATION (UG/L OR MG/M**3)
!
!JH      DO N=1,14
!JH       READ(1,100)
!JH      ENDDO
!JH      DO NT=1,NATD
!JH       DO NZ=1,NAZD
!JH        READ(1,*)ZAD(NZ,NT),  TAD(NZ,NT), UAGD(NZ,NT), VAGD(NZ,NT),
!JH     &          WAGD(NZ,NT),SALAD(NZ,NT),SEDAD(NZ,NT),TEMAD(NZ,NT),
!JH     &         TOXAD(NZ,NT)
!JH       ENDDO
!JH      ENDDO
!
!8   EFDC EMBEDDED VERSION
!
      ZAD(1,1)=BELV(LJP)+0.5*HP(LJP)*DZC(1)
      DO NZ=2,NAZD
       ZAD(NZ,1)=ZAD(NZ-1,1)+0.5*HP(LJP)*( DZC(NZ-1)+DZC(NZ) )
      ENDDO
!
      DO NZ=1,NAZD
       K=NZ
       L=LJP
       LN=LNC(L)
       LS=LSC(L)
       UTMP=0.5*(U(L+1,NZ)+U(L,NZ))
       VTMP=0.5*(V(LN ,NZ)+V(L,NZ))
       UAGD(NZ,1)=CUE(L)*UTMP+CVE(L)*VTMP
       VAGD(NZ,1)=CUN(L)*UTMP+CVN(L)*VTMP
       WAGD(NZ,1)=0.5*(W(L,K)+W(L,K-1))+GI*ZZ(K)*(DTI*(P(L)-P1(L))+0.5*(U(L+1,K)*(P(L+1)-P(L))    &
                  *DXIU(L+1)+U(L,K)*(P(L)-P(L-1))*DXIU(L)+V(LN,K)*(P(LN)-P(L))*DYIV(LN)+V(L,K)    &
                  *(P(L)-P(LS))*DYIV(L)))+0.5*(1.-ZZ(K))*(U(L+1,K)*(BELV(L+1)-BELV(L))*DXIU(L+1)  &
                  +U(L,K)*(BELV(L)-BELV(L-1))*DXIU(L)+V(LN,K)*(BELV(LN)-BELV(L))*DYIV(LN)         &
                  +V(L,K)*(BELV(L)-BELV(LS))*DYIV(L))
       OPEN(88,FILE='JPBUG',POSITION='APPEND')
       WRITE(88,889)NZ,K,L,LN,LS,SALAD(NZ,1),TEMAD(NZ,1),TOXAD(NZ,1,1)
       CLOSE(88)
      ENDDO
!
  889 FORMAT(5I6,3E14.5)
!
      DO NZ=1,KC
       SALAD(NZ,1)=SAL(LJP,NZ)
       TEMAD(NZ,1)=TEM(LJP,NZ)
       DYEAD(NZ,1)=DYE(LJP,NZ)
       SFLAD(NZ,1)=SFL(LJP,NZ)
      ENDDO
!
      DO NT=1,NTOX
      DO NZ=1,NAZD
       TOXAD(NZ,NT,1)=TOX(LJP,NZ,NT)
      ENDDO
      ENDDO
!
      DO NS=1,NSED
      DO NZ=1,NAZD
       SEDAD(NZ,NS,1)=SED(LJP,NZ,NS)
      ENDDO
      ENDDO
!
      DO NX=1,NSND
      DO NZ=1,NAZD
       SNDAD(NZ,NX,1)=SND(LJP,NZ,NX)
      ENDDO
      ENDDO
!
!JH      CLOSE(1)
!
!**********************************************************************C
!
! **  OPEN OUTPUT FILES
!
      FNJPGEO='JPGEO' // FNNUM(NJP) // '.OUT'
      FNJPVEL='JPVEL' // FNNUM(NJP) // '.OUT'
      FNJPCON='JPCON' // FNNUM(NJP) // '.OUT'
      FNJPTOX='JPTOX' // FNNUM(NJP) // '.OUT'
      FNJPTPF='JPTPF' // FNNUM(NJP) // '.OUT'
      FNNRFLD='NRFLD' // FNNUM(NJP) // '.OUT'
      FNNRFLB='NRFLD' // FNNUM(NJP) // '.BIN'
!
!      IF(N.EQ.NUDJP(NJP)) OPEN(1,FILE=FNJPGEO,STATUS='UNKNOWN')
!      IF(N.EQ.NUDJP(NJP)) CLOSE(1,STATUS='DELETE')
      IF(N.EQ.1) OPEN(1,FILE=FNJPGEO,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(1,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)OPEN(1,FILE=FNJPGEO,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)WRITE(1,111)
!
!      IF(N.EQ.NUDJP(NJP)) OPEN(2,FILE=FNJPVEL,STATUS='UNKNOWN')
!      IF(N.EQ.NUDJP(NJP)) CLOSE(2,STATUS='DELETE')
      IF(N.EQ.1) OPEN(2,FILE=FNJPVEL,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(2,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)OPEN(2,FILE=FNJPVEL,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)WRITE(2,112)
!
!      IF(N.EQ.NUDJP(NJP)) OPEN(3,FILE=FNJPCON,STATUS='UNKNOWN')
!      IF(N.EQ.NUDJP(NJP)) CLOSE(3,STATUS='DELETE')
      IF(N.EQ.1) OPEN(3,FILE=FNJPCON,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(3,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)OPEN(3,FILE=FNJPCON,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)WRITE(3,113)
!
      IF(ISTRAN(5).GE.1)THEN
!      IF(N.EQ.NUDJP(NJP)) OPEN(4,FILE=FNJPTOX,STATUS='UNKNOWN')
!      IF(N.EQ.NUDJP(NJP)) CLOSE(4,STATUS='DELETE')
      IF(N.EQ.1) OPEN(4,FILE=FNJPTOX,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(4,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)OPEN(4,FILE=FNJPTOX,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)WRITE(4,114)
      ENDIF
!
      IF(ISTRAN(5).GE.1)THEN
!      IF(N.EQ.NUDJP(NJP)) OPEN(14,FILE=FNJPTPF,STATUS='UNKNOWN')
!      IF(N.EQ.NUDJP(NJP)) CLOSE(14,STATUS='DELETE')
      IF(N.EQ.1) OPEN(14,FILE=FNJPTPF,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(14,STATUS='DELETE')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)OPEN(14,FILE=FNJPTPF,STATUS='UNKNOWN',POSITION='APPEND')
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)WRITE(14,124)
      ENDIF
!
      IF(N.EQ.1) THEN
	  OPEN(11,FILE='JPMOMENT.OUT')
        CLOSE(11,STATUS='DELETE')
	  OPEN(11,FILE='JPMOMENT.OUT')
	ELSE
	  OPEN(11,FILE='JPMOMENT.OUT',POSITION='APPEND')
	ENDIF

!**********************************************************************C
!
! **  SET INITIAL CONDITIONS
!
      DTJP=0.1*RJET/QJET
!
! ++  JET/PLUME DISCHARGE, GLOBAL COORDINATES
!
      XJG(1)=XJET
      YJG(1)=YJET
      ZJG(1)=ZJET(NJP)
!
      XJG(2)=XJET
      YJG(2)=YJET
      ZJG(2)=ZJET(NJP)
!
      SIG(1)=0.
      SIG(2)=0.
!
! ++  INITIALIZE JET DISCHARGE GEOMENTRY
!
      RADJ(1)=RJET
      RLEJ(1)=0.1*RJET
!
      RADJ(2)=RJET
      RLEJ(2)=0.1*RJET
!
! ++  JET DISCHARGE VELOCITY MAGNITUDE AND COMPONENTS
!
      AJET=RPI*RJET*RJET
      QJ(1)=QVJET/AJET
!      QJH(1)=QJ(1)*COSD(PHJET(NJP))
!      UJG(1)=QJ(1)*COSD(PHJET(NJP))*COSD(THJET(NJP))
!      VJG(1)=QJ(1)*COSD(PHJET(NJP))*SIND(THJET(NJP))
!      WJG(1)=QJ(1)*SIND(PHJET(NJP))
      QJH(1)=QJ(1)*COS(0.0175*PHJET(NJP))
      UJG(1)=QJ(1)*COS(0.0175*PHJET(NJP))*COS(0.0175*THJET(NJP))
      VJG(1)=QJ(1)*COS(0.0175*PHJET(NJP))*SIN(0.0175*THJET(NJP))
      WJG(1)=QJ(1)*SIN(0.0175*PHJET(NJP))
	UJ0=UJG(1)
	VJ0=VJG(1)
	WJ0=WJG(1)
!
      QJ(2)=QVJET/AJET
!      QJH(2)=QJ(2)*COSD(PHJET(NJP))
!      UJG(2)=QJ(2)*COSD(PHJET(NJP))*COSD(THJET(NJP))
!      VJG(2)=QJ(2)*COSD(PHJET(NJP))*SIND(THJET(NJP))
!      WJG(2)=QJ(2)*SIND(PHJET(NJP))
      QJH(2)=QJ(2)*COS(0.0175*PHJET(NJP))
      UJG(2)=QJ(2)*COS(0.0175*PHJET(NJP))*COS(0.0175*THJET(NJP))
      VJG(2)=QJ(2)*COS(0.0175*PHJET(NJP))*SIN(0.0175*THJET(NJP))
      WJG(2)=QJ(2)*SIN(0.0175*PHJET(NJP))
!
! ++ INITIALIZE TIME STEP
!
!      DT=0.1*RADJ(NM)/QJ(NM)
      DTJP=RLEJ(1)/QJ(1)
!
! ++  INITIAL JET DENSITY AND MASS
!
      SEDJETT=0.
      DO NS=1,NSED
       SEDJETT=SEDJETT+SEDJET(NS)
      ENDDO
      DO NX=1,NSND
       SEDJETT=SEDJETT+SNDJET(NX)
      ENDDO
      RHOJ(1)=FUNDEN(SALJET,SEDJETT,TEMJET)
      RMAJP(1)=RPI*RHOJ(1)*RADJ(1)*RADJ(1)*RLEJ(1)
!JH   RMAJP(1)=RPI        *RADJ(1)*RADJ(1)*RLEJ(1)
!
! ++  INITIAL JET CONCENTRATIONS
!
      SALJ(1)=SALJET
      TEMJ(1)=TEMJET
      DYEJ(1)=DYEJET
      SFLJ(1)=SFLJET
      DO NT=1,NTOX
       TOXJ(1,NT)=TOXJET(NT)
      ENDDO
      DO NS=1,NSED
       SEDJ(1,NS)=SEDJET(NS)
      ENDDO
      DO NX=1,NSND
       SNDJ(1,NX)=SNDJET(NX)
      ENDDO
!
! ++  INITIAL JET TOXIC CONTAMINANT PARTICULATE FRACTIONS
!
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SEDJET(NS).GT.0.) TMPVAL=SEDJET(NX)**TMPEXP
         ENDIF
         TOXPFJP(1,NS,NT)=TMPVAL*SEDJET(NS)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SNDJET(NX).GT.0.) TMPVAL=SNDJET(NX)**TMPEXP
         ENDIF
         TOXPFJP(1,NS,NT)=TMPVAL*SNDJET(NX)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
      ENDDO
!
      DO NT=1,NTOX
       TOXPFTJP(1,NT)=0.
      ENDDO
!
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TOXPFTJP(1,NT)=TOXPFTJP(1,NT)+TOXPFJP(1,NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TOXPFTJP(1,NT)=TOXPFTJP(1,NT)+TOXPFJP(1,NS,NT)
        ENDDO
       ENDIF
      ENDDO
!
      DO NT=1,NTOX
       DO NS=1,NSED+NSND
        TOXPFJP(1,NS,NT)=TOXPFJP(1,NS,NT)/(1.+TOXPFTJP(1,NT))
       ENDDO
      ENDDO
!
      DO NT=1,NTOX
       TOXPFTJP(1,NT)=TOXPFTJP(1,NT)/(1.+TOXPFTJP(1,NT))
      ENDDO
!
! ++  INITIALIZE JET ELEMENT 2 VALUE TO ELEMENT 1 VALUES
!
      RHOJ(2)=FUNDEN(SALJET,SEDJETT,TEMJET)
      RMAJP(2)=RPI*RHOJ(2)*RADJ(2)*RADJ(2)*RLEJ(2)
!JH   RMAJP(2)=RPI        *RADJ(2)*RADJ(2)*RLEJ(2)
      SALJ(2)=SALJ(1)
      TEMJ(2)=TEMJ(1)
      DYEJ(2)=DYEJ(1)
      SFLJ(2)=SFLJ(1)
      DO NT=1,NTOX
       TOXJ(2,NT)=TOXJ(1,NT)
      ENDDO
      DO NS=1,NSED
       SEDJ(2,NS)=SEDJ(1,NS)
      ENDDO
      DO NX=1,NSND
       SNDJ(2,NX)=SNDJ(1,NX)
      ENDDO
      DO NT=1,NTOX
       DO NS=1,NSED+NSND
        TOXPFJP(2,NS,NT)=TOXPFJP(1,NS,NT)
       ENDDO
      ENDDO
      DO NT=1,NTOX
       TOXPFTJP(2,NT)=TOXPFTJP(1,NT)
      ENDDO
!
! ++  INITIALIZE AMBIENT CONDITIONS
!
      IF(ISAMB.EQ.0)THEN
        UAG=UAGD(1,1)
        VAG=VAGD(1,1)
        WAG=WAGD(1,1)
        SALA=SALAD(1,1)
        TEMA=TEMAD(1,1)
        DYEA=DYEAD(1,1)
        SFLA=SFLAD(1,1)
        DO NT=1,NTOX
         TOXA(NT)=TOXAD(1,NT,1)
        ENDDO
        DO NS=1,NSED
         SEDA(NS)=SEDAD(1,NS,1)
        ENDDO
        DO NX=1,NSND
         SNDA(NX)=SNDAD(1,NX,1)
        ENDDO
      ENDIF
!
      IF(ISAMB.GE.1)THEN
        ZVAL=ZJG(1)
        ITVAL=1
        CALL ACON(ITVAL)
      ENDIF
!
! ++  AMBIENT VELOCITY MAGNITUDES
!
      QA=SQRT(UAG*UAG+VAG*VAG+WAG*WAG)
      QAH=SQRT(UAG*UAG+VAG*VAG)
!
! ++  AMBIENT DENSITY
!
      SEDATT=0.
      DO NS=1,NSED
       SEDATT=SEDATT+SEDA(NS)
      ENDDO
      DO NX=1,NSND
       SEDATT=SEDATT+SNDA(NX)
      ENDDO
      RHOA=FUNDEN(SALA,SEDATT,TEMA)
!
! ++  GLOBAL AMBIENT AND JET ORIENTATIONS
!
      PHJ(1)=PHJET(NJP)
      THJG(1)=THJET(NJP)
!
      PHJ(2)=PHJET(NJP)
      THJG(2)=THJET(NJP)
!
!      THAG=ATAN2D(VAG,UAG)
      THAG=57.2958*ATAN2(VAG,UAG)
!
! ++  LOCAL JET HORIZONTAL ORIENTATION
!
      THJL(1)=THJG(1)-THAG
      THJL(2)=THJG(2)-THAG
!
! ++  PROJECTION OF AMBIENT CURRENT TO JET DIRECTION
!
!      RDQA(1)=COSD(PHJ(1))*COSD(THJL(1))*QAH
!      RDQA(2)=COSD(PHJ(2))*COSD(THJL(2))*QAH
      RDQA(1)=COS(0.0175*PHJ(1))*COS(0.0175*THJL(1))*QAH
      RDQA(2)=COS(0.0175*PHJ(2))*COS(0.0175*THJL(2))*QAH
!
! ++  INITIAL SHEAR ENTRAINMENT
!
!      SINPHJ=SIND(PHJ(1))
      SINPHJ=SIN(0.0175*PHJ(1))
      DVEL=ABS(QJ(1)-RDQA(1))
      DRHO=(RHOA-RHOJ(1))/RHOA
      FTOP=G*ABS(DRHO)*RADJ(1)
      FRD2I=0.
      EBOT=1.
      ETOP=0.057
      ENTS=0.
      IF(DVEL.GT.0.)THEN
        FRD2I=FTOP/(ALPH2*DVEL*DVEL)
        EBOT=1.+5.*RDQA(1)/DVEL
        ETOP=0.057+0.554*SINPHJ*FRD2I
        ENTS=1.414*ETOP/EBOT
      ENDIF
      DRMAJS(1)=2.*DTJP*RPI*RHOA*ENTS*DVEL*RADJ(1)*RLEJ(1)
      DRMAJS(2)=DRMAJS(1)
!
! ++  INITIAL FORCED ENTRAINMENT
!
      DRMAJF(1)=0.
      DRMAJF(2)=0.
!
! ++  INITIALIZE VOLUMETRIC ENTRAINEMNT
!
	QJTOT=QVJET
	QJTOTO=QVJET
!
!**********************************************************************C
!
! **  OUTPUT INITIAL CONDITIONS
!
      RLSCL=1.
      IF(ISOUT.EQ.1) RLSCL=DJET(NJP)
      IF(ISOUT.EQ.2) RLSCL=RJET*SQRT(RPI)
      SALJETI=1.
      TEMJETI=1.
      DYEJETI=1.
      SFLJETI=1.
      DO NT=1,NTOX
       TOXJETI(NT)=1.
      ENDDO
      DO NS=1,NSED
       SEDJETI(NS)=1.
      ENDDO
      DO NX=1,NSND
       SNDJETI(NX)=1.
      ENDDO
      IF(ISOUT.GE.1)THEN
        IF(SALJET.GT.0.) SALJETI=1./SALJET
        IF(TEMJET.GT.0.) TEMJETI=1./TEMJET
        IF(DYEJET.GT.0.) DYEJETI=1./DYEJET
        IF(SFLJET.GT.0.) SFLJETI=1./SFLJET
        DO NT=1,NTOX
         IF(TOXJET(NT).GT.0.) TOXJETI(NT)=1./TOXJET(NT)
        ENDDO
        DO NS=1,NSED
         IF(SEDJET(NS).GT.0.) SEDJETI(NS)=1./SEDJET(NS)
        ENDDO
        DO NX=1,NSND
         IF(SNDJET(NX).GT.0.) SNDJETI(NX)=1./SNDJET(NX)
        ENDDO
      ENDIF
!
      NE=1
      NJE=1
      DJETI=1./RLSCL
      XJGNE=DJETI*XJG(NE)
      YJGNE=DJETI*YJG(NE)
      ZJGNE=DJETI*ZJG(NE)
      SIGNE=DJETI*SIG(NE)
      RADJNE=DJETI*RADJ(NE)
!     RADJNE=2.*DJETI*RADJ(NE)
      RLEJNE=DJETI*RLEJ(NE)
      SALJNE=SALJETI*SALJ(NE)
      TEMJNE=TEMJETI*TEMJ(NE)
!JHFIX-REMOVE      DYEJNE=SALJETI*DYEJ(NE)
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJNE=DYEJETI*DYEJ(NE)
      SFLJNE=TEMJETI*SFLJ(NE)
      DO NT=1,NTOX
       TOXJNE(NT)=TOXJETI(NT)*TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJNE(NS)=SEDJETI(NS)*SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJNE(NX)=SNDJETI(NX)*SNDJ(NE,NX)
      ENDDO
!
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)THEN
      WRITE(1,101)NJP,NJE,TIME,XJGNE,YJGNE,ZJGNE,SIGNE,RADJNE,RLEJNE,QJTOT
      DRMAJ=RMAJP(NE)-RMAJP(NE-1)
      DRHO=(RHOA-RHOJ(NE))/RHOA
      WRITE(2,101)NJP,NJE,TIME,QJ(NE),UJG(NE),VJG(NE),WJG(NE),RDQA(NE),RMAJP(NE),DRMAJ,DRHO
      IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE
      ENDIF
      IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SEDJNE(NS),NS=1,NSED)
      ENDIF
      IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SNDJNE(NX),NX=1,NSND)
      ENDIF
      IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.1)THEN
CJHFIX-REMOVE       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED),
CJHFIX-REMOVE     &                         (SNDJNE(NX),NX=1,NSND)
CJHFIX-ADD THE FOLLOWING 2 LINE(S)
       WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SEDJNE(NS),NS=1,NSED),(SNDJNE(NX),NX=1,NSND)
      ENDIF
      IF(ISTRAN(5).GE.1)THEN
      IF(NTOX.LE.8)THEN
        WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,NTOX)
        WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,NTOX)
       ELSE
        WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,8)
        WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,8)
        WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=9,NTOX)
        WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=9,NTOX)
      ENDIF
      ENDIF
      ENDIF
!
      IF(IOUTJP(NJP).GE.2)THEN
      NJPS=1
      TIMJP(NJPS)=TIME
      XJGNS(NJPS)=XJGNE
      YJGNS(NJPS)=YJGNE
      ZJGNS(NJPS)=ZJGNE
      SIGNS(NJPS)=SIGNE
      RADJNS(NJPS)=RADJNE
      RLEJNS(NJPS)=RLEJNE
      QJNS(NJPS)=QJ(NE)
      UJGNS(NJPS)=UJG(NE)
      VJGNS(NJPS)=VJG(NE)
      WJGNS(NJPS)=WJG(NE)
      RDQANS(NJPS)=RDQA(NE)
      RMAJPNS(NJPS)=RMAJP(NE)
      DRMAJNS(NJPS)=DRMAJ
      DRHONS(NJPS)=DRHO
      SALJNS(NJPS)=SALJNE
      TEMJNS(NJPS)=TEMJNE
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJNS(NJPS)=DYEJNE
      DO NS=1,NSED
       SEDJNS(NS,NJPS)=SEDJNE(NS)
      ENDDO
      DO NX=1,NSND
       SNDJNS(NX,NJPS)=SNDJNE(NX)
      ENDDO
      DO NT=1,NTOX
       TOXJNS(NT,NJPS)=TOXJNE(NT)
       TOXPFTNS(NT,NJPS)=TOXPFTJP(NE,NT)
      ENDDO
      ENDIF
!
!**********************************************************************C
!
! **  START INTEGRATION
!
      DO NJE=2,NJEL(NJP)
!
! ++  ESTIMATE NEW CONDITIONS FOR ENTRAINMENT
!
      NE=2
      NM=1
      RADJ(NE)=RADJ(NM)
      PHJ(NE)=PHJ(NM)
      THJG(NE)=THJG(NM)
      THJL(NE)=THJL(NM)
!      SINPHJ=SIND(PHJ(NM))
!      COSPHJ=COSD(PHJ(NM))
!      COSPHJM=COSD(PHJ(NM))
!      SINTHJL=SIND(THJL(NM))
!      COSTHJL=COSD(THJL(NM))
!      COSTHJLM=COSD(THJL(NM))
      SINPHJ=SIN(0.0175*PHJ(NM))
      COSPHJ=COS(0.0175*PHJ(NM))
      COSPHJM=COS(0.0175*PHJ(NM))
      SINTHJL=SIN(0.0175*THJL(NM))
      COSTHJL=COS(0.0175*THJL(NM))
      COSTHJLM=COS(0.0175*THJL(NM))
      XJOLD=XJG(NM)
      YJOLD=YJG(NM)
      ZJOLD=ZJG(NM)
      RLOLD=RLEJ(NM)
      RROLD=RADJ(NM)
!      DT=0.1*RADJ(NM)/QJ(NM)
      DTJP=RLEJ(NM)/QJ(NM)
!
      NI=1
!
 1000 CONTINUE
!
! ++  CALCULATE SHEAR ENTRAINMENT
!
!X      DVEL=ABS(QJ(NM)-RDQA)
!X      DRHO=(RHOA-RHOJ(NM))/RHOA
!X      FBOT=G*ABS(DRHO)*RADJ(NE)
!X      FRD2=ALPH2*DVEL*DVEL/FBOT
!X      EBOT=1.+5.*RDQA/DVEL
!X      ETOP=0.057+0.554*SINPHJ/FRD2
!X      ENTS=1.414*ETOP/EBOT
!X      DRMAJS=2.*DT*RPI*RHOA*ENTS*DVEL*RADJ(NM)*RLEJ(NM)
!
      DRMAJSO=0.5*(DRMAJS(NE)+DRMAJS(NM))
      DVEL=ABS(QJ(NE)-RDQA(NE))
      DRHO=(RHOA-RHOJ(NE))/RHOA
      FTOP=G*ABS(DRHO)*RADJ(NE)
      FRD2I=0.
      EBOT=1.
      ETOP=0.057
      ENTS=0.
      IF(DVEL.GT.0.)THEN
        FRD2I=FTOP/(ALPH2*DVEL*DVEL)
        EBOT=1.+5.*RDQA(1)/DVEL
        ETOP=0.057+0.554*SINPHJ*FRD2I
        ENTS=1.414*ETOP/EBOT
      ENDIF
      DRMAJS(NE)=2.*DTJP*RPI*RHOA*ENTS*DVEL*RADJ(NE)*RLEJ(NE)
!JH   DRMAJS=2.*DTJP*RPI     *ENTS*DVEL*RADJ(NE)*RLEJ(NE)
      DRMAJSA=0.5*(DRMAJS(NE)+DRMAJS(NM))
!
! ++  CALCULATE FORCED ENTRAINMENT
!
      DRMAJFO=0.5*(DRMAJF(NE)+DRMAJF(NM))
!      ENTF1=2.*SQRT( SINPHJ*SINPHJ+SINTHJL*SINTHJL
!     &      -SINPHJ*SINPHJ*SINTHJL*SINTHJL )
      ENTF1=2.*SQRT( 1.-COSPHJ*COSPHJ*COSTHJL*COSTHJL )
      DELSIG=SIG(NE)-SIG(NM)
      ENTF2=0.
      ENTF3=0.
      IF(DELSIG.GT.0.)THEN
        ENTF2=RPI*COSPHJ*COSTHJL*(RADJ(NE)-RADJ(NM))/(DELSIG)
        ENTF3=0.5*RPI*RADJ(NE)*(COSPHJ*COSTHJL-COSPHJM*COSTHJLM)/(DELSIG)
      ENDIF
      ENTF=ENTF1+ENTF2+ENTF3
      ENTF=MAX(ENTF,0.)
      DRMAJF(NE)=DTJP*RHOA*RADJ(NE)*RLEJ(NE)*QAH*ENTF
      IF(NJE.EQ.2.AND.NI.EQ.1)DRMAJF(NE)=0.
      DRMAJFA=0.5*(DRMAJF(NE)+DRMAJF(NM))
!      IF(NI.EQ.1) DRMAJF=(NE)
!JH   DRMAJF=DTJP     *RADJ(NE)*RLEJ(NE)*QAH*ENTF
!
! ++  TAKE MAX OF SHEAR AND FORCED
!
      ISHEAR=0
      IFORCE=0
      DRMAJ=DRMAJSA+DRMAJFA
      IF(ISENT(NJP).EQ.0) DRMAJ=MAX(DRMAJSA,DRMAJFA)
      IF(DRMAJSA.GT.DRMAJFA) ISHEAR=1
      IF(DRMAJFA.GT.DRMAJSA) IFORCE=1
!
!      IVAL=MOD(NJE,NPRTE)
!      IF(IVAL.EQ.0)THEN
!DIAG        WRITE(10,110)NJE,NI,ENTS,DRMAJSA,ENTF,DRMAJFA,DRMAJ
!      ENDIF
  110 FORMAT(2I6,5E14.5)
!
! ++  ADVANCE MASS
!
      RMAJP(NE)=RMAJP(NM)+DRMAJ
      RMAJI=1./RMAJP(NE)
!
! ++  ADVANCE CONCENTRATION AND DENSITY
!
      SALJ(NE)=RMAJI*( RMAJP(NM)*SALJ(NM)+DRMAJ*SALA )
      TEMJ(NE)=RMAJI*( RMAJP(NM)*TEMJ(NM)+DRMAJ*TEMA )
!JHFIX-REMOVE      DYEJ(NE)=RMAJI*( RMAJP(NM)*DYEJ(NM)+DRMAJ*SALA )
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJ(NE)=RMAJI*( RMAJP(NM)*DYEJ(NM)+DRMAJ*DYEA )
      SFLJ(NE)=RMAJI*( RMAJP(NM)*SFLJ(NM)+DRMAJ*TEMA )
      IF(ISTRAN(5).GE.1)THEN
       DO NT=1,NTOX
        TOXJ(NE,NT)=RMAJI*( RMAJP(NM)*TOXJ(NM,NT)+DRMAJ*TOXA(NT) )
       ENDDO
      ENDIF
      IF(ISTRAN(6).GE.1)THEN
       DO NS=1,NSED
        SEDJ(NE,NS)=RMAJI*( RMAJP(NM)*SEDJ(NM,NS)+DRMAJ*SEDA(NS) )
       ENDDO
      ENDIF
      IF(ISTRAN(7).GE.1)THEN
       DO NX=1,NSND
        SNDJ(NE,NX)=RMAJI*( RMAJP(NM)*SNDJ(NM,NX)+DRMAJ*SNDA(NX) )
       ENDDO
      ENDIF
!
! ++ ADVANCE TOXIC PARTICULATE FRACTION
!
      IF(ISTRAN(5).GE.1)THEN
!
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SEDJ(NE,NS).GT.0.) TMPVAL=SEDJ(NE,NS)**TMPEXP
         ENDIF
         TOXPFJP(NE,NS,NT)=TMPVAL*SEDJ(NE,NS)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TMPEXP=CONPARW(NS,NT)
         IF(ITXPARW(NS,NT).EQ.0) TMPVAL=1.
         IF(ITXPARW(NS,NT).EQ.1)THEN
           IF(SNDJ(NE,NX).GT.0.) TMPVAL=SNDJ(NE,NX)**TMPEXP
         ENDIF
         TOXPFJP(NE,NS,NT)=TMPVAL*SNDJ(NE,NX)*TOXPARW(NS,NT)
        ENDDO
       ENDIF
      ENDDO
!
      DO NT=1,NTOX
       TOXPFTJP(NE,NT)=0.
      ENDDO
!
      DO NT=1,NTOX
       IF(ISTRAN(6).GE.1)THEN
        DO NS=1,NSED
         TOXPFTJP(NE,NT)=TOXPFTJP(NE,NT)+TOXPFJP(NE,NS,NT)
        ENDDO
       ENDIF
       IF(ISTRAN(7).GE.1)THEN
        DO NX=1,NSND
         NS=NX+NSED
         TOXPFTJP(NE,NT)=TOXPFTJP(NE,NT)+TOXPFJP(NE,NS,NT)
        ENDDO
       ENDIF
      ENDDO
!
      DO NT=1,NTOX
       DO NS=1,NSED+NSND
        TOXPFJP(NE,NS,NT)=TOXPFJP(NE,NS,NT)/(1.+TOXPFTJP(NE,NT))
       ENDDO
      ENDDO
!
      DO NT=1,NTOX
       TOXPFTJP(NE,NT)=TOXPFTJP(1,NT)/(1.+TOXPFTJP(NE,NT))
      ENDDO
!
      ENDIF
!
! ++ ADVANCE DENSITY
!
      SEDJETT=0.
      DO NS=1,NSED
       SEDJETT=SEDJETT+SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SEDJETT=SEDJETT+SNDJ(NE,NX)
      ENDDO
      RHOJ(NE)=FUNDEN(SALJ(NE),SEDJETT,TEMJ(NE))
      DRHO=(RHOA-RHOJ(NE))/RHOA
!
! ++  ADVANCE VELOCITY COMPONENTS
!
      UJG(NE)=RMAJI*( RMAJP(NM)*UJG(NM)+DRMAJ*UAG )
      VJG(NE)=RMAJI*( RMAJP(NM)*VJG(NM)+DRMAJ*VAG )
      WJG(NE)=RMAJI*( RMAJP(NM)*WJG(NM)+DRMAJ*WAG )+G*DRHO*DTJP
!
! ++  NEW JET COORDINATES
!
      DXTMP=DTJP*UJG(NE)
      DYTMP=DTJP*VJG(NE)
      DZTMP=DTJP*WJG(NE)
      XJG(NE)=XJG(NM)+DXTMP
      YJG(NE)=YJG(NM)+DYTMP
      ZJG(NE)=ZJG(NM)+DZTMP
      DS=SQRT( DXTMP*DXTMP+DYTMP*DYTMP+DZTMP*DZTMP )
      SIG(NE)=SIG(NM)+DS
!
! ++  RESET AMBIENT CONDITIONS
!
      SEDAA=0.0
      IF(ISAMB.EQ.0)THEN
        UAG=UAGD(1,1)
        VAG=VAGD(1,1)
        WAG=WAGD(1,1)
        SALA=SALAD(1,1)
        TEMA=TEMAD(1,1)
        DYEA=DYEAD(1,1)
        SFLA=SFLAD(1,1)
        DO NT=1,NTOX
         TOXA(NT)=TOXAD(1,NT,1)
        ENDDO
        DO NS=1,NSED
         SEDA(NS)=SEDAD(1,NS,1)
	   SEDAA=SEDAA+SEDA(NS)
        ENDDO
        DO NX=1,NSND
         SNDA(NX)=SNDAD(1,NX,1)
	   SEDAA=SEDAA+SNDA(NX)
        ENDDO
      ENDIF
!
      IF(ISAMB.GE.1)THEN
        ZVAL=ZJG(NE)
        ITVAL=1
        CALL ACON(ITVAL)
      ENDIF
!
! ++  AMBIENT VELOCITY MAGNITUDES
!
      QA=SQRT(UAG*UAG+VAG*VAG+WAG*WAG)
      QAH=SQRT(UAG*UAG+VAG*VAG)
!
! ++  AMBIENT DENSITY
!
      RHOA=FUNDEN(SALA,SEDAA,TEMA)
!
! ++  CALCULATE NEW GLOBAL JET VELOCITY PARAMETERS
!
      QJ(NE)=SQRT(UJG(NE)*UJG(NE)+VJG(NE)*VJG(NE)+WJG(NE)*WJG(NE))
      QJH(NE)=SQRT(UJG(NE)*UJG(NE)+VJG(NE)*VJG(NE))
!
! ++  CALCULATE GLOBAL JET DISCHARGE ORIENTATIONS
!
!      PHJ(NE)=ATAN2D(WJG(NE),QJH(NE))
!      THJG(NE)=ATAN2D(VJG(NE),UJG(NE))
!      THAG=ATAN2D(VAG,UAG)
      PHJ(NE)=57.2958*ATAN2(WJG(NE),QJH(NE))
      THJG(NE)=57.2958*ATAN2(VJG(NE),UJG(NE))
      THAG=57.2958*ATAN2(VAG,UAG)
      THJL(NE)=THJG(NE)-THAG
!
!      SINPHJ=SIND(PHJ(NE))
!      COSPHJ=COSD(PHJ(NE))
!      SINTHJL=SIND(THJL(NE))
!      COSTHJL=COSD(THJL(NE))
      SINPHJ=SIN(0.0175*PHJ(NE))
      COSPHJ=COS(0.0175*PHJ(NE))
      SINTHJL=SIN(0.0175*THJL(NE))
      COSTHJL=COS(0.0175*THJL(NE))
!
! ++  PROJECTION OF AMBIENT ON JET
!
!      RDQA(NE)=COSD(PHJ(NE))*COSD(THJL(NE))*QAH
      RDQA(NE)=COS(0.0175*PHJ(NE))*COS(0.0175*THJL(NE))*QAH
!
! ++  CALCULATE NEW RADIUS AND ELEMENT LENGTH
!
      RLEJ(NE)=QJ(NE)*RLEJ(NM)/QJ(NM)
      RADJ(NE)=SQRT( RMAJP(NE)/(RPI*RHOJ(NE)*RLEJ(NE)) )
!JH   RADJ(NE)=SQRT( RMAJP(NE)/(RPI         *RLEJ(NE)) )
!
! ++  CHECK FOR CONVERGENCE CHECK
!
!      XERR=ABS(XJOLD-XJG(NE))
!      YERR=ABS(YJOLD-YJG(NE))
!      ZERR=ABS(ZJOLD-ZJG(NE))
!      RLER=ABS(RLOLD-RLEJ(NE))
!      RRER=ABS(RROLD-RADJ(NE))
!      DRMAJSE=100.
!      DRMAJFE=100.
       DRMAJSE=ABS(DRMAJSA-DRMAJSO)
       DRMAJFE=ABS(DRMAJFA-DRMAJFO)
      IF(DRMAJSO.GT.0.) DRMAJSE=DRMAJSE/DRMAJSO
      IF(DRMAJFO.GT.0.) DRMAJFE=DRMAJFE/DRMAJFO
      ITMP=0
!      IF(IFORCE.EQ.1.AND.DRMAJFE.GT.DMRERM) ITMP=1
!      IF(ISHEAR.EQ.1.AND.DRMAJSE.GT.DMRERM) ITMP=1
      IF(DRMAJFE.GT.DMRERM) ITMP=1
      IF(DRMAJSE.GT.DMRERM) ITMP=1
!      IF(XERR.GT.XERRM) ITMP=1
!      IF(YERR.GT.YERRM) ITMP=1
!      IF(ZERR.GT.ZERRM) ITMP=1
!      IF(RLER.GT.RLERM) ITMP=1
!      IF(RRER.GT.RRERM) ITMP=1
!
!DIAG      WRITE(10,610)NE,NI,XERR,YERR,ZERR,RLER,RRER,DRMAJFE,DRMAJFE
  610 FORMAT('NE,NI,X,Y,Z,R,L,DF,DS =',2I6,7E13.4)
!
      IF(NJE.EQ.2)THEN
        WRITE(10,620)NJP,NJE,NI,ITMP,DRMAJSA,DRMAJSO,DRMAJFA,DRMAJFO
      ENDIF
!
      IF(ISDJP(NJP).EQ.1)THEN
      JTMPVAL=MOD(NJE,100)
      IF(JTMPVAL.EQ.0)THEN
        WRITE(10,620)NJP,NJE,NI,ITMP,DRMAJSA,DRMAJSO,DRMAJFA,DRMAJFO
      ENDIF
      ENDIF
!
! ++  STOP IF MAXIMUM ITERATIONS EXCEEDED
!
      IF(NI.GT.NIMAX)THEN
        KFLAG=1
        WRITE(10,620)NJP,NJE,NI,ITMP,DRMAJSA,DRMAJSO,DRMAJFA,DRMAJFO
        WRITE(6,601)NJE,NI
        WRITE(10,601)NJE,NI
!        WRITE(8,601)NJE,NI    !hnr 7/27/2009
!DIAG        WRITE(10,610)NE,NI,XERR,YERR,ZERR,RLER,RRER,DRMAJFE,DRMAJFE
        GOTO 2000
      ENDIF
!
! ++  STOP IF JET CENTERLINE PENETRATES SURFACE
!
      IF(ISTOP.EQ.1)THEN
        ZJGTOP=ZJG(NE)
        IF(ZJGTOP.GT.ZSUR)THEN
          WRITE(6,605)NJP,NJE,NI,ZJGTOP,ZSUR
          WRITE(10,605)NJP,NJE,NI,ZJGTOP,ZSUR
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,605)NJP,NJE,NI,ZJGTOP,ZSUR    !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
!
! ++  STOP IF JET CENTERLINE PENETRATES BOTTOM
!
      IF(ISTOP.EQ.1)THEN
        ZJGBOT=ZJG(NE)
        IF(ZJGBOT.LT.ZBOT)THEN
          WRITE(6,606)NJP,NJE,NI,ZJGBOT,ZBOT
          WRITE(10,606)NJP,NJE,NI,ZJGBOT,ZBOT
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,606)NJP,NJE,NI,ZJGBOT,ZBOT      !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
!
! ++  STOP IF JET BOUNDARY PENETRATES SURFACE
!
      IF(ISTOP.EQ.2)THEN
!        ZJGTOP=ZJG(NE)+RADJ(NE)*COSD(PHJ(NE))
        ZJGTOP=ZJG(NE)+RADJ(NE)*COS(0.0175*PHJ(NE))
        IF(ZJGTOP.GT.ZSUR)THEN
          WRITE(6,602)NJP,NJE,NI,ZJGTOP,ZSUR
          WRITE(10,602)NJP,NJE,NI,ZJGTOP,ZSUR
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,602)NJP,NJE,NI,ZJGTOP,ZSUR    !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
!
! ++  STOP IF JET BOUNDARY PENETRATES BOTTOM
!
      IF(ISTOP.EQ.2)THEN
!        ZJGBOT=ZJG(NE)-RADJ(NE)*COSD(PHJ(NE))
        ZJGBOT=ZJG(NE)-RADJ(NE)*COS(0.0175*PHJ(NE))
        IF(ZJGBOT.LT.ZBOT)THEN
          WRITE(6,603)NJP,NJE,NI,ZJGBOT,ZBOT
          WRITE(10,603)NJP,NJE,NI,ZJGBOT,ZBOT
	    WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!          WRITE(8,603)NJP,NJE,NI,ZJGBOT,ZBOT      !hnr 7/27/2009
          GOTO 2000
        ENDIF
      ENDIF
!
! ++  STOP IF NEUTRAL LEVEL IS REACHED
!
! ++  RISING PLUME
!
      IF(RHOJ(NE).GE.RHOJ(NM))THEN
      DRHOT=(RHOA-RHOJ(NE))/RHOA
      IF(DRHOT.LT.0.)THEN
        WRITE(6,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!        WRITE(8,604)NJP,NJE,NI,ZJG(NE)     !hnr 7/27/2009
        GOTO 2000
      ENDIF
      ENDIF
!
! ++  FALLING PLUME
!
      IF(RHOJ(NE).LT.RHOJ(NM))THEN
      DRHOT=(RHOA-RHOJ(NE))/RHOA
      IF(DRHOT.GT.0.)THEN
        WRITE(6,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,604)NJP,NJE,NI,ZJG(NE)
        WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
!        WRITE(8,604)NJP,NJE,NI,ZJG(NE)     !hnr 7/27/2009
        GOTO 2000
      ENDIF
      ENDIF
!
! ++  RETURN FOR ANOTHER ITERATION
!
      IF(ITMP.EQ.1.OR.NI.EQ.1)THEN
        XJOLD=XJG(NE)
        YJOLD=YJG(NE)
        ZJOLD=ZJG(NE)
        RLOLD=RLEJ(NE)
        RROLD=RADJ(NE)
        NI=NI+1
        GOTO 1000
      ENDIF
!
! ++  WRITE OUTPUT AND PROCEED TO NEXT JET ELEMENT
!
!      IVAL=MOD(NJE,NPRTE)
!      IF(IVAL.EQ.0)THEN
      IF(ZJG(NE).GE.ZJPRT)THEN
        NPRTE=1
        ZJPRT=ZJPRT+DZPRT
!DIAG       WRITE(10,600)NJE,NI
       ELSE
        NPRTE=0
!DIAG       WRITE(6,600)NJE,NI
      ENDIF
!
      DJETI=1./RLSCL
      XJGNE=DJETI*XJG(NE)
      YJGNE=DJETI*YJG(NE)
      ZJGNE=DJETI*ZJG(NE)
      SIGNE=DJETI*SIG(NE)
      RADJNE=DJETI*RADJ(NE)
!     RADJNE=2.*DJETI*RADJ(NE)
      RLEJNE=DJETI*RLEJ(NE)
      SALJNE=SALJETI*SALJ(NE)
      TEMJNE=TEMJETI*TEMJ(NE)
      DYEJNE=DYEJETI*DYEJ(NE)
      SFLJNE=SFLJETI*SFLJ(NE)
      DO NT=1,NTOX
       TOXJNE(NT)=TOXJETI(NT)*TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJNE(NS)=SEDJETI(NS)*SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJNE(NX)=SNDJETI(NX)*SNDJ(NE,NX)
      ENDDO
!
! **  CALCULATE ENTRAINMENT
!
      QJTOTO=QJTOT
	QJTOT=QJTOT*RMAJP(NE)/RMAJP(NM)
!
      DO K=1,KC
	 ZLOWER=Z(K-1)*HP(LJP)+BELV(LJP)
	 ZUPPER=ZLOWER+DZC(K)*HP(LJP)
	 IF(ZJG(NE).GE.ZLOWER.AND.ZJG(NE).LT.ZUPPER)THEN
	   QJPENT(K,NJP)=QJPENT(K,NJP)+(QJTOT-QJTOTO)
         IF(RMAJI.GT.0.0)THEN
	     UJPAVG(K,NJP)=UJG(NE)/RMAJI
	     VJPAVG(K,NJP)=VJG(NE)/RMAJI
	     WJPAVG(K,NJP)=WJG(NE)/RMAJI
	   ENDIF
	 ENDIF
	ENDDO
	QJPENTT(NJP)=0.0
	DO K=1,KC
	  QJPENTT(NJP)=QJPENTT(NJP)+QJPENT(K,NJP)
	ENDDO
!
      IF(NPRTE.EQ.1)THEN
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)THEN
        WRITE(1,101)NJP,NJE,TIME,XJGNE,YJGNE,ZJGNE,SIGNE,RADJNE,RLEJNE,QJTOT
        DRMAJ=RMAJP(NE)-RMAJP(NE-1)
        DRHO=(RHOA-RHOJ(NE))/RHOA
        WRITE(2,101)NJP,NJE,TIME,QJ(NE),UJG(NE),VJG(NE),WJG(NE),RDQA(NE),RMAJP(NE),DRMAJ,DRHO
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE
       ENDIF
       IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SEDJNE(NS),NS=1,NSED)
       ENDIF
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.1)THEN
!JHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SNDJNE(NX),NX=1,NSND)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SNDJNE(NX),NX=1,NSND)
       ENDIF
       IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.1)THEN
!JHFIX-REMOVE         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED),
!JHFIX-REMOVE     &                         (SNDJNE(NX),NX=1,NSND)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
         WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SEDJNE(NS),NS=1,NSED),(SNDJNE(NX),NX=1,NSND)
       ENDIF
       IF(ISTRAN(5).GE.1)THEN
         IF(NTOX.LE.8)THEN
           WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,NTOX)
           WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,NTOX)
          ELSE
           WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,8)
           WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,8)
           WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=9,NTOX)
           WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=9,NTOX)
         ENDIF
       ENDIF
      ENDIF
      ENDIF
!
      IF(NPRTE.EQ.1)THEN
      IF(IOUTJP(NJP).GE.2)THEN
        NJPS=NJPS+1
        TIMJP(NJPS)=TIME
        XJGNS(NJPS)=XJGNE
        YJGNS(NJPS)=YJGNE
        ZJGNS(NJPS)=ZJGNE
        SIGNS(NJPS)=SIGNE
        RADJNS(NJPS)=RADJNE
        RLEJNS(NJPS)=RLEJNE
        QJNS(NJPS)=QJ(NE)
        UJGNS(NJPS)=UJG(NE)
        VJGNS(NJPS)=VJG(NE)
        WJGNS(NJPS)=WJG(NE)
        RDQANS(NJPS)=RDQA(NE)
        RMAJPNS(NJPS)=RMAJP(NE)
        DRMAJNS(NJPS)=DRMAJ
        DRHONS(NJPS)=DRHO
        SALJNS(NJPS)=SALJNE
        TEMJNS(NJPS)=TEMJNE
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
        DYEJNS(NJPS)=DYEJNE
        DO NS=1,NSED
         SEDJNS(NS,NJPS)=SEDJNE(NS)
        ENDDO
        DO NX=1,NSND
         SNDJNS(NX,NJPS)=SNDJNE(NX)
        ENDDO
        DO NT=1,NTOX
         TOXJNS(NT,NJPS)=TOXJNE(NT)
         TOXPFTNS(NT,NJPS)=TOXPFTJP(NE,NT)
        ENDDO
      ENDIF
      ENDIF
!
      XJG(NM)=XJG(NE)
      YJG(NM)=YJG(NE)
      ZJG(NM)=ZJG(NE)
      SIG(NM)=SIG(NE)
      RADJ(NM)=RADJ(NE)
      RLEJ(NM)=RLEJ(NE)
      UJG(NM)=UJG(NE)
      VJG(NM)=VJG(NE)
      WJG(NM)=WJG(NE)
      QJ(NM)=QJ(NE)
      QJH(NM)=QJH(NE)
      RMAJP(NM)=RMAJP(NE)
      DRMAJS(NM)=DRMAJS(NE)
      DRMAJF(NM)=DRMAJF(NE)
      PHJ(NM)=PHJ(NE)
      THJG(NM)=THJG(NE)
      THJL(NM)=THJL(NE)
      RDQA(NM)=RDQA(NE)
      SALJ(NM)=SALJ(NE)
      TEMJ(NM)=TEMJ(NE)
      DYEJ(NM)=DYEJ(NE)
      SFLJ(NM)=SFLJ(NE)
      DO NT=1,NTOX
       TOXJ(NM,NT)=TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJ(NM,NS)=SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJ(NM,NX)=SNDJ(NE,NX)
      ENDDO
!
      ENDDO
!
!**********************************************************************C
!
! **  FINAL OUTPUT OF RESULTS
!
 2000 CONTINUE
!
      QJTOTO=QJTOT
	QJTOT=QJTOT*RMAJP(NE)/RMAJP(NM)
!
      DO K=1,KC
	 ZLOWER=Z(K-1)*HP(LJP)+BELV(LJP)
	 ZUPPER=ZLOWER+DZC(K)*HP(LJP)
	 IF(ZJG(NE).GE.ZLOWER.AND.ZJG(NE).LT.ZUPPER)THEN
	   QJPENT(K,NJP)=QJPENT(K,NJP)+(QJTOT-QJTOTO)
	 ENDIF
	ENDDO
	QJPENTT(NJP)=0.0
	DO K=1,KC
	QJPENTT(NJP)=QJPENTT(NJP)+QJPENT(K,NJP)
	ENDDO

!	WRITE(8,898)NJP,TIME,(QJPENT(K,NJP),K=1,KC),QJPENTT(NJP)    !hnr 7/27/2009
	WRITE(10,898)NJP,TIME,(QJPENT(K,NJP),K=1,KC),QJPENTT(NJP)
	WRITE(6,898)NJP,TIME,(QJPENT(K,NJP),K=1,KC),QJPENTT(NJP)
!
      DJETI=1./RLSCL
      XJGNE=DJETI*XJG(NE)
      YJGNE=DJETI*YJG(NE)
      ZJGNE=DJETI*ZJG(NE)
      SIGNE=DJETI*SIG(NE)
      RADJNE=DJETI*RADJ(NE)
!     RADJNE=2.*DJETI*RADJ(NE)
      RLEJNE=DJETI*RLEJ(NE)
      SALJNE=SALJETI*SALJ(NE)
      TEMJNE=TEMJETI*TEMJ(NE)
      DYEJNE=DYEJETI*DYEJ(NE)
      SFLJNE=SFLJETI*SFLJ(NE)
      DO NT=1,NTOX
       TOXJNE(NT)=TOXJETI(NT)*TOXJ(NE,NT)
      ENDDO
      DO NS=1,NSED
       SEDJNE(NS)=SEDJETI(NS)*SEDJ(NE,NS)
      ENDDO
      DO NX=1,NSND
       SNDJNE(NX)=SNDJETI(NX)*SNDJ(NE,NX)
      ENDDO
!
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)THEN
        WRITE(1,101)NJP,NJE,TIME,XJGNE,YJGNE,ZJGNE,SIGNE,RADJNE,RLEJNE,QJTOT
        DRMAJ=RMAJP(NE)-RMAJP(NE-1)
        DRHO=(RHOA-RHOJ(NE))/RHOA
        WRITE(2,101)NJP,NJE,TIME,QJ(NE),UJG(NE),VJG(NE),WJG(NE),RDQA(NE),RMAJP(NE),DRMAJ,DRHO
        IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE
        ENDIF
        IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SEDJNE(NS),NS=1,NSED)
        ENDIF
        IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.1)THEN
!JHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SNDJNE(NX),NX=1,NSND)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SNDJNE(NX),NX=1,NSND)
        ENDIF
        IF(ISTRAN(6).EQ.1.AND.ISTRAN(7).EQ.1)THEN
!JHFIX-REMOVE          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,(SEDJNE(NS),NS=1,NSED),
!JHFIX-REMOVE     &                         (SNDJNE(NX),NX=1,NSND)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
          WRITE(3,101)NJP,NJE,TIME,SALJNE,TEMJNE,DYEJNE,(SEDJNE(NS),NS=1,NSED),(SNDJNE(NX),NX=1,NSND)
        ENDIF
        IF(ISTRAN(5).GE.1)THEN
          IF(NTOX.LE.8)THEN
            WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,NTOX)
            WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,NTOX)
           ELSE
            WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=1,8)
            WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=1,8)
            WRITE(4,101)NJP,NJE,TIME,(TOXJNE(NT),NT=9,NTOX)
            WRITE(14,101)NJP,NJE,TIME,(TOXPFTJP(NE,NT),NT=9,NTOX)
          ENDIF
        ENDIF
      ENDIF
!
      IF(IOUTJP(NJP).GE.2)THEN
      NJPS=NJPS+1
      TIMJP(NJPS)=TIME
      XJGNS(NJPS)=XJGNE
      YJGNS(NJPS)=YJGNE
      ZJGNS(NJPS)=ZJGNE
      SIGNS(NJPS)=SIGNE
      RADJNS(NJPS)=RADJNE
      RLEJNS(NJPS)=RLEJNE
      QJNS(NJPS)=QJ(NE)
      UJGNS(NJPS)=UJG(NE)
      VJGNS(NJPS)=VJG(NE)
      WJGNS(NJPS)=WJG(NE)
      RDQANS(NJPS)=RDQA(NE)
      RMAJPNS(NJPS)=RMAJP(NE)
      DRMAJNS(NJPS)=DRMAJ
      DRHONS(NJPS)=DRHO
      SALJNS(NJPS)=SALJNE
      TEMJNS(NJPS)=TEMJNE
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
      DYEJNS(NJPS)=DYEJNE
      DO NS=1,NSED
       SEDJNS(NS,NJPS)=SEDJNE(NS)
      ENDDO
      DO NX=1,NSND
       SNDJNS(NX,NJPS)=SNDJNE(NX)
      ENDDO
      DO NT=1,NTOX
       TOXJNS(NT,NJPS)=TOXJNE(NT)
       TOXPFTNS(NT,NJPS)=TOXPFTJP(NE,NT)
      ENDDO
      ENDIF
!
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(1)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(2)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(3)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(4)
      IF(IOUTJP(NJP).EQ.1.OR.IOUTJP(NJP).EQ.3)  CLOSE(14)
!
!**********************************************************************C
!
! **  WRITE OUT SAVED RESULTS IN COMPACT ASCII FORMAT
!
      IF(IOUTJP(NJP).EQ.2.OR.IOUTJP(NJP).EQ.3)THEN
!
!      IF(N.EQ.NUDJP(NJP)) OPEN(1,FILE=FNNRFLD,STATUS='UNKNOWN')
!     IF(N.EQ.NUDJP(NJP)) CLOSE(1,STATUS='DELETE')
      IF(N.EQ.1) OPEN(1,FILE=FNNRFLD,STATUS='UNKNOWN')
      IF(N.EQ.1) CLOSE(1,STATUS='DELETE')
      OPEN(1,FILE=FNNRFLD,STATUS='UNKNOWN',POSITION='APPEND')
!
      WRITE(1,101)NJP,NJPS,TIME
      DO NSV=1,NJPS
!       WRITE(1,104)XJGNS(NSV),YJGNS(NSV),ZJGNS(NSV),
!     &            SIGNS(NSV),RADJNS(NSV),RLEJNS(NSV)
!       WRITE(1,104)QJNS(NSV),UJGNS(NSV),VJGNS(NSV),WJGNS(NSV),
!     &            RDQANS(NSV),RMAJPNS(NSV),DRMAJNS(NSV),DRHONS(NSV)
       WRITE(1,104)XJGNS(NSV),YJGNS(NSV),ZJGNS(NSV),SIGNS(NSV),RADJNS(NSV),UJGNS(NSV),VJGNS(NSV), &
                   WJGNS(NSV),QJTOT
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV)
!JHFIX-ADD THE FOLLOWING 1 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV)
       ENDIF
       IF(ISTRAN(6).GE.1.AND.ISTRAN(7).EQ.0)THEN
!JHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),(SEDJNS(NS,NSV),NS=1,NSED)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV),(SEDJNS(NS,NSV),NS=1,NSED)
       ENDIF
       IF(ISTRAN(6).EQ.0.AND.ISTRAN(7).GE.1)THEN
!JHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),(SNDJNS(NX,NSV),NX=1,NSND)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV),(SNDJNS(NX,NSV),NX=1,NSND)
       ENDIF
       IF(ISTRAN(6).GE.1.AND.ISTRAN(7).GE.1)THEN
!JHFIX-REMOVE        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),(SEDJNS(NS,NSV),NS=1,NSED),
!JHFIX-REMOVE     &            (SNDJNS(NX,NSV),NX=1,NSND)
!JHFIX-ADD THE FOLLOWING 2 LINE(S)
        WRITE(1,104)SALJNS(NSV),TEMJNS(NSV),DYEJNS(NSV),(SEDJNS(NS,NSV),NS=1,NSED),               &
                    (SNDJNS(NX,NSV),NX=1,NSND)
       ENDIF
       IF(ISTRAN(5).GE.1)THEN
         IF(NTOX.LE.8)THEN
           WRITE(1,104)(TOXJNS(NT,NSV),NT=1,NTOX)
          ELSE
           WRITE(1,104)(TOXJNS(NT,NSV),NT=1,8)
           WRITE(1,104)(TOXJNS(NT,NSV),NT=9,NTOX)
         ENDIF
         IF(NTOX.LE.8)THEN
           WRITE(1,104)(TOXPFTNS(NT,NSV),NT=1,NTOX)
          ELSE
           WRITE(1,104)(TOXPFTNS(NT,NSV),NT=1,8)
           WRITE(1,104)(TOXPFTNS(NT,NSV),NT=8,NTOX)
         ENDIF
       ENDIF
      ENDDO
!
      CLOSE(1)
!
      ENDIF
!
!**********************************************************************C
!
! **  WRITE OUT SAVED RESULTS IN BINARY FORMAT
!
!      IF(IOUTJP(NJP).EQ.2)THEN
      IF(IOUTJP(NJP).EQ.4)THEN
!
!      IF(N.EQ.NUDJP(NJP)) OPEN(1,FILE=FNNRFLD,FORM='UNFORMATTED')
!     IF(N.EQ.NUDJP(NJP)) CLOSE(1,STATUS='DELETE')
      IF(N.EQ.1) OPEN(1,FILE=FNNRFLB,FORM='UNFORMATTED')
      IF(N.EQ.1) CLOSE(1,STATUS='DELETE')
      OPEN(1,FILE=FNNRFLB,POSITION='APPEND',FORM='UNFORMATTED')
!
      WRITE(1)NJP,NJPS,TIME
      WRITE(1)XJGNS
      WRITE(1)YJGNS
      WRITE(1)ZJGNS
      WRITE(1)SIGNS
      WRITE(1)RADJNS
      WRITE(1)UJGNS
      WRITE(1)VJGNS
      WRITE(1)WJGNS
      IF(ISTRAN(1).GE.1)THEN
        WRITE(1)SALJNS
      ENDIF
      IF(ISTRAN(2).GE.1)THEN
        WRITE(1)TEMJNS
      ENDIF
!JHFIX-ADD THE FOLLOWING 3 LINE(S)
      IF(ISTRAN(3).GE.1)THEN
        WRITE(1)DYEJNS
      ENDIF
      IF(ISTRAN(6).GE.1)THEN
        WRITE(1)SEDJNS
      ENDIF
      IF(ISTRAN(7).GE.1)THEN
        WRITE(1)SNDJNS
      ENDIF
      IF(ISTRAN(5).GE.1)THEN
        WRITE(1)TOXJNS
      ENDIF
      IF(ISTRAN(5).GE.1)THEN
        WRITE(1)TOXPFTNS
      ENDIF
!
      CLOSE(1)
C
      ENDIF
!
!**********************************************************************C
!
! **  RELOCATE VOLUME SOURCE
!
      ZTMP=(ZJGNE-BELV(LJP))/HP(LJP)
      ZTMP=FLOAT(KC)*ZTMP
      KTMP=NINT(ZTMP)
      KTMP=MAX(1,KTMP)
      KTMP=MIN(KC,KTMP)
      IF(KFLAG.EQ.0) KEFFJP(NJP)=KTMP
      GOTO 9001
!
 9000 CONTINUE
      KEFFJP(NJP)=KQJP(NJP)
 9001 CONTINUE
!
!	WRITE(8,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)      !hnr 7/27/2009
	WRITE(10,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
	WRITE(6,899)NJP,TIME,(QJPENT(K,NJP),K=1,KC)
      WRITE(10,135)NJP,TIME,KFLAG,KEFFJP(NJP),KQJP(NJP),QVJET,QJTOT
!      WRITE(8,135)NJP,TIME,KFLAG,KEFFJP(NJP),KQJP(NJP),QVJET,QJTOT    !hnr 7/27/2009
      WRITE(6,135)NJP,TIME,KFLAG,KEFFJP(NJP),KQJP(NJP),QVJET,QJTOT
      CLOSE(10)
!
!      DO K=1,KC
!       QSERT(K,NQSERJP(NJP))=0.
!      ENDDO
!
!      QSERT(KTMP,NQSERJP(NJP))=QQCJP(NJP)
!
!
!**********************************************************************C
!
! **  CALCULATION MOMENT INTERFACE QUANTITIES
!
      RDUM=0.
      WRITE(11,1110)NJP,N
      KZERO=0
	QUJ0=UJ0*QVJET0
	QVJ0=VJ0*QVJET0
	QWJ0=WJ0*QVJET0
      WRITE(11,1111)KZERO,QUJ0,QVJ0,QWJ0,QVJET0,RDUM,RDUM,RDUM,RDUM
	QENTTMP=QVJET0
      DO K=1,KEFFJP(NJP)
	  QENTTMP=QENTTMP+QJPENT(K,NJP)
	  QUAG=UAG*QJPENT(K,NJP)
	  QVAG=VAG*QJPENT(K,NJP)
	  QWAG=WAG*QJPENT(K,NJP)
	  WRITE(11,1111)K,UJPAVG(K,NJP),VJPAVG(K,NJP),WJPAVG(K,NJP),QENTTMP,QUAG,QVAG,QWAG,QJPENT(K,NJP)
	ENDDO
!
!**********************************************************************C
!
! **  END LOOP OVER ALL JET/PLUME LOCATIONS
!
       ENDIF
      ENDDO
!
      CLOSE(11)
!
!**********************************************************************C

 1110 FORMAT(/,'NJP,N = ',I5,I10,/)
 1111 FORMAT(I5,10E14.5)
  899 FORMAT(' JPENT ',I5,F12.6,12E12.4)
  898 FORMAT(' FINAL JPENT ',I5,F12.6,12E12.4)
  100 FORMAT(120X)
!JHFIX-REMOVE  101 FORMAT(2I6,9E12.4)
!JHFIX-REMOVE  102 FORMAT(2I6,9E12.4)
!JHFIX-REMOVE  104 FORMAT(9E12.4)
!JHFIX-ADD THE FOLLOWING 3 LINE(S)
  101 FORMAT(2I6,10E12.4)
  102 FORMAT(2I6,10E12.4)
  104 FORMAT(10E12.4)
  111 FORMAT('    NJ    NE     TIME         XJ          YJ     ',                                &
             '     ZJ         SIG         RAD     ','    LEN')
  112 FORMAT('    NJ    NE     TIME         QJ          UJ     ',                                 &
             '     VJ          WJ         RDQ     ','    RMA         DRM         DRHO')
  113 FORMAT('    NJ    NE     TIME        SAL         TEM     ',' SED(1,NSD)  SND(1,NSN)')
  114 FORMAT('    NJ    NE     TIME     TOX(1,NTX)')
  124 FORMAT('    NJ    NE     TIME    TOXPF(1,NTX)')
  134 FORMAT(' BEGIN JET/PLUME NJP,TIME = ',I6,F12.5)
  135 FORMAT(' END JET/PLUME NJP,TIME,KFLAG,KEFFJP,KQJP,QVJET,QVJTOT',' = ',I6,F13.5,3I4,2E12.4)
  600 FORMAT(' ELEMENT, # INTERATIONS = ',2I6)
  601 FORMAT(' MAXIMUM ITERATIONS EXCEEDED NE,NI = ',2I6)
  602 FORMAT(' JET/PLUME BNDRY PEN SURF NJ,NE,NI,Z,ZS = ',3I6,2F10.2)
  603 FORMAT(' JET/PLUME BNDRY PEN BOTT NJ,NE,NI,Z,ZB = ',3I6,2F10.2)
  604 FORMAT(' JET/PLUME AT NEUTRAL LEVEL NJ,NE,NI,Z  = ',3I6,2F10.2)
  605 FORMAT(' JET/PLUME CTRLN PEN SURF NJ,NE,NI,Z,ZS = ',3I6,2F10.2)
  606 FORMAT(' JET/PLUME CTRLN PEN BOTT NJ,NE,NI,Z,ZB = ',3I6,2F10.2)
  888 FORMAT(A80,/)
  620 FORMAT('NJ,NE,NI,IT,DS,DSO,DF,DFO = ',4I6,6E13.4)
!
!**********************************************************************C
!
      RETURN
      END