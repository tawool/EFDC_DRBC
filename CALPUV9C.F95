!
!**********************************************************************C
!**********************************************************************C
!**********************************************************************C
!
      SUBROUTINE CALPUV9C (ISTL)
!
! **  THIS SUBROUTINE IS PART OF  EFDC-FULL VERSION 1.0a
!
! **  LAST MODIFIED BY JOHN HAMRICK ON 1 NOVEMBER 2001
!
!----------------------------------------------------------------------C
!
! CHANGE RECORD
! DATE MODIFIED     BY                 DATE APPROVED    BY
!
!----------------------------------------------------------------------C
!
!**********************************************************************C
!
! ** SUBROUTINE CALPUV9 CALCULATES THE EXTERNAL SOLUTION FOR P, UHDYE,
! ** AND VHDXE, FOR FREE SURFACE FLOWS WITH PROVISIONS FOR WETTING
! ** AND DRYING OF CELLS
!
!**********************************************************************C
!
      INCLUDE 'EFDC.PAR'
      INCLUDE 'EFDC.CMN'
      INCLUDE 'ALLSET.INT'
      DIMENSION QCHANUT(NCHANM),QCHANVT(NCHANM)
      DIMENSION QSUMTMP(LCM)
!      DIMENSION XSMLC(LCM-2),XLSMLC(LCM-2),XUSMLC(LCM-2)
!      DIMENSION WSMLC(LCM*LCM)
!      DIMENSION IWSMLC(2*LCM)
!      DIMENSION ASMLC(1,LCM)
!      DIMENSION BSMLC(1)
!
!**********************************************************************C
!
!      WRITE(6,6000)N
! 6000 FORMAT(' CALLED CALPUV9, N = ',I10)
!
      IF(N.EQ.1.AND.ISDSOLV.EQ.1)THEN
        OPEN(1,FILE='FUV1.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQCOEF1.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQTERM1.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='FP1.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
      ENDIF
!
      IF(N.EQ.2.AND.ISDSOLV.EQ.1)THEN
        OPEN(1,FILE='FUV2.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQCOEF2.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQTERM2.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='FP2.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
      ENDIF
!
      IF(ISDSOLV.EQ.1)THEN
        OPEN(1,FILE='FUV.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQCOEF.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQTERM.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='FP.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
      ENDIF
!
!**********************************************************************C
!
       DELT=DT2
       DELTD2=DT
      IF(ISTL.EQ.2)THEN
       DELT=DT
       DELTD2=0.5*DT
      ENDIF
      DELTI=1./DELT
!
!**********************************************************************C
!
! **  SET SWITCHES FOR DRYING AND WETTING
!
!----------------------------------------------------------------------C
!
      ITERHP=0
      NCORDRY=0
      ICORDRY=0
      DO L=1,LC
      ISCDRY(L)=0
      ENDDO
!
!**********************************************************************C
!
! **  INITIALIZE SUBGRID SCALE CHANNEL INTERACTIONS
!
!----------------------------------------------------------------------C
!
      IF(MDCHH.GE.1)THEN
        DO NMD=1,MDCHH
          QCHANUT(NMD)=QCHANUN(NMD)
          QCHANVT(NMD)=QCHANVN(NMD)
        ENDDO
        IF(ISTL.EQ.3)THEN
        DO NMD=1,MDCHH
          QCHANUN(NMD)=QCHANU(NMD)
          QCHANVN(NMD)=QCHANV(NMD)
        ENDDO
        ENDIF
      ENDIF
!
!**********************************************************************C
!
! **  CALCULATE EXTERNAL BUOYANCY INTEGRALS AT TIME LEVEL (N)
!
      IF(BSC.GT.1.E-6) CALL CALEBI
!
!**********************************************************************C
!
! **  CALCULATE EXPLICIT EXTERNAL PRESSURE GRADIENTS
! **  SBX=SBX*0.5*DYU & SBY=SBY*0.5*DXV
! **  SNLPX=SNLPX*GID2*DYU & SNLPY=SNLPY*GID2*DXV
!
!----------------------------------------------------------------------C
!
      IF(BSC.GT.1.E-6)THEN
      DO L=2,LA
      LS=LSC(L)
      FPGXE(L)=ROLD*FPGXE(L)+RNEW*(-SBX(L)*HU(L)*((BI2(L)+BI2(L-1))*(HP(L)-HP(L-1))+2.*HU(L)      &
               *(BI1(L)-BI1(L-1))+(BE(L)+BE(L-1))*(BELV(L)-BELV(L-1))) )
      FPGYE(L)=ROLD*FPGYE(L)+RNEW*(-SBY(L)*HV(L)*((BI2(L)+BI2(LS))*(HP(L)-HP(LS))+2.*HV(L)*(BI1(L)&
               -BI1(LS))+(BE(L)+BE(LS))*(BELV(L)-BELV(LS))) )
      ENDDO
      ENDIF
!
!**********************************************************************C
!
! **  CALCULATE EXPLICIT EXTERNAL UHDYE AND VHDXE EQUATION TERMS
! **  HRU=SUB*HMU*DYU/DXU & HRV=SVB*HMV*DXV/DYV
!
!----------------------------------------------------------------------C
!
      IF(ISTL.EQ.2)THEN
        DO L=2,LA
        HUTMP(L)=0.5*(HU(L)+H1U(L))
        HVTMP(L)=0.5*(HV(L)+H1V(L))
        ENDDO
       ELSE
        DO L=2,LA
        HUTMP(L)=HU(L)
        HVTMP(L)=HV(L)
        ENDDO
      ENDIF
!
      DO L=2,LA
      LS=LSC(L)
      LN=LNC(L)
      FUHDYE(L)=UHDY1E(L)-DELTD2*SUB(L)*HRUO(L)*HUTMP(L)*(P1(L)-P1(L-1))+SUB(L)*DELT*DXIU(L)      &
                *(DXYU(L)*(TSX1(L)-RITB1*TBX1(L))+FCAXE(L)+FPGXE(L)-SNLT*FXE(L))
      FVHDXE(L)=VHDX1E(L)-DELTD2*SVB(L)*HRVO(L)*HVTMP(L)*(P1(L)-P1(LS ))+SVB(L)*DELT*DYIV(L)      &
                *(DXYV(L)*(TSY1(L)-RITB1*TBY1(L))-FCAYE(L)+FPGYE(L)-SNLT*FYE(L))
      ENDDO
!
!
      IF(ISDSOLV.GE.1)THEN
        OPEN(1,FILE='FUV.OUT',POSITION='APPEND',STATUS='UNKNOWN')
        WRITE(1,1001)N,ISTL
        DO L=2,LA
        WRITE(1,1001)IL(L),JL(L),UHDY1E(L),HRUO(L),HUTMP(L),P1(L),P1(L-1),TSX1(L),TBX1(L),FCAXE(L),&
                     FPGXE(L),FXE(L)
        ENDDO
        CLOSE(1)
        IF(N.EQ.1)THEN
          OPEN(1,FILE='FUV1.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
        WRITE(1,1001)IL(L),JL(L),UHDY1E(L),HRUO(L),HUTMP(L),P1(L),P1(L-1),TSX1(L),TBX1(L),FCAXE(L),&
                     FPGXE(L),FXE(L)
          ENDDO
          CLOSE(1)
        ENDIF
        IF(N.EQ.2)THEN
          OPEN(1,FILE='FUV2.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
        WRITE(1,1001)IL(L),JL(L),UHDY1E(L),HRUO(L),HUTMP(L),P1(L),P1(L-1),TSX1(L),TBX1(L),FCAXE(L),&
                     FPGXE(L),FXE(L)
          ENDDO
          CLOSE(1)
        ENDIF
      ENDIF
!
!
!**********************************************************************C
!
! **  SET IMPLICIT BOTTOM AND VEGETATION DRAG AS APPROPRIATE
!
!----------------------------------------------------------------------C
!
      DO L=2,LA
      RCX(L)=1./(1.+FBODYFXI(L))
      RCY(L)=1./(1.+FBODYFYI(L))
      ENDDO
!
      RCX(1)=0.
      RCY(1)=0.
      RCX(LC)=0.
      RCY(LC)=0.
!
! * SINGLE LAYER NO VEGETATION
!
      IF(KC.EQ.1.AND.ISVEG.EQ.0)THEN
        DO L=2,LA
        RCX(L)=1./( 1.+FBODYFXI(L)+RITB*DELT*HUI(L)*STBX(L)*SQRT(VU(L)*VU(L)+U(L,1)*U(L,1)) )
        RCY(L)=1./( 1.+FBODYFYI(L)+RITB*DELT*HVI(L)*STBY(L)*SQRT(UV(L)*UV(L)+V(L,1)*V(L,1)) )
        FUHDYE(L)=FUHDYE(L)*RCX(L)
        FVHDXE(L)=FVHDXE(L)*RCY(L)
        ENDDO
      ENDIF
!
! * SINGLE LAYER WITH VEGETATION
!
      IF(KC.EQ.1.AND.ISVEG.GE.1)THEN
        DO L=2,LA
        RCX(L)=1./(1.+FBODYFXI(L)+RITB*DELT*HUI(L)*STBX(L)*SQRT(VU(L)*VU(L)+U(L,1)*U(L,1))+DELT*  &
               FXVEGE(L) )
!     &    +RITB*DELT*FXVEGE(L) )
        RCY(L)=1./(1.+FBODYFYI(L)+RITB*DELT*HVI(L)*STBY(L)*SQRT(UV(L)*UV(L)+V(L,1)*V(L,1))+DELT   &
               *FYVEGE(L) )
!     &    +RITB*DELT*FYVEGE(L) )
        FUHDYE(L)=FUHDYE(L)*RCX(L)
        FVHDXE(L)=FVHDXE(L)*RCY(L)
        ENDDO
      ENDIF
!
!
! * MULTIPLE LAYERS NO VEGETATION
!
      IF(KC.GT.1.AND.ISVEG.EQ.0)THEN
        DO L=2,LA
	  TMPX=1.0
	  TMPY=1.0
	  IF(UHE(L).NE.0.0) TMPX=U(L,1)*HU(L)/UHE(L)
	  IF(VHE(L).NE.0.0) TMPY=V(L,1)*HV(L)/VHE(L)
        RCX(L)=1./( 1.+FBODYFXI(L)+TMPX*RITB*DELT*HUI(L)*STBX(L)*SQRT(VU(L)*VU(L)+U(L,1)*U(L,1)) )
        RCY(L)=1./( 1.+FBODYFYI(L)+TMPY*RITB*DELT*HVI(L)*STBY(L)*SQRT(UV(L)*UV(L)+V(L,1)*V(L,1)) )
        FUHDYE(L)=FUHDYE(L)*RCX(L)
        FVHDXE(L)=FVHDXE(L)*RCY(L)
        ENDDO
      ENDIF
!
! * MULTIPLE LAYERS WITH VEGETATION
!
      IF(KC.GT.1.AND.ISVEG.GE.1)THEN
        DO L=2,LA
	  TMPX=1.0
	  TMPY=1.0
	  IF(UHE(L).NE.0.0) TMPX=U(L,1)*HU(L)/UHE(L)
	  IF(VHE(L).NE.0.0) TMPY=V(L,1)*HV(L)/VHE(L)
        RCX(L)=1./( 1.+FBODYFXI(L)+TMPX*RITB*DELT*HUI(L)*STBX(L)*SQRT(VU(L)*VU(L)+U(L,1)*U(L,1))  &
               +DELT*FXVEGE(L) )
        RCY(L)=1./( 1.+FBODYFYI(L)+TMPY*RITB*DELT*HVI(L)*STBY(L)*SQRT(UV(L)*UV(L)+V(L,1)*V(L,1))  &
               +DELT*FYVEGE(L) )
        FUHDYE(L)=FUHDYE(L)*RCX(L)
        FVHDXE(L)=FVHDXE(L)*RCY(L)
        ENDDO
      ENDIF
!
! * MULTIPLE LAYERS WITH VEGETATION  ORIGINAL
!
!ORG      IF(KC.GT.1.AND.ISVEG.GE.1)THEN
!ORG        DO L=2,LA
!        RCX(L)=1./( 1.+RITB*DELT*FXVEGE(L) )
!        RCY(L)=1./( 1.+RITB*DELT*FYVEGE(L) )
!ORG        RCX(L)=1./( 1.+DELT*FXVEGE(L) )
!ORG        RCY(L)=1./( 1.+DELT*FYVEGE(L) )
!ORG        FUHDYE(L)=FUHDYE(L)*RCX(L)
!ORG        FVHDXE(L)=FVHDXE(L)*RCY(L)
!ORG        ENDDO
!ORG      ENDIF
!
!**********************************************************************C
!
! **  RESET BOUNDARY CONDITIONS SWITCHES
!
!----------------------------------------------------------------------C
!
      DO L=2,LA
      LN=LNC(L)
        SUB(L)=SUBO(L)
        SVB(L)=SVBO(L)
        SBX(L)=SBXO(L)
        SBY(L)=SBYO(L)
        SUB(L+1)=SUBO(L+1)
        SVB(LN)=SVBO(LN)
        SBX(L+1)=SBXO(L+1)
        SBY(LN)=SBYO(LN)
      ENDDO
!
      DO L=1,LC
      FP(L)=0.
      FP1(L)=0.
      ENDDO
!
!**********************************************************************C
!
! **  BLOCK DRY CELLS WITH NO POTENTIAL FOR WETTING
!
!----------------------------------------------------------------------C
!
!      DO L=2,LA
!       LN=LNC(L)
!       LS=LSC(L)
!       IF(H1P(L).LT.HWET)THEN
!         IF(SUBO(L).GT.0.5)THEN
!           IF(P(L-1).LT.P(L).OR.HP(L-1).LT.HDRY) SUB(L)=0.0
!           IF(P(L-1).LT.P(L)) SUB(L)=0.0
!         ENDIF
!         IF(SUBO(L+1).GT.0.5)THEN
!           IF(P(L+1).LT.P(L).OR.HP(L+1).LT.HDRY) SUB(L+1)=0.0
!           IF(P(L+1).LT.P(L)) SUB(L+1)=0.0
!         ENDIF
!         IF(SVBO(L).GT.0.5)THEN
!           IF(P(LS).LT.P(L).OR.HP(LS).LT.HDRY) SVB(L)=0.0
!           IF(P(LS).LT.P(L)) SVB(L)=0.0
!         ENDIF
!         IF(SVBO(LN).GT.0.5)THEN
!           IF(P(LN).LT.P(L).OR.HP(LN).LT.HDRY) SVB(LN)=0.0
!           IF(P(LN).LT.P(L)) SVB(LN)=0.0
!         ENDIF
!       ENDIF
!      ENDDO
!
!**********************************************************************C
!
! **  SET OPEN BOUNDARY SURFACE ELEVATIONS
!
!----------------------------------------------------------------------C
!
      IF(ISDYNSTP.EQ.0)THEN
        TN=DT*FLOAT(N)+TCON*TBEGIN
      ELSE
        TN=TIMESEC
      ENDIF
!
      DO M=1,MTIDE
      TM=MOD(TN,TCP(M))
      TM=PI2*TM/TCP(M)
      CCCOS(M)=COS(TM)
      SSSIN(M)=SIN(TM)
      ENDDO
!
!----------------------------------------------------------------------C
!
      DO LL=1,NPBW
      L=LPBW(LL)
       CC(L)=DELTI*DXYP(L)
       CS(L)=0.
       CW(L)=0.
       CE(L)=0.
       CN(L)=0.
      FP1(L)=PSERT(NPSERW(LL))
      DO M=1,MTIDE
      TC=CCCOS(M)
      TS=SSSIN(M)
      FP1(L)=FP1(L)+PCBW(LL,M)*TC+PSBW(LL,M)*TS
      ENDDO
      CET=0.5*DELTD2*G*HRUO(L+1)*RCX(L+1)*HUTMP(L+1)
      IF(ISPBW(LL).GE.1)THEN
       TMP=DELTD2*SQRT(G*HMU(L+1))*DXIU(L+1)
       CC(L)=CET*(1.+TMP)/TMP
       CE(L)=-CET
       FP1(L)=CET*(2.*FP1(L)-SQRT(G*HMU(L+1))*FUHDYE(L+1)*DYIU(L+1)*HUI(L+1))/TMP
      ELSE
       FP1(L+1)=CET*FP1(L)
       FP1(L)=CC(L)*FP1(L)
      ENDIF
      ENDDO
!
!----------------------------------------------------------------------C
!
      DO LL=1,NPBE
      L=LPBE(LL)
       CC(L)=DELTI*DXYP(L)
       CS(L)=0.
       CW(L)=0.
       CE(L)=0.
       CN(L)=0.
      FP1(L)=PSERT(NPSERE(LL))
      DO M=1,MTIDE
      TC=CCCOS(M)
      TS=SSSIN(M)
      FP1(L)=FP1(L)+PCBE(LL,M)*TC+PSBE(LL,M)*TS
      ENDDO
      CWT=0.5*DELTD2*G*HRUO(L  )*RCX(L)*HUTMP(L  )
      IF(ISPBE(LL).GE.1)THEN
       TMP=DELTD2*SQRT(G*HMU(L))*DXIU(L)
       CC(L)=CWT*(1.+TMP)/TMP
       CW(L)=-CWT
       FP1(L)=CWT*(2.*FP1(L)+SQRT(G*HMU(L))*FUHDYE(L)*DYIU(L)*HUI(L))/TMP
      ELSE
       FP1(L-1)=CWT*FP1(L)
       FP1(L)=CC(L)*FP1(L)
      ENDIF
      ENDDO
!
!----------------------------------------------------------------------C
!
      DO LL=1,NPBS
      L=LPBS(LL)
       CC(L)=DELTI*DXYP(L)
       CS(L)=0.
       CW(L)=0.
       CE(L)=0.
       CN(L)=0.
      LN=LNC(L)
      FP1(L)=PSERT(NPSERS(LL))
      DO M=1,MTIDE
      TC=CCCOS(M)
      TS=SSSIN(M)
      FP1(L)=FP1(L)+PCBS(LL,M)*TC+PSBS(LL,M)*TS
      ENDDO
      CNT=0.5*DELTD2*G*HRVO(LN )*RCY(LN)*HVTMP(LN )
      IF(ISPBS(LL).GE.1)THEN
       TMP=DELTD2*SQRT(G*HMV(LN))*DYIV(LN)
       CC(L)=CNT*(1.+TMP)/TMP
       CN(L)=-CNT
       FP1(L)=CNT*(2.*FP1(L)-SQRT(G*HMV(LN))*FVHDXE(LN)*DXIV(LN)*HVI(LN))/TMP
      ELSE
       FP1(LN)=CNT*FP1(L)
       FP1(L)=CC(L)*FP1(L)
      ENDIF
      ENDDO
!
!----------------------------------------------------------------------C
!
      DO LL=1,NPBN
      L=LPBN(LL)
       CC(L)=DELTI*DXYP(L)
       CS(L)=0.
       CW(L)=0.
       CE(L)=0.
       CN(L)=0.
      LS=LSC(L)
      FP1(L)=PSERT(NPSERN(LL))
      DO M=1,MTIDE
      TC=CCCOS(M)
      TS=SSSIN(M)
      FP1(L)=FP1(L)+PCBN(LL,M)*TC+PSBN(LL,M)*TS
      ENDDO
      CST=0.5*DELTD2*G*HRVO(L  )*RCY(L)*HVTMP(L  )
      IF(ISPBN(LL).GE.1)THEN
       TMP=DELTD2*SQRT(G*HMV(L))*DYIV(L)
       CC(L)=CST*(1.+TMP)/TMP
       CS(L)=-CST
       FP1(L)=CST*(2.*FP1(L)+SQRT(G*HMV(L))*FVHDXE(L)*DXIV(L)*HVI(L))/TMP
      ELSE
       FP1(LS)=CST*FP1(L)
       FP1(L)=CC(L)*FP1(L)
      ENDIF
      ENDDO
!
!----------------------------------------------------------------------C
!
!      DO LL=1,NPBW
!      L=LPBW(LL)
!       CC(L)=DELTI*DXYP(L)
!       CS(L)=0.
!       CW(L)=0.
!       CE(L)=0.
!       CN(L)=0.
!      FP1(L)=PSERT(NPSERW(LL))
!      DO M=1,MTIDE
!      TC=CCCOS(M)
!      TS=SSSIN(M)
!      FP1(L)=FP1(L)+PCBW(LL,M)*TC+PSBW(LL,M)*TS
!      ENDDO
!      CET=-0.5*DELTD2*G*HRUO(L+1)*HUTMP(L+1)
!      IF(ISPBW(LL).GE.1)THEN
!       TMP=DELT*SQRT(G*HMU(L+1))*DXIU(L+1)
!       CC(L)=CET*(1.+TMP)/(1.-TMP)
!       CE(L)=CET
!       FP1(L)=CET*(4.*FP1(L)
!     & -2.*SQRT(G*HMU(L+1))*FUHDYE(L+1)*DYIU(L+1)*HUI(L+1))/(1.-TMP)
!      ELSE
!       FP1(L+1)=-CET*FP1(L)
!       FP1(L)=CC(L)*FP1(L)
!      ENDIF
!      ENDDO
!
!----------------------------------------------------------------------C
!
!      DO LL=1,NPBE
!      L=LPBE(LL)
!       CC(L)=DELTI*DXYP(L)
!       CS(L)=0.
!       CW(L)=0.
!       CE(L)=0.
!       CN(L)=0.
!      FP1(L)=PSERT(NPSERE(LL))
!      DO M=1,MTIDE
!      TC=CCCOS(M)
!      TS=SSSIN(M)
!      FP1(L)=FP1(L)+PCBE(LL,M)*TC+PSBE(LL,M)*TS
!      ENDDO
!      CWT=-0.5*DELTD2*G*HRUO(L  )*HUTMP(L  )
!      IF(ISPBE(LL).GE.1)THEN
!       TMP=DELT*SQRT(G*HMU(L))*DXIU(L)
!       CC(L)=CWT*(1.+TMP)/(1.-TMP)
!       CW(L)=CWT
!       FP1(L)=CWT*(4.*FP1(L)
!     & +2.*SQRT(G*HMU(L))*FUHDYE(L)*DYIU(L)*HUI(L))/(1.-TMP)
!      ELSE
!       FP1(L-1)=-CWT*FP1(L)
!       FP1(L)=CC(L)*FP1(L)
!      ENDIF
!      ENDDO
!
!----------------------------------------------------------------------C
!
!      DO LL=1,NPBS
!      L=LPBS(LL)
!       CC(L)=DELTI*DXYP(L)
!       CS(L)=0.
!       CW(L)=0.
!       CE(L)=0.
!       CN(L)=0.
!      LN=LNC(L)
!      FP1(L)=PSERT(NPSERS(LL))
!      DO M=1,MTIDE
!      TC=CCCOS(M)
!      TS=SSSIN(M)
!      FP1(L)=FP1(L)+PCBS(LL,M)*TC+PSBS(LL,M)*TS
!      ENDDO
!      CNT=-0.5*DELTD2*G*HRVO(LN )*HVTMP(LN )
!      IF(ISPBS(LL).GE.1)THEN
!       TMP=DELT*SQRT(G*HMV(LN))*DYIV(LN)
!       CC(L)=CNT*(1.+TMP)/(1.-TMP)
!       CN(L)=CNT
!       FP1(L)=CNT*(4.*FP1(L)
!     & -2.*SQRT(G*HMV(LN))*FVHDXE(LN)*DXIV(LN)*HVI(LN))/(1.-TMP)
!      ELSE
!       FP1(LN)=-CNT*FP1(L)
!       FP1(L)=CC(L)*FP1(L)
!      ENDIF
!      ENDDO
!
!----------------------------------------------------------------------C
!
!      DO LL=1,NPBN
!      L=LPBN(LL)
!       CC(L)=DELTI*DXYP(L)
!       CS(L)=0.
!       CW(L)=0.
!       CE(L)=0.
!       CN(L)=0.
!      LS=LSC(L)
!      FP1(L)=PSERT(NPSERN(LL))
!      DO M=1,MTIDE
!      TC=CCCOS(M)
!      TS=SSSIN(M)
!      FP1(L)=FP1(L)+PCBN(LL,M)*TC+PSBN(LL,M)*TS
!      ENDDO
!      CST=-0.5*DELTD2*G*HRVO(L  )*HVTMP(L  )
!      IF(ISPBN(LL).GE.1)THEN
!       TMP=DELT*SQRT(G*HMV(L))*DYIV(L)
!       CC(L)=CST*(1.+TMP)/(1.-TMP)
!       CS(L)=CST
!       FP1(L)=CST*(4.*FP1(L)
!     & +2.*SQRT(G*HMV(L))*FVHDXE(L)*DXIV(L)*HVI(L))/(1.-TMP)
!      ELSE
!       FP1(LS)=-CST*FP1(L)
!       FP1(L)=CC(L)*FP1(L)
!      ENDIF
!      ENDDO
!
!**********************************************************************C
!
! **  ADJUST VOLUME SOURCE AND SINKS
!
!----------------------------------------------------------------------C
!
      IF(ISGWIE.EQ.0)THEN
!
      DO L=2,LA
      IF(QSUME(L).LE.0.)THEN
        IF(H1P(L).LE.HDRY)THEN
          QSUMTMP(L)=0.
         ELSE
          QSUMTMP(L)=-(H1P(L)-HDRY)*DXYP(L)*DELTI
          QSUMTMP(L)=MAX(QSUMTMP(L),QSUME(L))
        ENDIF
       ELSE
        QSUMTMP(L)=QSUME(L)
      ENDIF
      ENDDO
!
      DO L=2,LA
       DIFQVOL=QSUME(L)-QSUMTMP(L)
       DO K=1,KC
       QSUM(L,K)=QSUM(L,K)-DIFQVOL*DZC(K)
       ENDDO
       QSUME(L)=QSUMTMP(L)
      ENDDO
!
      ENDIF
!
!**********************************************************************C
!
! **  ADJUST SOURCES AND SINKS ESTIMATING SURFACE AND GROUNDWATER
! **  AVAILABLE FOR EVAPOTRANSPIRATON AND INFILTRATION
!
!----------------------------------------------------------------------C
!
      IF(ISGWIE.GE.1)THEN

      DO L=2,LA
      RIFTR(L)=0.
      EVAPSW(L)=0.
      EVAPGW(L)=0.
      IF(H1P(L).GT.HDRY)THEN
!       APPLY MAXIMUM ET
        IF(EVAPCVT.LT.0.)THEN
          SVPW=(10.**((0.7859+0.03477*TEM(L,KC))/(1.+0.00412*TEM(L,KC))))
          EVAPT(L)=CLEVAP(L)*0.7464E-3*WINDST(L)*(SVPW-VPA(L))/PATMT(L)
        ENDIF
        EVAPSW(L)=EVAPT(L)*DXYP(L)
        RIFTR(L)=0.
!       CALCULATE DEPTH OF ACTIVE GROUNDWATER ELEV BELOW SURFACE
        DTAGW=BELV(L)-AGWELV(L)
        IF(DTAGW.GT.0.0)THEN
!         INFLITRATION CAN OCCUR, CALCULATE LIMITING RATE TO BRING
!         GW ELEV TO SOIL SURFACE
          RIFTRL=RNPOR*DTAGW*DELTI
!         SET RIFTRL TO MIN OF LIMITING RATE OR ACTUAL RATE
          RIFTRL=MIN(RIFTRM,RIFTRL)
!         ESTIMATE RATE BASED ON AVAILABLE SURFACE WATER
          RAVAIL=(H1P(L)-HDRY)*DELTI-EVAPT(L)
!         SET RIFTRL TO MIN OF AVAILABLE RATE OR LIMITING RATE
          RIFTRL=MIN(RAVAIL,RIFTRL)
!         CONVERT TO VOLUME FLOW UNITS
          RIFTR(L)=RIFTRL*DXYP(L)
        ENDIF
!       ADJUST VOLUME OUTFLOWS OF WET CELLS
        IF(QSUME(L).LT.0.0)THEN
          QSUMIET=RIFTR(L)+EVAPSW(L)
          QEAVAIL=DXYP(L)*(H1P(L)-HDRY)*DELTI-QSUMIET
          QEAVAIL=MAX(QEAVAIL,0.0)
          QEAVAIL=-QEAVAIL
          QSUMTMP(L)=MAX(QSUME(L),QEAVAIL)
         ELSE
          QSUMTMP(L)=QSUME(L)
        ENDIF
       ELSE
        RIFTR(L)=0.
        EVAPSW(L)=0.
        QSUMTMP(L)=MAX(QSUME(L),0.0)
      ENDIF
      ENDDO
!
      DO L=2,LA
      DIFQVOL=QSUME(L)-QSUMTMP(L)
      DO K=1,KC
      QSUM(L,K)=QSUM(L,K)-DIFQVOL*DZC(K)
      ENDDO
      QSUME(L)=QSUMTMP(L)
      ENDDO
!
      ENDIF
!
!**********************************************************************C
!
! **  SET OLD TIME LEVEL TERMS IN CONTINUITY EQUATION FOR
! **  NON BOUNDARY POINTS
! **  HRU=HMU*DYU/DXU & HRV=HMV*DXV/DYV
! **  DXYIP=1/(DXP*DYP)
!
!----------------------------------------------------------------------C
!
      DO L=2,LA
      LN=LNC(L)
      FP1(L)=FP1(L)+SPB(L)*( DELTI*DXYP(L)*P1(L)-0.5*G*(UHDY1E(L+1)-UHDY1E(L)+VHDX1E(LN )-VHDX1E(L)))
      ENDDO
!
!**********************************************************************C
!
! **  ADVANCE EXTERNAL VARIABLES FOR THREE TIME LEVEL STEP
!
!----------------------------------------------------------------------C
!
      IF(ISTL.EQ.3)THEN
        DO L=2,LA
        UHDY2E(L)=UHDY1E(L)
        VHDX2E(L)=VHDX1E(L)
        UHDY1E(L)=UHDYE(L)
        VHDX1E(L)=VHDXE(L)
        U1V(L)=UV(L)
        V1U(L)=VU(L)
!       DELP=P(L)-P1(L)
        P1(L)=P(L)
!       P(L)=P(L)+DELP
        H1U(L)=HU(L)
        H1V(L)=HV(L)
        H1UI(L)=HUI(L)
        H1VI(L)=HVI(L)
        H2P(L)=H1P(L)
        H1P(L)=HP(L)
        AGWELV2(L)=AGWELV1(L)
        AGWELV1(L)=AGWELV(L)
        ENDDO
      ENDIF
!
!C     DO L=2,LA
!C      PAM(L)=P(L)
!C      ENDDO
!
!**********************************************************************C
!
! **  SET NEW TIME LEVEL TERMS IN CONTINUITY EQUATION INCLUDING
! **  HOST-GUEST CHANNAL INTERACTION FOR NON BOUNDARY POINTS
!
! **  REENTER AT 1000 FOR WETTING-DRYING CORRECTION AND CHANNEL
! **  INTERACTION
!
!----------------------------------------------------------------------C

 1000 CONTINUE
!
      DO L=2,LA
      LN=LNC(L)
      FP(L)=FP1(L)-0.5*G*SPB(L)*(SUB(L+1)*FUHDYE(L+1)-SUB(L)*FUHDYE(L)     &
            +SVB(LN )*FVHDXE(LN )-SVB(L)*FVHDXE(L)-2.0*QSUME(L) )
!C      P(L)=0.
      ENDDO
!
      IF(ISGWIE.GE.1)THEN
        DO L=2,LA
        FP(L)=FP(L)-G*SPB(L)*(RIFTR(L)+EVAPSW(L))
        ENDDO
      ENDIF
!
      IF(ISDSOLV.GE.1)THEN
        OPEN(1,FILE='FP.OUT',POSITION='APPEND',STATUS='UNKNOWN')
        WRITE(1,1001)N,ISTL
        DO L=2,LA
        WRITE(1,1001)IL(L),JL(L),FP1(L),FUHDYE(L),FUHDYE(L+1),FVHDXE(L),FVHDXE(LNC(L)),QSUME(L),  &
                     RIFTR(L),EVAPSW(L)
        ENDDO
        CLOSE(1)
        IF(N.EQ.1)THEN
          OPEN(1,FILE='FP1.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
          WRITE(1,1001)IL(L),JL(L),FP1(L),FUHDYE(L),FUHDYE(L+1),FVHDXE(L),FVHDXE(LNC(L)),QSUME(L),&
                       RIFTR(L),EVAPSW(L)
          ENDDO
          CLOSE(1)
        ENDIF
        IF(N.EQ.2)THEN
          OPEN(1,FILE='FP2.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
          WRITE(1,1001)IL(L),JL(L),FP1(L),FUHDYE(L),FUHDYE(L+1),FVHDXE(L),FVHDXE(LNC(L)),QSUME(L),&
                       RIFTR(L),EVAPSW(L)
          ENDDO
          CLOSE(1)
        ENDIF
      ENDIF
!
      DO L=2,LA
      IF(SPB(L).GT.0.)THEN
      LN=LNC(L)
      C1=-0.5*DELTD2*G*SPB(L)
      CS(L)=C1*SVB(L  )*HRVO(L  )*RCY(L  )*HVTMP(L  )
!    &     +(1.-SPB(L))*CS(L)
      CW(L)=C1*SUB(L  )*HRUO(L  )*RCX(L  )*HUTMP(L  )
!    &     +(1.-SPB(L))*CW(L)
      CE(L)=C1*SUB(L+1)*HRUO(L+1)*RCX(L+1)*HUTMP(L+1)
!    &     +(1.-SPB(L))*CE(L)
      CN(L)=C1*SVB(LN )*HRVO(LN )*RCY(LN )*HVTMP(LN )
!    &     +(1.-SPB(L))*CN(L)
      CC(L)=SPB(L)*(DELTI*DXYP(L)-CS(L)-CW(L)-CE(L)-CN(L))
!    &     +(1.-SPB(L))*CC(L)
      ENDIF
      ENDDO
!
!**********************************************************************C
!
! **  INSERT IMPLICT SUB-GRID SCALE CHANNEL INTERACTIONS
!
!----------------------------------------------------------------------C
!
      IF(MDCHH.GE.1)THEN
!
        IF(ISTL.EQ.3)THEN
!
        DO NMD=1,MDCHH
          CCCCHU(NMD)=0.
          CCCCHV(NMD)=0.
          LHOST=LMDCHH(NMD)
          LCHNU=LMDCHU(NMD)
          LCHNV=LMDCHV(NMD)
          GBELVTMP=G*BELV(LHOST)
!         X-DIRECTION CHANNEL
          IF(MDCHTYP(NMD).EQ.1)THEN
            IACTIVE=0
            IF(P(LCHNU).GT.P(LHOST).AND.H2P(LCHNU).GT.HWET)THEN
              HCHNCOR=HWET
              IF(ISCDRY(LCHNU).EQ.0) IACTIVE=1
            ENDIF
            IF(P(LHOST).GT.P(LCHNU).AND.H2P(LHOST).GT.HDRY)THEN
              HCHNCOR=HDRY
              IF(ISCDRY(LHOST).EQ.0) IACTIVE=1
            ENDIF
            IF(IACTIVE.EQ.1)THEN
              WCHAN=DXP(LCHNU)
!              RLCHN=0.5*DYP(LCHNU)+0.25*DYP(LHOST)
!              HCHAN=0.5*DYP(LCHNU)*HP(LCHNU)+0.25*DYP(LHOST)*HP(LHOST)
              RLCHN=0.5*DYP(LCHNU)+CHANLEN(NMD)
              HCHAN=0.5*DYP(LCHNU)*H2P(LCHNU)+CHANLEN(NMD)*H2P(LHOST)
              HCHAN=HCHAN/RLCHN
              IF(HCHAN.GT.0.)THEN
!                TMPVAL=STBX(LCHNU)*DELT/(HCHAN*HCHAN*WCHAN)
                TMPVAL=CHANFRIC(NMD)*DELT/(HCHAN*HCHAN*WCHAN)
                CCCCHU(NMD)=1./(1.+TMPVAL*QCHANUT(NMD))
                HCHANT=HCHAN-HCHNCOR
                HCHANT=MAX(HCHANT,0.0)
                CCCCHV(NMD)=DELT*HCHANT/RLCHN
              ENDIF
            ENDIF
          ENDIF
!         Y-DIRECTION CHANNEL
          IF(MDCHTYP(NMD).EQ.2)THEN
            IACTIVE=0
            IF(P(LCHNV).GT.P(LHOST).AND.H2P(LCHNV).GT.HWET)THEN
              HCHNCOR=HWET
              IF(ISCDRY(LCHNV).EQ.0) IACTIVE=1
            ENDIF
            IF(P(LHOST).GT.P(LCHNV).AND.H2P(LHOST).GT.HDRY)THEN
              HCHNCOR=HDRY
              IF(ISCDRY(LHOST).EQ.0) IACTIVE=1
            ENDIF
            IF(IACTIVE.EQ.1)THEN
              WCHAN=DYP(LCHNV)
!              RLCHN=0.5*DXP(LCHNV)+0.25*DXP(LHOST)
!              HCHAN=0.5*DXP(LCHNV)*HP(LCHNV)+0.25*DXP(LHOST)*HP(LHOST)
              RLCHN=0.5*DXP(LCHNV)+CHANLEN(NMD)
              HCHAN=0.5*DXP(LCHNV)*H2P(LCHNV)+CHANLEN(NMD)*H2P(LHOST)
              HCHAN=HCHAN/RLCHN
              IF(HCHAN.GT.0.)THEN
!                TMPVAL=STBY(LCHNV)*DELT/(HCHAN*HCHAN*WCHAN)
                TMPVAL=CHANFRIC(NMD)*DELT/(HCHAN*HCHAN*WCHAN)
                CCCCHU(NMD)=1./(1.+TMPVAL*QCHANVT(NMD))
                HCHANT=HCHAN-HCHNCOR
                HCHANT=MAX(HCHANT,0.0)
                CCCCHV(NMD)=DELT*HCHANT/RLCHN
              ENDIF
            ENDIF
          ENDIF
          CC(LHOST)=CC(LHOST)+G*CCCCHU(NMD)*CCCCHV(NMD)
          CCCCHH(NMD)=CCCCHU(NMD)*CCCCHV(NMD)
          IF(MDCHTYP(NMD).EQ.1)THEN
            CC(LCHNU)=CC(LCHNU)+G*CCCCHU(NMD)*CCCCHV(NMD)
            FP(LHOST)=FP(LHOST)+G*CCCCHU(NMD)*QCHANUT(NMD)
            FP(LCHNU)=FP(LCHNU)-G*CCCCHU(NMD)*QCHANUT(NMD)
          ENDIF
          IF(MDCHTYP(NMD).EQ.2)THEN
            CC(LCHNV)=CC(LCHNV)+G*CCCCHU(NMD)*CCCCHV(NMD)
            FP(LHOST)=FP(LHOST)+G*CCCCHU(NMD)*QCHANVT(NMD)
            FP(LCHNV)=FP(LCHNV)-G*CCCCHU(NMD)*QCHANVT(NMD)
          ENDIF
        ENDDO
!
        ELSE
!
        DO NMD=1,MDCHH
          CCCCHU(NMD)=0.
          CCCCHV(NMD)=0.
          LHOST=LMDCHH(NMD)
          LCHNU=LMDCHU(NMD)
          LCHNV=LMDCHV(NMD)
          GBELVTMP=G*BELV(LHOST)
!C         X-DIRECTION CHANNEL
          IF(MDCHTYP(NMD).EQ.1)THEN
            IACTIVE=0
            IF(P(LCHNU).GT.P(LHOST).AND.H1P(LCHNU).GT.HWET)THEN
              HCHNCOR=HWET
              IF(ISCDRY(LCHNU).EQ.0) IACTIVE=1
            ENDIF
            IF(P(LHOST).GT.P(LCHNU).AND.H1P(LHOST).GT.HDRY)THEN
              HCHNCOR=HDRY
              IF(ISCDRY(LHOST).EQ.0) IACTIVE=1
            ENDIF
            IF(IACTIVE.EQ.1)THEN
              WCHAN=DXP(LCHNU)
!              RLCHN=0.5*DYP(LCHNU)+0.25*DYP(LHOST)
!              HCHAN=0.5*DYP(LCHNU)*HP(LCHNU)+0.25*DYP(LHOST)*HP(LHOST)
              RLCHN=0.5*DYP(LCHNU)+CHANLEN(NMD)
              HCHAN=0.5*DYP(LCHNU)*H1P(LCHNU)+CHANLEN(NMD)*H1P(LHOST)
              HCHAN=HCHAN/RLCHN
              IF(HCHAN.GT.0.)THEN
!                TMPVAL=STBX(LCHNU)*DELT/(HCHAN*HCHAN*WCHAN)
                TMPVAL=CHANFRIC(NMD)*DELT/(HCHAN*HCHAN*WCHAN)
                CCCCHU(NMD)=1./(1.+TMPVAL*QCHANUT(NMD))
                HCHANT=HCHAN-HCHNCOR
                HCHANT=MAX(HCHANT,0.0)
                CCCCHV(NMD)=DELT*HCHANT/RLCHN
              ENDIF
            ENDIF
          ENDIF
!         Y-DIRECTION CHANNEL
          IF(MDCHTYP(NMD).EQ.2)THEN
            IACTIVE=0
            IF(P(LCHNV).GT.P(LHOST).AND.H1P(LCHNV).GT.HWET)THEN
              HCHNCOR=HWET
              IF(ISCDRY(LCHNV).EQ.0) IACTIVE=1
            ENDIF
            IF(P(LHOST).GT.P(LCHNV).AND.H1P(LHOST).GT.HDRY)THEN
              HCHNCOR=HDRY
              IF(ISCDRY(LHOST).EQ.0) IACTIVE=1
            ENDIF
            IF(IACTIVE.EQ.1)THEN
              WCHAN=DYP(LCHNV)
!              RLCHN=0.5*DXP(LCHNV)+0.25*DXP(LHOST)
!              HCHAN=0.5*DXP(LCHNV)*HP(LCHNV)+0.25*DXP(LHOST)*HP(LHOST)
              RLCHN=0.5*DXP(LCHNV)+CHANLEN(NMD)
              HCHAN=0.5*DXP(LCHNV)*H1P(LCHNV)+CHANLEN(NMD)*H1P(LHOST)
              HCHAN=HCHAN/RLCHN
              IF(HCHAN.GT.0.)THEN
!                TMPVAL=STBY(LCHNV)*DELT/(HCHAN*HCHAN*WCHAN)
                TMPVAL=CHANFRIC(NMD)*DELT/(HCHAN*HCHAN*WCHAN)
                CCCCHU(NMD)=1./(1.+TMPVAL*QCHANVT(NMD))
                HCHANT=HCHAN-HCHNCOR
                HCHANT=MAX(HCHANT,0.0)
                CCCCHV(NMD)=DELT*HCHANT/RLCHN
              ENDIF
            ENDIF
          ENDIF
          CC(LHOST)=CC(LHOST)+G*CCCCHU(NMD)*CCCCHV(NMD)
          CCCCHH(NMD)=CCCCHU(NMD)*CCCCHV(NMD)
          IF(MDCHTYP(NMD).EQ.1)THEN
            CC(LCHNU)=CC(LCHNU)+G*CCCCHU(NMD)*CCCCHV(NMD)
            FP(LHOST)=FP(LHOST)+G*CCCCHU(NMD)*QCHANUT(NMD)
            FP(LCHNU)=FP(LCHNU)-G*CCCCHU(NMD)*QCHANUT(NMD)
          ENDIF
          IF(MDCHTYP(NMD).EQ.2)THEN
            CC(LCHNV)=CC(LCHNV)+G*CCCCHU(NMD)*CCCCHV(NMD)
            FP(LHOST)=FP(LHOST)+G*CCCCHU(NMD)*QCHANVT(NMD)
            FP(LCHNV)=FP(LCHNV)-G*CCCCHU(NMD)*QCHANVT(NMD)
          ENDIF
        ENDDO
!
        ENDIF
!
      ENDIF
!
!**********************************************************************C
!
! **  SCALE COEFFICIENTS IN EXTERNAL MODEL LINEAR EQUATION SYSTEM
!
!----------------------------------------------------------------------C
!
      CCMNM=1.E+18
      DO L=2,LA
        CCMNM=MIN(CCMNM,CC(L))
        FPTMP(L)=FP(L)
      ENDDO
!
      CCMNMI=1./CCMNM
!     WRITE(6,666) CCMNM,CCMNMI
! 666 FORMAT(' CCMIN, CCMINI = ',E12.4,1X,E12.4)
!
      DO LL=1,NPBW
      IF(ISPBW(LL).EQ.0)THEN
        L=LPBW(LL)
        CW(L+1)=0.
      ENDIF
      ENDDO
!
      DO LL=1,NPBE
      IF(ISPBE(LL).EQ.0)THEN
        L=LPBE(LL)
        CE(L-1)=0.
      ENDIF
      ENDDO
!
      DO LL=1,NPBS
      IF(ISPBS(LL).EQ.0)THEN
        L=LPBS(LL)
        LN=LNC(L)
        CS(LN)=0.
      ENDIF
      ENDDO
!
      DO LL=1,NPBN
      IF(ISPBN(LL).EQ.0)THEN
        L=LPBN(LL)
        LS=LSC(L)
        CN(LS)=0.
      ENDIF
      ENDDO
!
      CC(1)=1.
      CC(LC)=1.
!
!----------------------------------------------------------------------C
!
! **  SCALE BY MINIMUM DIAGONAL
!
      IF(IRVEC.EQ.9)THEN
!
      DO L=2,LA
      CCS(L)=CS(L)*CCMNMI
      CCW(L)=CW(L)*CCMNMI
      CCE(L)=CE(L)*CCMNMI
      CCN(L)=CN(L)*CCMNMI
      CCC(L)=CC(L)*CCMNMI
      FPTMP(L)=FPTMP(L)*CCMNMI
      CCCI(L)=1./CCC(L)
      ENDDO
!
      IF(MDCHH.GE.1)THEN
        DO NMD=1,MDCHH
          CCCCHH(NMD)=CCCCHU(NMD)*CCMNMI
        ENDDO
      ENDIF
!
      ENDIF
!
!----------------------------------------------------------------------C
!
! **  SCALE TO NORMAL FORM - NOTE NORMAL FORM CURRENTLY CANNOT BE USED
! **  WITH SUB-GRID SCALE CHANNEL MODEL
!
!      IF(IRVEC.EQ.99)THEN
!
!      DO L=2,LA
!        CCS(L)=CS(L)/SQRT( CC(L)*CC(LSC(L)) )
!        CCW(L)=CW(L)/SQRT( CC(L)*CC(L-1   ) )
!        CCE(L)=CE(L)/SQRT( CC(L)*CC(L+1   ) )
!        CCN(L)=CN(L)/SQRT( CC(L)*CC(LNC(L)) )
!        CCC(L)=1.
!        FPTMP(L)=FPTMP(L)/SQRT( CC(L) )
!        P(L)=P(L)*SQRT( CC(L) )
!        CCCI(L)=1.
!      ENDDO
!
!      ENDIF
!
!----------------------------------------------------------------------C
!
! **  CALL EQUATION SOLVER
!
      IF(MDCHH.EQ.0) CALL CONGRAD (ISTL)
      IF(MDCHH.GE.1) CALL CONGRADC (ISTL)
!
!----------------------------------------------------------------------C
!
! BEGIN CONSTRAINED MINIMIZATION SOLUTION
!
!      DO L=2,LA
!       XSMLC(L-1)=P(L)
!JH       XLSMLC(L-1)=G*(BELV(L)+HDRY)
!       XLSMLC(L-1)=G*BELV(L)
!       XUSMLC(L-1)=1.E4
!      ENDDO
!
!      IF(IRVEC.EQ.99)THEN
!        DO L=2,LA
!          XLSMLC(L-1)=XLSMLC(L-1)*SQRT( CC(L) )
!          XUSMLC(L-1)=XUSMLC(L-1)*SQRT( CC(L) )
!        ENDDO
!      ENDIF
!
!      DO L=2,LA
!       XSMLC(L-1)=MAX(XSMLC(L-1),XLSMLC(L-1))
!      ENDDO
!
!      NTMP=LC-2
!      MTMP=0
!      MEQ=0
!JH     ASMLC=ASMLC(1,1)
!      LDA=1
!JH     BSMLC=BSMLC(1)
!      IPRINT=0
!      NFMAX=ITERM
!JH     IWSMLC=IWSM(LIW)
!      LIWSM=4+MTMP+2*NTMP
!      LWSM=3+MTMP+NTMP*(NTMP+16)
!JH     WSMLC=IWSM(LIW)
!      CALL SMLC01(NTMP,MTMP,MEQ,ASMLC,LDA,BSMLC,XLSMLC,
!     &     XUSMLC,XSMLC,RSQM,IPRINT,NFMAX,IWSMLC,LIWSM,WSMLC,LWSM)
!      DO L=2,LA
!       P(L)=XSMLC(L-1)
!      ENDDO
!
! END CONSTRAINED MINIMIZATION SOLUTION
!
!----------------------------------------------------------------------C
!
! **  REVERSE SCALE IF NORMAL FORM SOLUTION IS USED
!
!      IF(IRVEC.EQ.99)THEN
!
!      DO L=2,LA
!      P(L)=P(L)/SQRT( CC(L) )
!      ENDDO
!
!      ENDIF
!
!----------------------------------------------------------------------C
!
! ** DIAGNOSTICS
!
      IF(ISDSOLV.GE.1)THEN
        OPEN(1,FILE='EQCOEF.OUT',POSITION='APPEND',STATUS='UNKNOWN')
        WRITE(1,1001)N,ISTL
        DO L=2,LA
        SURFTMP=GI*P(L)
!        WRITE(1,1001)IL(L),JL(L),CCS(L),CCW(L),CCC(L),CCE(L),CCN(L),
!     &               FPTMP(L),SURFTMP
        WRITE(1,1001)IL(L),JL(L),CS(L),CW(L),CC(L),CE(L),CN(L),FP(L),SURFTMP
        ENDDO
        IF(MDCHH.GE.1)THEN
          DO NMD=1,MDCHH
            WRITE(1,1001)NMD,MDCHTYP(NMD),CCCCHH(NMD),CCCCHU(NMD),CCCCHV(NMD)
          ENDDO
        ENDIF
        CLOSE(1)
        IF(N.EQ.1)THEN
          OPEN(1,FILE='EQCOEF1.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
          SURFTMP=GI*P(L)
!          WRITE(1,1001)IL(L),JL(L),CCS(L),CCW(L),CCC(L),CCE(L),CCN(L),
!     &               FPTMP(L),SURFTMP
          WRITE(1,1001)IL(L),JL(L),CS(L),CW(L),CC(L),CE(L),CN(L),FP(L),SURFTMP
          ENDDO
          IF(MDCHH.GE.1)THEN
            DO NMD=1,MDCHH
             WRITE(1,1001)NMD,MDCHTYP(NMD),CCCCHH(NMD),CCCCHU(NMD),CCCCHV(NMD)
            ENDDO
          ENDIF
          CLOSE(1)
        ENDIF
        IF(N.EQ.2)THEN
          OPEN(1,FILE='EQCOEF2.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
          SURFTMP=GI*P(L)
!          WRITE(1,1001)IL(L),JL(L),CCS(L),CCW(L),CCC(L),CCE(L),CCN(L),
!     &               FPTMP(L),SURFTMP
          WRITE(1,1001)IL(L),JL(L),CS(L),CW(L),CC(L),CE(L),CN(L),FP(L),SURFTMP
          ENDDO
          IF(MDCHH.GE.1)THEN
            DO NMD=1,MDCHH
             WRITE(1,1001)NMD,MDCHTYP(NMD),CCCCHH(NMD),CCCCHU(NMD),CCCCHV(NMD)
            ENDDO
          ENDIF
          CLOSE(1)
        ENDIF
      ENDIF
!
      IF(ISDSOLV.GE.1)THEN
        OPEN(1,FILE='EQTERM.OUT',POSITION='APPEND',STATUS='UNKNOWN')
        WRITE(1,1001)N,ISTL
        DO L=2,LA
        WRITE(1,1001)IL(L),JL(L),SUB(L),SVB(L),HRUO(L),HRVO(L),HUTMP(L),HVTMP(L)
        ENDDO
        CLOSE(1)
        IF(N.EQ.1)THEN
          OPEN(1,FILE='EQTERM1.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
          WRITE(1,1001)IL(L),JL(L),SUB(L),SVB(L),HRUO(L),HRVO(L),HUTMP(L),HVTMP(L)
          ENDDO
          CLOSE(1)
        ENDIF
        IF(N.EQ.2)THEN
          OPEN(1,FILE='EQTERM2.OUT',POSITION='APPEND',STATUS='UNKNOWN')
          WRITE(1,1001)N,ISTL
          DO L=2,LA
          WRITE(1,1001)IL(L),JL(L),SUB(L),SVB(L),HRUO(L),HRVO(L),HUTMP(L),HVTMP(L)
          ENDDO
          CLOSE(1)
        ENDIF
      ENDIF
!
 1001 FORMAT(2I5,10(1X,E12.4))
 1002 FORMAT(3I4,10(1X,E9.2))
!
!**********************************************************************C
!
! **  CALCULATE UHEX AND VHEX AND TOTAL DEPTHS AT TIME LEVEL (N+1)
! **  HRU=SUB*DYU/DXU & HRV=SVB*DXV/DYV
!
!----------------------------------------------------------------------C
!
      DO L=2,LA
      LS=LSC(L)
      UTMP=SUB(L)*( FUHDYE(L)-DELTD2*HRUO(L)*RCX(L)*HUTMP(L)*(P(L)-P(L-1)) )
      VTMP=SVB(L)*( FVHDXE(L)-DELTD2*HRVO(L)*RCY(L)*HVTMP(L)*(P(L)-P(LS )) )
      UHDYE(L)=UTMP
      VHDXE(L)=VTMP
      UHE(L)=UTMP*DYIU(L)
      VHE(L)=VTMP*DXIV(L)
      ENDDO
!
!**********************************************************************C
!
! **  CALCULATE NEW SUB-GRID SCALE CHANNEL EXCHANGE FLOWS
!
!----------------------------------------------------------------------C
!
      IF(MDCHH.GE.1)THEN
        DO NMD=1,MDCHH
          LHOST=LMDCHH(NMD)
          LCHNU=LMDCHU(NMD)
          LCHNV=LMDCHV(NMD)
          IF(MDCHTYP(NMD).EQ.1)THEN
            QCHANU(NMD)=CCCCHU(NMD)*QCHANUT(NMD)-CCCCHU(NMD)*CCCCHV(NMD)*(P(LHOST)-P(LCHNU))
            QCHANV(NMD)=0.
          ENDIF
          IF(MDCHTYP(NMD).EQ.2)THEN
            QCHANV(NMD)=CCCCHU(NMD)*QCHANVT(NMD)-CCCCHU(NMD)*CCCCHV(NMD)*(P(LHOST)-P(LCHNV))
            QCHANU(NMD)=0.
          ENDIF
        ENDDO
      ENDIF
!
!**********************************************************************C
!
! **  CALCULATE REVISED CELL DEPTHS BASED ON NEW HORIZONTAL
! **  TRANSPORTS AT (N+1)
!
!----------------------------------------------------------------------C
!
      IF(ISTL.EQ.3)THEN
        DO L=2,LA
        LN=LNC(L)
        HPPTMP=H2P(L)+DELT*DXYIP(L)*(QSUME(L)-0.5*(UHDYE(L+1)+UHDY2E(L+1)-UHDYE(L)-UHDY2E(L)      &
               +VHDXE(LN)+VHDX2E(LN)-VHDXE(L)-VHDX2E(L)))
        IF(ISGWIE.GE.1) HPPTMP=HPPTMP-DELT*DXYIP(L)*(RIFTR(L)+EVAPSW(L))
        HP(L)=SPB(L)*HPPTMP+(1.-SPB(L))*(GI*P(L)-BELV(L))
        ENDDO
       ELSE
        DO L=2,LA
        LN=LNC(L)
        HPPTMP=H1P(L)+DELT*DXYIP(L)*(QSUME(L)-0.5*(UHDYE(L+1)+UHDY1E(L+1)-UHDYE(L)-UHDY1E(L)      &
               +VHDXE(LN)+VHDX1E(LN)-VHDXE(L)-VHDX1E(L)))
        IF(ISGWIE.GE.1) HPPTMP=HPPTMP-DELT*DXYIP(L)*(RIFTR(L)+EVAPSW(L))
        HP(L)=SPB(L)*HPPTMP+(1.-SPB(L))*(GI*P(L)-BELV(L))
        ENDDO
      ENDIF
!
!**********************************************************************C
!
! **  ADD CHANNEL INTERACTION EXCHANGES
!
!----------------------------------------------------------------------C
!
      IF(MDCHH.GE.1)THEN
        DO NMD=1,MDCHH
        IF(MDCHTYP(NMD).EQ.1)THEN
          HP(LMDCHH(NMD))=HP(LMDCHH(NMD))+DELT*DXYIP(LMDCHH(NMD))*QCHANU(NMD)
          HP(LMDCHU(NMD))=HP(LMDCHU(NMD))-DELT*DXYIP(LMDCHU(NMD))*QCHANU(NMD)
        ENDIF
        IF(MDCHTYP(NMD).EQ.2)THEN
          HP(LMDCHH(NMD))=HP(LMDCHH(NMD))+DELT*DXYIP(LMDCHH(NMD))*QCHANV(NMD)
          HP(LMDCHV(NMD))=HP(LMDCHV(NMD))-DELT*DXYIP(LMDCHV(NMD))*QCHANV(NMD)
        ENDIF
        ENDDO
      ENDIF
!
!**********************************************************************C
!
! **  PERFORM FINAL UPDATES OF P,HU, AND HV
!
!----------------------------------------------------------------------C
!
      DO L=2,LA
      P(L)=G*(HP(L)+BELV(L))
      ENDDO
!
      DO L=2,LA
      LS=LSC(L)
!      HU(L)=0.5*(HP(L)+HP(L-1))
!      HV(L)=0.5*(HP(L)+HP(LS))
       HU(L)=0.5*(DXP(L)*DYP(L)*HP(L)+DXP(L-1)*DYP(L-1)*HP(L-1))/(DXU(L)*DYU(L))
       HV(L)=0.5*(DXP(L)*DYP(L)*HP(L)+DXP(LS )*DYP(LS)*HP(LS ))/(DXV(L)*DYV(L))
      ENDDO
!
      DO L=2,LA
      HPI(L)=1./HP(L)
      HUI(L)=1./HU(L)
      HVI(L)=1./HV(L)
      ENDDO
!
!
!**********************************************************************C
!
! **  CHECK FOR DRYING AND RESOLVE EQUATIONS IF NECESSARY
!
!----------------------------------------------------------------------C
!
      IF(ISDRY.GT.0)THEN
      OPEN(1,FILE='DRYWET.LOG',POSITION='APPEND',STATUS='UNKNOWN')
!
      ICORDRY=0
      DO L=2,LA
      LS=LSC(L)
      LN=LNC(L)
!
      IF(HP(L).LE.HDRY)THEN
        IF(ISCDRY(L).EQ.0)THEN
          ISCDRY(L)=1
          ICORDRY=1
!         WRITE(1,6945)N,IL(L),JL(L),HP(L),H1P(L),H2P(L)
!         WRITE(6,6945)N,IL(L),JL(L),HP(L),H1P(L),H2P(L)
!         WRITE(8,6945)N,IL(L),JL(L),HP(L),H1P(L),H2P(L)
        ENDIF
        SUB(L)=0.
        SVB(L)=0.
        SUB(L+1)=0.
        SVB(LN)=0.
        SBX(L)=0.
        SBY(L)=0.
        SBX(L+1)=0.
        SBY(LN)=0.
      ENDIF
!
      ENDDO
!
      IF(ICORDRY.EQ.1)THEN
        NCORDRY=NCORDRY+1
        GOTO 1000
      ENDIF
!
      CLOSE(1)
      ENDIF
!
!SO   WRITE(6,6960)NCORDRY
!TMP      WRITE(8,6960)NCORDRY
!
 6960 FORMAT(' NCORDRY =', I5)
 6961 FORMAT(' UNSTABLE, NCORDRY =', I5)
!
 9999 CONTINUE
!
!**********************************************************************C
!
! **  PERFORM FINAL UPDATES OF P,HU, AND HV
!
!----------------------------------------------------------------------C
!
      DO L=2,LA
      P(L)=G*(HP(L)+BELV(L))
      ENDDO
!
      DO L=2,LA
      LS=LSC(L)
!      HU(L)=0.5*(HP(L)+HP(L-1))
!      HV(L)=0.5*(HP(L)+HP(LS))
       HU(L)=0.5*(DXP(L)*DYP(L)*HP(L)+DXP(L-1)*DYP(L-1)*HP(L-1))/(DXU(L)*DYU(L))
       HV(L)=0.5*(DXP(L)*DYP(L)*HP(L)+DXP(LS )*DYP(L-1)*HP(LS ))/(DXV(L)*DYV(L))
      ENDDO
!
      DO L=2,LA
      HPI(L)=1./HP(L)
      HUI(L)=1./HU(L)
      HVI(L)=1./HV(L)
      ENDDO
!
!**********************************************************************C
!
! **  PERFORM UPDATE ON GROUNDWATER ELEVATION
!
!----------------------------------------------------------------------C
!
      IF(ISGWIE.GE.1)THEN
!
        DO L=2,LA
        QSUM(L,KC)=QSUM(L,KC)-EVAPSW(L)
        QSUM(L,1 )=QSUM(L,1 )-RIFTR(L)
        ENDDO
!
!       INFILTRATION STEP
!
        RNPORI=1./RNPOR
        IF(ISTL.EQ.3)THEN
          DO L=2,LA
          AGWELV(L)=AGWELV2(L)+RNPORI*DELT*DXYIP(L)*RIFTR(L)
          ENDDO
         ELSE
          DO L=2,LA
          AGWELV(L)=AGWELV1(L)+RNPORI*DELT*DXYIP(L)*RIFTR(L)
          ENDDO
        ENDIF
        DO L=2,LA
        AGWELV(L)=MIN(AGWELV(L),BELV(L))
        ENDDO
!
!       ET STEP
!
        DO L=2,LA
        IF(EVAPCVT.LT.0.)THEN
          SVPW=(10.**((0.7859+0.03477*TEM(L,KC))/(1.+0.00412*TEM(L,KC))))
          EVAPT(L)=CLEVAP(L)*0.7464E-3*WINDST(L)*(SVPW-VPA(L))/PATMT(L)
        ENDIF
        ETGWTMP=EVAPT(L)-EVAPSW(L)*DXYIP(L)
        ETGWTMP=MAX(ETGWTMP,0.0)
        ETGWAVL=RNPOR*DELTI*(AGWELV(L)-BELAGW(L))
        ETGWAVL=MAX(ETGWAVL,0.0)
        ETGWTMP=MIN(ETGWTMP,ETGWAVL)
        EVAPGW(L)=ETGWTMP*DXYP(L)
        ENDDO
        DO L=2,LA
        AGWELV(L)=AGWELV(L)-RNPORI*DELT*DXYIP(L)*EVAPGW(L)
        ENDDO
        DO L=2,LA
        AGWELV(L)=MAX(AGWELV(L),BELAGW(L))
        ENDDO
!
      ENDIF
!
!**********************************************************************C
!
! **  CHECK FOR NEGATIVE DEPTHS
!
!----------------------------------------------------------------------C
!
      IF(ISNEGH.GE.1)THEN
      INEGFLG=0
!
      DO L=2,LA
      IF(HP(L).LT.0.)THEN
      INEGFLG=1
      LN=LNC(L)
      LS=LSC(L)
      WRITE (6,6060)IL(L),JL(L),ISCDRY(L),HP(L),H1P(L),H2P(L)
      WRITE (6,6061)IL(L),JL(L),ISCDRY(L-1),HU(L),H1U(L)
      WRITE (6,6062)IL(L),JL(L),ISCDRY(L+1),HU(L+1),H1U(L+1)
      WRITE (6,6063)IL(L),JL(L),ISCDRY(LS),HV(L),H1V(L)
      WRITE (6,6064)IL(L),JL(L),ISCDRY(LN),HV(LN),H1V(LN)
!      WRITE (8,6060)IL(L),JL(L),ISCDRY(L),HP(L),H1P(L),H2P(L)   !hnr 7/27/2009
!      WRITE (8,6061)IL(L),JL(L),ISCDRY(L-1),HU(L),H1U(L)   !hnr 7/27/2009
!      WRITE (8,6062)IL(L),JL(L),ISCDRY(L+1),HU(L+1),H1U(L+1)   !hnr 7/27/2009
!      WRITE (8,6063)IL(L),JL(L),ISCDRY(LS),HV(L),H1V(L)   !hnr 7/27/2009
!      WRITE (8,6064)IL(L),JL(L),ISCDRY(LN),HV(LN),H1V(LN)   !hnr 7/27/2009
       
      IF(BMDFLAG.GT.0) THEN                                         !HNR_GHD 6/2022 BMD2                     
        WRITE(*,*)'OPTIMIZING AND CLOSING BMD2 FILE'
        CALL BMD2ENDFRAMES(HANDLEBMD2,IERROR)
        IF(iError .gt. 0)Then
          Call bmd2getlasterror(80,errMessage)
          Write(*,*)errMessage
          Stop
        End IF
        CALL BMD2CLOSE(HANDLEBMD2,IERROR)
        IF(iError .gt. 0)Then
          Call bmd2getlasterror(80,errMessage)
          Write(*,*)errMessage
          Stop
        End IF
        WRITE(*,*)'BMD2 FILE SUCCESSFULLY CLOSED.'
      ENDIF                                         !HNR_GHD 6/2022 BMD2                     
      
      IF (ISWASP.EQ.8) THEN                                !hnr
        write(6,*)'  '                                     !hnr
        CALL hlclose(Ihl_handle,ierror)                    !hnr
        if(ierror .gt. 0)then                              !hnr
          call hlgetlasterror(errstring)                   !hnr
          write(6,6000) ierror, errstring,'CLOSING'        !hnr
6000      format('Error ',I10, ' : ', A30,A10)             !hnr
          stop                                             !hnr
        end if                                             !hnr
      END IF                                               !hnr
      STOP                                                 !hnr
      ENDIF
      ENDDO
!
!      DO L=2,LA
!      IF(HU(L).LT.0.)THEN
!      INEGFLG=1
!      LN=LNC(L)
!      LS=LSC(L)
!      WRITE (6,6060)IL(L),JL(L),ISCDRY(L),HP(L),H1P(L),H2P(L)
!      WRITE (6,6061)IL(L),JL(L),ISCDRY(L-1),HU(L),H1U(L)
!      WRITE (6,6062)IL(L),JL(L),ISCDRY(L+1),HU(L+1),H1U(L+1)
!      WRITE (6,6063)IL(L),JL(L),ISCDRY(LS),HV(L),H1V(L)
!      WRITE (6,6064)IL(L),JL(L),ISCDRY(LN),HV(LN),H1V(LN)
!      WRITE (8,6060)IL(L),JL(L),ISCDRY(L),HP(L),H1P(L),H2P(L)
!      WRITE (8,6061)IL(L),JL(L),ISCDRY(L-1),HU(L),H1U(L)
!      WRITE (8,6062)IL(L),JL(L),ISCDRY(L+1),HU(L+1),H1U(L+1)
!      WRITE (8,6063)IL(L),JL(L),ISCDRY(LS),HV(L),H1V(L)
!      WRITE (8,6064)IL(L),JL(L),ISCDRY(LN),HV(LN),H1V(LN)
!      ENDIF
!      ENDDO
!
!
!      DO L=2,LA
!      IF(HV(L).LT.0.)THEN
!      INEGFLG=1
!      LN=LNC(L)
!      LS=LSC(L)
!      WRITE (6,6060)IL(L),JL(L),ISCDRY(L),HP(L),H1P(L),H2P(L)
!      WRITE (6,6061)IL(L),JL(L),ISCDRY(L-1),HU(L),H1U(L)
!      WRITE (6,6062)IL(L),JL(L),ISCDRY(L+1),HU(L+1),H1U(L+1)
!      WRITE (6,6063)IL(L),JL(L),ISCDRY(LS),HV(L),H1V(L)
!      WRITE (6,6064)IL(L),JL(L),ISCDRY(LN),HV(LN),H1V(LN)
!      WRITE (8,6060)IL(L),JL(L),ISCDRY(L),HP(L),H1P(L),H2P(L)
!      WRITE (8,6061)IL(L),JL(L),ISCDRY(L-1),HU(L),H1U(L)
!      WRITE (8,6062)IL(L),JL(L),ISCDRY(L+1),HU(L+1),H1U(L+1)
!      WRITE (8,6063)IL(L),JL(L),ISCDRY(LS),HV(L),H1V(L)
!      WRITE (8,6064)IL(L),JL(L),ISCDRY(LN),HV(LN),H1V(LN)
!      ENDIF
!      ENDDO
!
      ENDIF
!
      IF(ISNEGH.EQ.2)THEN
      IF(INEGFLG.EQ.1)THEN
!
        IF(MDCHH.GT.0)THEN
        DO NMD=1,MDCHH
!          WRITE(8,8000)   !hnr 7/27/2009
          LHOST=LMDCHH(NMD)
          IHOST=IL(LHOST)
          JHOST=JL(LHOST)
          LCHNU=LMDCHU(NMD)
          LCHNV=LMDCHV(NMD)
!         X-DIRECTION CHANNEL
          IF(MDCHTYP(NMD).EQ.1)THEN
          ICHNU=IL(LCHNU)
          JCHNU=JL(LCHNU)
!          WRITE(8,8001)NMD,MDCHTYP(NMD),ICHNU,JCHNU,ISCDRY(LCHNU),   !hnr 7/27/2009
!     &                 P(LCHNU),HP(LCHNU),QCHANU(NMD)   !hnr 7/27/2009
!          WRITE(8,8002)IHOST,JHOST,P(LHOST),ISCDRY(LHOST),   !hnr 7/27/2009
!     &                 HP(LHOST),QCHANUN(NMD)   !hnr 7/27/2009
          ENDIF
!         Y-DIRECTION CHANNEL
          IF(MDCHTYP(NMD).EQ.2)THEN
          ICHNV=IL(LCHNV)
          JCHNV=JL(LCHNV)
!          WRITE(8,8001)NMD,MDCHTYP(NMD),ICHNV,JCHNV,ISCDRY(LCHNV),   !hnr 7/27/2009
!     &                 P(LCHNV),HP(LCHNV),QCHANV(NMD)   !hnr 7/27/2009
!          WRITE(8,8002)IHOST,JHOST,ISCDRY(LHOST),P(LHOST),   !hnr 7/27/2009
!     &                 HP(LHOST),QCHANVN(NMD)   !hnr 7/27/2009
          ENDIF
        ENDDO
        ENDIF
!
        CALL RESTOUT(1)
!
        OPEN(1,FILE='EQCOEF.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQCOEF.OUT',POSITION='APPEND',STATUS='UNKNOWN')
        WRITE(1,1001)N,ISTL
        DO L=2,LA
        SURFTMP=GI*P(L)
        WRITE(1,1001)IL(L),JL(L),CCS(L),CCW(L),CCC(L),CCE(L),CCN(L),FPTMP(L),SURFTMP
        ENDDO
        CLOSE(1)
!
        OPEN(1,FILE='EQTERM.OUT',STATUS='UNKNOWN')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='EQTERM.OUT',POSITION='APPEND',STATUS='UNKNOWN')
        WRITE(1,1001)N,ISTL
        DO L=2,LA
        WRITE(1,1002)IL(L),JL(L),SUB(L),SVB(L),HRUO(L),HRVO(L),HUTMP(L),HVTMP(L)
        ENDDO
        CLOSE(1)
!
        OPEN(1,FILE='CFLMAX.OUT')
        CLOSE(1,STATUS='DELETE')
        OPEN(1,FILE='CFLMAX.OUT')
        DO L=2,LA
         WRITE(1,1991)IL(L),JL(L),(CFLUUU(L,K),K=1,KC)
         WRITE(1,1992)(CFLVVV(L,K),K=1,KC)
         WRITE(1,1992)(CFLWWW(L,K),K=1,KC)
         WRITE(1,1992)(CFLCAC(L,K),K=1,KC)
        ENDDO
        CLOSE(1)
!
        STOP
!
      ENDIF
      ENDIF
!!
 1991 FORMAT(2I5,52F8.3)
 1992 FORMAT(10X,52F8.3)
 6060 FORMAT('  NEG DEPTH AT I,J =',3I4,'  HP,H1P,H2P =',3(2X,E12.4))
 6061 FORMAT('  NEG DEPTH AT I,J =',3I4,'  HUW,H1UW =',2(2X,E12.4))
 6062 FORMAT('  NEG DEPTH AT I,J =',3I4,'  HUE,H1UE =',2(2X,E12.4))
 6063 FORMAT('  NEG DEPTH AT I,J =',3I4,'  HVS,H1VS =',2(2X,E12.4))
 6064 FORMAT('  NEG DEPTH AT I,J =',3I4,'  HVN,H1VN =',2(2X,E12.4))
 8001 FORMAT(5I5,3E13.4)
 8002 FORMAT(10X,3I5,3E13.4)
 8000 FORMAT(' NMD MTYP   I    J   IDRY      P         H            Q')
!
!**********************************************************************C
!
 6910 FORMAT('  DRYING AT N,I,J =',I10,2I6,'  HP,H1P,H2P =',3(2X,E12.4))
 6911 FORMAT('  DRY W FACE N,I,J =',I10,2I6,' HU,H,H1 =',3(2X,E12.4))
 6912 FORMAT('  DRY E FACE N,I,J =',I10,2I6,' HU,H,H1 =',3(2X,E12.4))
 6913 FORMAT('  DRY S FACE N,I,J =',I10,2I6,' HV,H,H1 =',3(2X,E12.4))
 6914 FORMAT('  DRY N FACE N,I,J =',I10,2I6,' HV,H,H1 =',3(2X,E12.4))
!
 6920 FORMAT('  WETTING AT N,I,J =',I10,2I6,' HP,H1P,H2P =',3(2X,E12.4))
 6921 FORMAT('  WET S FACE N,I,J =',I10,2I6,' HV,H,H1 =',3(2X,E12.4))
 6922 FORMAT('  WET W FACE N,I,J =',I10,2I6,' HU,H,H1 =',3(2X,E12.4))
 6923 FORMAT('  WET E FACE N,I,J =',I10,2I6,' HU,H,H1 =',3(2X,E12.4))
 6924 FORMAT('  WET N FACE N,I,J =',I10,2I6,' HV,H,H1 =',3(2X,E12.4))
!
 6930 FORMAT('  WET BY VOL  N,I,J =',I10,2I6,' HP,H1P,H2P =',3(2X,E12.4))
 6940 FORMAT('  RESOLVE,  N,I,J =',I10,2I6,' HP,H1P,H2P =',3(2X,E12.4))
 6941 FORMAT('  RESOLVE,  N,I,J =',I10,2I6,' HUE,HP,H1P =',3(2X,E12.4))
 6942 FORMAT('  RESOLVE,  N,I,J =',I10,2I6,' HUW,HP,H1P =',3(2X,E12.4))
 6943 FORMAT('  RESOLVE,  N,I,J =',I10,2I6,' HVS,HP,H1P =',3(2X,E12.4))
 6944 FORMAT('  RESOLVE,  N,I,J =',I10,2I6,' HVN,HP,H1P =',3(2X,E12.4))
 6945 FORMAT('  RESOLVE NEG,  N,I,J =',I10,2I6,' HP,H1P,H2P =',3(2X,E12.4))
 6950 FORMAT('  RESOLVE, NEG DEP N,I,J =',I10,2I6,' HP,H1P,H2P =',3(2X,E12.4))
!
!**********************************************************************C
!
! **  CALCULATE THE EXTERNAL DIVERGENCE
!
!----------------------------------------------------------------------C
!
      IF(ISDIVEX.EQ.1)THEN
!
      DIVEXMX=0.
      DIVEXMN=1000000.
!
!----------------------------------------------------------------------C
!
      IF(ISTL.EQ.3)THEN
!
      DO L=2,LA
      IF(SPB(L).NE.0)THEN
      LN=LNC(L)
      DIVEX=SPB(L)*(DXYP(L)*(HP(L)-H2P(L))*DELTI+0.5*(UHDYE(L+1)+UHDY2E(L+1)-UHDYE(L)-UHDY2E(L)   &
            +VHDXE(LN)+VHDX2E(LN)-VHDXE(L)-VHDX2E(L))-QSUME(L)+RIFTR(L)+EVAPSW(L))
      IF(DIVEX.GT.DIVEXMX)THEN
       DIVEXMX=DIVEX
       LMAX=L
      ENDIF
      IF(DIVEX.LT.DIVEXMN)THEN
       DIVEXMN=DIVEX
       LMIN=L
      ENDIF
      ENDIF
      ENDDO
!
      ELSE
!
      DO L=2,LA
      IF(SPB(L).NE.0)THEN
      LN=LNC(L)
      DIVEX=SPB(L)*(DXYP(L)*(HP(L)-H1P(L))*DELTI+0.5*(UHDYE(L+1)+UHDY1E(L+1)-UHDYE(L)-UHDY1E(L)+  &
            VHDXE(LN)+VHDX1E(LN)-VHDXE(L)-VHDX1E(L))-QSUME(L)+RIFTR(L)+EVAPSW(L))
      IF(DIVEX.GT.DIVEXMX)THEN
       DIVEXMX=DIVEX
       LMAX=L
      ENDIF
      IF(DIVEX.LT.DIVEXMN)THEN
       DIVEXMN=DIVEX
       LMIN=L
      ENDIF
      ENDIF
      ENDDO
!
      ENDIF
!
      IMAX=IL(LMAX)
      JMAX=JL(LMAX)
      IMIN=IL(LMIN)
      JMIN=JL(LMIN)
!
      WRITE(6,6628)DIVEXMX,IMAX,JMAX
      WRITE(6,6629)DIVEXMN,IMIN,JMIN
!
!----------------------------------------------------------------------C
!
      ENDIF
!
!----------------------------------------------------------------------C
!
  566 FORMAT('  I=',I5,3X,'J=',I5,3X,'HP=',F12.4)
 6628 FORMAT('  DIVEXMX=',E13.5,5X,2I10)
 6629 FORMAT('  DIVEXMN=',E13.5,5X,2I10)
!
!**********************************************************************C
!
! **  UPDATE ZERO DIMENSION VOLUME BALANCE
!
!----------------------------------------------------------------------C
!
      IF(ISDRY.GE.1.AND.ISTL.EQ.3)THEN
        VOLADD=0.
        DO L=2,LA
        IF(SPB(L).NE.0)THEN
          VOLADD=VOLADD+QSUME(L)-RIFTR(L)-EVAPSW(L)
        ENDIF
        ENDDO
        VOLADD=VOLADD*DT
        VOLZERD=VOLZERD+VOLADD
        VETZERD=VETZERD+VOLADD+DT*EVAPSW(L)
      ENDIF

 5303 FORMAT(2X,F10.4,2X,F10.5,3(2X,E13.5))
!
!**********************************************************************C
!
      RETURN
      END
